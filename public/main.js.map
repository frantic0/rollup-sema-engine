{"version":3,"file":"main.js","sources":["../node_modules/sema-engine/sema-engine.mjs","../src/main.js"],"sourcesContent":["class RingBuffer{static getStorageForCapacity(e,t){if(!t.BYTES_PER_ELEMENT)throw\"Pass in a ArrayBuffer subclass\";var o=8+(e+1)*t.BYTES_PER_ELEMENT;return new SharedArrayBuffer(o)}constructor(e,t){if(!ArrayBuffer.__proto__.isPrototypeOf(t)&&void 0!==t.BYTES_PER_ELEMENT)throw\"Pass a concrete typed array class as second argument\";this._type=t,this.capacity=(e.byteLength-8)/t.BYTES_PER_ELEMENT,this.buf=e,this.write_ptr=new Uint32Array(this.buf,0,1),this.read_ptr=new Uint32Array(this.buf,4,1),this.storage=new t(this.buf,8,this.capacity)}type(){return this._type.name}push(e){var t=Atomics.load(this.read_ptr,0),o=Atomics.load(this.write_ptr,0);if((o+1)%this._storage_capacity()==t)return 0;let r=Math.min(this._available_write(t,o),e.length),n=Math.min(this._storage_capacity()-o,r),i=r-n;return this._copy(e,0,this.storage,o,n),this._copy(e,n,this.storage,0,i),Atomics.store(this.write_ptr,0,(o+r)%this._storage_capacity()),r}pop(e){var t=Atomics.load(this.read_ptr,0),o=Atomics.load(this.write_ptr,0);if(o==t)return 0;let r=Math.min(this._available_read(t,o),e.length),n=Math.min(this._storage_capacity()-t,e.length),i=r-n;return this._copy(this.storage,t,e,0,n),this._copy(this.storage,0,e,n,i),Atomics.store(this.read_ptr,0,(t+r)%this._storage_capacity()),r}empty(){var e=Atomics.load(this.read_ptr,0);return Atomics.load(this.write_ptr,0)==e}full(){var e=Atomics.load(this.read_ptr,0);return(Atomics.load(this.write_ptr,0)+1)%this.capacity!=e}capacity(){return this.capacity-1}available_read(){var e=Atomics.load(this.read_ptr,0),t=Atomics.load(this.write_ptr,0);return this._available_read(e,t)}available_write(){var e=Atomics.load(this.read_ptr,0),t=Atomics.load(this.write_ptr,0);return this._available_write(e,t)}_available_read(e,t){return t>e?t-e:t+this._storage_capacity()-e}_available_write(e,t){let o=e-t-1;return t>=e&&(o+=this._storage_capacity()),o}_storage_capacity(){return this.capacity}_copy(e,t,o,r,n){for(var i=0;i<n;i++)o[r+i]=e[t+i]}}const getBase64=e=>{if(-1!==e.indexOf(\";base64,\")){var t=e.indexOf(\";base64,\")+8;return!!e.slice(t).match(/^([A-Za-z0-9+\\/]{4})*([A-Za-z0-9+\\/]{4}|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{2}==)$/)&&e.slice(t)}return!1},_keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",removePaddingFromBase64=e=>64===Module.maxiTools._keyStr.indexOf(e.charAt(e.length-1))?e.substring(0,e.length-1):e,loadSampleToArray=(e,t,o,r)=>{var n=[],i=getBase64(o);if(i){var s=i.length/4*3,a=new ArrayBuffer(s);i=removePaddingFromBase64(removePaddingFromBase64(i));var l,c,p,u,g,d,m,h=parseInt(i.length/4*3,10),I=0,b=0;for(l=new Uint8Array(a),i=i.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\"),I=0;I<h;I+=3)c=_keyStr.indexOf(i.charAt(b++))<<2|(g=_keyStr.indexOf(i.charAt(b++)))>>4,p=(15&g)<<4|(d=_keyStr.indexOf(i.charAt(b++)))>>2,u=(3&d)<<6|(m=_keyStr.indexOf(i.charAt(b++))),l[I]=c,64!==d&&(l[I+1]=p),64!==m&&(l[I+2]=u);e.decodeAudioData(a,(function(e){let o=e.getChannelData(0);void 0!==n&&void 0!==r&&r.port.postMessage({sample:t,buffer:o})}),(function(e){console.log(\"Error decoding source!\")}))}else{var C=new XMLHttpRequest;C.addEventListener(\"load\",(()=>console.log(\"The transfer is complete.\"))),C.open(\"GET\",o,!0),C.responseType=\"arraybuffer\",C.onload=function(){e.decodeAudioData(C.response,(function(e){let o=e.getChannelData(0);void 0!==n&&void 0!==r&&r.port.postMessage({sample:t,buffer:o})}),(function(e){console.log(\"Error decoding source!\")}))},C.send()}return\"Loading module\"};class Event{constructor(e){this.eventName=e,this.callbacks=[]}registerCallback(e){this.callbacks.push(e)}unregisterCallback(e){const t=this.callbacks.indexOf(e);t>-1&&this.callbacks.splice(t,1)}emit(e){this.callbacks.slice(0).forEach((t=>{t(e)}))}}class Dispatcher{constructor(){this.events={}}dispatch(e,t){const o=this.events[e];o&&o.emit(t)}addEventListener(e,t){let o=this.events[e];o||(o=new Event(e),this.events[e]=o),o.registerCallback(t)}removeEventListener(e,t){const o=this.events[e];o&&o.callbacks.indexOf(t)>-1&&(o.unregisterCallback(t),0===o.callbacks.length&&delete this.events[e])}}class Engine{constructor(){if(Engine.instance)return Engine.instance;Engine.instance=this,this.analysers={},this.sharedArrayBuffers={},this.dispatcher=new Dispatcher,this.samplesLoaded=!1}addEventListener(e,t){if(!(this.dispatcher&&e&&t))throw new Error(\"Error adding event listener to Engine\");this.dispatcher.addEventListener(e,t)}asyncPostToProcessor(e){if(!(e&&this.audioWorkletNode&&this.audioWorkletNode.port))throw new Error(\"Error async posting to processor\");console.log(\"DEBUG:AudioEngine:onMessagingEventHandler:\"),console.log(e),this.audioWorkletNode.port.postMessage(e)}createSharedBuffer(e,t,o){let r=RingBuffer.getStorageForCapacity(32*o,Float64Array),n=new RingBuffer(r,Float64Array);return this.audioWorkletNode.port.postMessage({func:\"sab\",value:r,ttype:t,channelID:e,blocksize:o}),this.sharedArrayBuffers[e]={sab:r,rb:n},r}pushSharedBuffer(e){let t=new RingBuffer(e.value,Float64Array);this.audioWorkletNode.port.postMessage({func:\"sab\",value:e.value,ttype:e.ttype,channelID:e.channelID,blocksize:e.blocksize}),this.sharedArrayBuffers[e.channelID]={sab:e.value,rb:t}}pushDataToSharedBuffer(e,t){if(!(e&&t&&(Array.isArray(t),1)))throw new Error(\"Error in function parameters\");this.sharedArrayBuffers&&this.sharedArrayBuffers[e]&&this.sharedArrayBuffers[e].rb.push(t)}pollAnalyserData(e){if(void 0!==e){const t=new Uint8Array(e.fftSize),o=new Uint8Array(e.fftSize);return e.getByteTimeDomainData(t),e.getByteFrequencyData(o),{smoothingTimeConstant:e.smoothingTimeConstant,fftSize:e.fftSize,frequencyDataArray:o,timeDataArray:t}}}createAnalyser(e,t){if(void 0!==this.audioContext&&void 0!==e&&void 0!==t){let o=this.audioContext.createAnalyser();o.smoothingTimeConstant=.25,o.fftSize=256,o.minDecibels=-90,o.maxDecibels=-0,this.audioWorkletNode.connect(o);let r=-1,n={};this.analysers[e]={analyser:o,analyserFrameId:r,callback:t};const i=()=>(n=this.pollAnalyserData(this.analysers[e].analyser),this.analysers[e].callback(n),this.analysers[e].analyserFrameId=requestAnimationFrame(i),r);i()}else void 0===this.audioContext&&(this.analysers[e]={callback:t})}connectAnalysers(){Object.keys(this.analysers).map((e=>this.createAnalyser(e,this.analysers[e].callback)))}removeAnalyser(e){if(void 0!==this.audioContext&&void 0!==this.audioWorkletNode){void 0!==this.analysers[e.id]&&(cancelAnimationFrame(this.analysers[e.id].analyserFrameId),delete this.analysers[e.id])}}async init(e,t){if(e&&t&&new URL(t)){return this.audioContext,this.audioWorkletName=e,this.audioWorkletUrl=t,void 0===this.audioContext&&(this.audioContext=new AudioContext({latencyHint:\"playback\"})),!!await this.loadWorkletProcessorCode()&&(this.connectWorkletNode(),!0)}throw new Error(\"Name and valid URL required for AudioWorklet processor\")}play(){if(void 0!==this.audioContext)return\"suspended\"!==this.audioContext.state?(this.stop(),!1):(this.audioContext.resume(),!0)}stop(){void 0!==this.audioWorkletNode&&this.audioContext.suspend()}stopAndRelease(){void 0!==this.audioWorkletNode&&(this.audioWorkletNode.disconnect(this.audioContext.destination),this.audioWorkletNode=void 0)}more(e){if(void 0!==this.audioWorkletNode){const t=this.audioWorkletNode.parameters.get(e);return t.value+=.5,console.log(e+\": \"+t.value),!0}return!1}less(e){if(void 0!==this.audioWorkletNode){const t=this.audioWorkletNode.parameters.get(e);return t.value-=.5,console.log(e+\": \"+t.value),!0}return!1}eval(e){return!(!this.audioWorkletNode||!this.audioWorkletNode.port)&&(\"suspended\"===this.audioContext.state&&this.audioContext.resume(),this.audioWorkletNode.port.postMessage({eval:1,setup:e.setup,loop:e.loop}),!0)}sendClockPhase(e,t){void 0!==this.audioWorkletNode&&this.audioWorkletNode.port.postMessage({phase:e,i:t})}onAudioInputInit(e){this.audioContext.createMediaStreamSource(e).connect(this.audioWorkletNode)}onAudioInputFail(e){console.error(`ERROR:Engine:AudioInputFail: ${e.message} ${e.name}`)}async connectMediaStream(){const e=window.constraints={audio:!0,video:!1};navigator.mediaDevices.getUserMedia(e).then((e=>this.onAudioInputInit(e))).catch(this.onAudioInputFail)}async loadWorkletProcessorCode(){if(void 0===this.audioContext)return!1;try{await this.audioContext.audioWorklet.addModule(this.audioWorkletUrl)}catch(e){return console.error(\"ERROR:Engine:loadWorkletProcessorCode: AudioWorklet not supported in this browser: \",e.message),!1}try{return this.audioWorkletNode=new AudioWorkletNode(this.audioContext,this.audioWorkletName),this.audioWorkletNode.channelInterpretation=\"discrete\",this.audioWorkletNode.channelCountMode=\"explicit\",this.audioWorkletNode.channelCount=this.audioContext.destination.maxChannelCount,!0}catch(e){return console.error(\"ERROR:Engine:loadWorkletProcessorCode: Error on custom AudioWorklet node creation: \",e.message),!1}}connectWorkletNode(){if(void 0!==this.audioWorkletNode)try{this.audioContext.destination.channelInterpretation=\"discrete\",this.audioContext.destination.channelCountMode=\"explicit\",this.audioContext.destination.channelCount=this.audioContext.destination.maxChannelCount,this.audioWorkletNode.connect(this.audioContext.destination),this.audioWorkletNode.onprocessorerror=e=>console.error(\"ERROR:Engine: maxi-processor 'onprocess' error detected\"),this.audioWorkletNode.onprocessorstatechange=e=>console.log(\"maxi-processor state change detected: \"+audioWorkletNode.processorState),this.audioWorkletNode.port.onmessageerror=e=>console.error(\"ERROR:Engine: Error message from port: \"+e.data),this.audioWorkletNode.port.onmessage=e=>this.onProcessorMessageHandler(e)}catch(e){console.error(\"ERROR:Engine: Error connecting WorkletNode: \",e.message)}}onProcessorMessageHandler(e){if(e&&e.data)if(e.data.rq&&\"send\"===e.data.rq)switch(e.data.ttype){case\"ML\":break;case\"NET\":this.peerNet.send(e.data.ch[0],e.data.value,e.data.ch[1])}else if(e.data.rq&&\"buf\"===e.data.rq)switch(e.data.ttype){case\"ML\":this.dispatcher.dispatch(\"onSharedBuffer\",{sab:e.data.value,channelID:e.data.channelID,blocksize:e.data.blocksize})}}subscribeAsyncMessage(e){void 0!==e&&void 0!==this.audioWorkletNode&&(this.audioWorkletNode.port.onmessage=e)}loadSample(e,t){if(void 0===this.audioContext)throw\"Audio Context is not initialised!\";loadSampleToArray(this.audioContext,e,t,this.audioWorkletNode)}}var commonjsGlobal=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function createCommonjsModule(e){var t={exports:{}};return e(t,t.exports),t.exports}var nearley=createCommonjsModule((function(e){var t,o;t=commonjsGlobal,o=function(){function e(t,o,r){return this.id=++e.highestId,this.name=t,this.symbols=o,this.postprocess=r,this}function t(e,t,o,r){this.rule=e,this.dot=t,this.reference=o,this.data=[],this.wantedBy=r,this.isComplete=this.dot===e.symbols.length}function o(e,t){this.grammar=e,this.index=t,this.states=[],this.wants={},this.scannable=[],this.completed={}}function r(e,t){this.rules=e,this.start=t||this.rules[0].name;var o=this.byName={};this.rules.forEach((function(e){o.hasOwnProperty(e.name)||(o[e.name]=[]),o[e.name].push(e)}))}function n(){this.reset(\"\")}function i(e,t,i){if(e instanceof r){var s=e;i=t}else s=r.fromCompiled(e,t);for(var a in this.grammar=s,this.options={keepHistory:!1,lexer:s.lexer||new n},i||{})this.options[a]=i[a];this.lexer=this.options.lexer,this.lexerState=void 0;var l=new o(s,0);this.table=[l],l.wants[s.start]=[],l.predict(s.start),l.process(),this.current=0}function s(e){var t=typeof e;if(\"string\"===t)return e;if(\"object\"===t){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return e.toString();if(e.type)return\"%\"+e.type;if(e.test)return\"<\"+String(e.test)+\">\";throw new Error(\"Unknown symbol type: \"+e)}}return e.highestId=0,e.prototype.toString=function(e){var t=void 0===e?this.symbols.map(s).join(\" \"):this.symbols.slice(0,e).map(s).join(\" \")+\" ● \"+this.symbols.slice(e).map(s).join(\" \");return this.name+\" → \"+t},t.prototype.toString=function(){return\"{\"+this.rule.toString(this.dot)+\"}, from: \"+(this.reference||0)},t.prototype.nextState=function(e){var o=new t(this.rule,this.dot+1,this.reference,this.wantedBy);return o.left=this,o.right=e,o.isComplete&&(o.data=o.build(),o.right=void 0),o},t.prototype.build=function(){var e=[],t=this;do{e.push(t.right.data),t=t.left}while(t.left);return e.reverse(),e},t.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,i.fail))},o.prototype.process=function(e){for(var t=this.states,o=this.wants,r=this.completed,n=0;n<t.length;n++){var s=t[n];if(s.isComplete){if(s.finish(),s.data!==i.fail){for(var a=s.wantedBy,l=a.length;l--;){var c=a[l];this.complete(c,s)}if(s.reference===this.index){var p=s.rule.name;(this.completed[p]=this.completed[p]||[]).push(s)}}}else{if(\"string\"!=typeof(p=s.rule.symbols[s.dot])){this.scannable.push(s);continue}if(o[p]){if(o[p].push(s),r.hasOwnProperty(p)){var u=r[p];for(l=0;l<u.length;l++){var g=u[l];this.complete(s,g)}}}else o[p]=[s],this.predict(p)}}},o.prototype.predict=function(e){for(var o=this.grammar.byName[e]||[],r=0;r<o.length;r++){var n=o[r],i=this.wants[e],s=new t(n,0,this.index,i);this.states.push(s)}},o.prototype.complete=function(e,t){var o=e.nextState(t);this.states.push(o)},r.fromCompiled=function(t,o){var n=t.Lexer;t.ParserStart&&(o=t.ParserStart,t=t.ParserRules);var i=new r(t=t.map((function(t){return new e(t.name,t.symbols,t.postprocess)})),o);return i.lexer=n,i},n.prototype.reset=function(e,t){this.buffer=e,this.index=0,this.line=t?t.line:1,this.lastLineBreak=t?-t.col:0},n.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return\"\\n\"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},n.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},n.prototype.formatError=function(e,t){var o=this.buffer;if(\"string\"==typeof o){var r=o.split(\"\\n\").slice(Math.max(0,this.line-5),this.line),n=o.indexOf(\"\\n\",this.index);-1===n&&(n=o.length);var i=this.index-this.lastLineBreak,s=String(this.line).length;return t+=\" at line \"+this.line+\" col \"+i+\":\\n\\n\",t+=r.map((function(e,t){return a(this.line-r.length+t+1,s)+\" \"+e}),this).join(\"\\n\"),t+=\"\\n\"+a(\"\",s+i)+\"^\\n\"}return t+\" at index \"+(this.index-1);function a(e,t){var o=String(e);return Array(t-o.length+1).join(\" \")+o}},i.fail={},i.prototype.feed=function(e){var t,r=this.lexer;for(r.reset(e,this.lexerState);;){try{if(!(t=r.next()))break}catch(e){var i=new o(this.grammar,this.current+1);throw this.table.push(i),(l=new Error(this.reportLexerError(e))).offset=this.current,l.token=e.token,l}var s=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var a=this.current+1;i=new o(this.grammar,a),this.table.push(i);for(var l,c=void 0!==t.text?t.text:t.value,p=r.constructor===n?t.value:t,u=s.scannable,g=u.length;g--;){var d=u[g],m=d.rule.symbols[d.dot];if(m.test?m.test(p):m.type?m.type===t.type:m.literal===c){var h=d.nextState({data:p,token:t,isToken:!0,reference:a-1});i.states.push(h)}}if(i.process(),0===i.states.length)throw(l=new Error(this.reportError(t))).offset=this.current,l.token=t,l;this.options.keepHistory&&(s.lexerState=r.save()),this.current++}return s&&(this.lexerState=r.save()),this.results=this.finish(),this},i.prototype.reportLexerError=function(e){var t,o,r=e.token;return r?(t=\"input \"+JSON.stringify(r.text[0])+\" (lexer error)\",o=this.lexer.formatError(r,\"Syntax error\")):(t=\"input (lexer error)\",o=e.message),this.reportErrorCommon(o,t)},i.prototype.reportError=function(e){var t=(e.type?e.type+\" token: \":\"\")+JSON.stringify(void 0!==e.value?e.value:e),o=this.lexer.formatError(e,\"Syntax error\");return this.reportErrorCommon(o,t)},i.prototype.reportErrorCommon=function(e,t){var o=[];o.push(e);var r=this.table.length-2,n=this.table[r],i=n.states.filter((function(e){var t=e.rule.symbols[e.dot];return t&&\"string\"!=typeof t}));return 0===i.length?(o.push(\"Unexpected \"+t+\". I did not expect any more input. Here is the state of my parse table:\\n\"),this.displayStateStack(n.states,o)):(o.push(\"Unexpected \"+t+\". Instead, I was expecting to see one of the following:\\n\"),i.map((function(e){return this.buildFirstStateStack(e,[])||[e]}),this).forEach((function(e){var t=e[0],r=t.rule.symbols[t.dot],n=this.getSymbolDisplay(r);o.push(\"A \"+n+\" based on:\"),this.displayStateStack(e,o)}),this)),o.push(\"\"),o.join(\"\\n\")},i.prototype.displayStateStack=function(e,t){for(var o,r=0,n=0;n<e.length;n++){var i=e[n],s=i.rule.toString(i.dot);s===o?r++:(r>0&&t.push(\"    ^ \"+r+\" more lines identical to this\"),r=0,t.push(\"    \"+s)),o=s}},i.prototype.getSymbolDisplay=function(e){return function(e){var t=typeof e;if(\"string\"===t)return e;if(\"object\"===t){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return\"character matching \"+e;if(e.type)return e.type+\" token\";if(e.test)return\"token matching \"+String(e.test);throw new Error(\"Unknown symbol type: \"+e)}}(e)},i.prototype.buildFirstStateStack=function(e,t){if(-1!==t.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var o=e.wantedBy[0],r=[e].concat(t),n=this.buildFirstStateStack(o,r);return null===n?null:[e].concat(n)},i.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},i.prototype.restore=function(e){var t=e.index;this.current=t,this.table[t]=e,this.table.splice(t+1),this.lexerState=e.lexerState,this.results=this.finish()},i.prototype.rewind=function(e){if(!this.options.keepHistory)throw new Error(\"set option `keepHistory` to enable rewinding\");this.restore(this.table[e])},i.prototype.finish=function(){var e=[],t=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(o){o.rule.name===t&&o.dot===o.rule.symbols.length&&0===o.reference&&o.data!==i.fail&&e.push(o)})),e.map((function(e){return e.data}))},{Parser:i,Grammar:r,Rule:e}},e.exports?e.exports=o():t.nearley=o()})),moo=createCommonjsModule((function(e){var t,o;t=commonjsGlobal,o=function(){var e=Object.prototype.hasOwnProperty,t=Object.prototype.toString,o=\"boolean\"==typeof(new RegExp).sticky;function r(e){return e&&\"[object RegExp]\"===t.call(e)}function n(e){return e&&\"object\"==typeof e&&!r(e)&&!Array.isArray(e)}function i(e){return\"(\"+e+\")\"}function s(e){return e.length?\"(?:\"+e.map((function(e){return\"(?:\"+e+\")\"})).join(\"|\")+\")\":\"(?!)\"}function a(e){if(\"string\"==typeof e)return\"(?:\"+e.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")+\")\";if(r(e)){if(e.ignoreCase)throw new Error(\"RegExp /i flag not allowed\");if(e.global)throw new Error(\"RegExp /g flag is implied\");if(e.sticky)throw new Error(\"RegExp /y flag is implied\");if(e.multiline)throw new Error(\"RegExp /m flag is implied\");return e.source}throw new Error(\"Not a pattern: \"+e)}function l(t,o){if(n(o)||(o={match:o}),o.include)throw new Error(\"Matching rules cannot also include states\");var i={defaultType:t,lineBreaks:!!o.error||!!o.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var s in o)e.call(o,s)&&(i[s]=o[s]);if(\"string\"==typeof i.type&&t!==i.type)throw new Error(\"Type transform cannot be a string (type '\"+i.type+\"' for token '\"+t+\"')\");var a=i.match;return i.match=Array.isArray(a)?a:a?[a]:[],i.match.sort((function(e,t){return r(e)&&r(t)?0:r(t)?-1:r(e)?1:t.length-e.length})),i}function c(e){return Array.isArray(e)?function(e){for(var t=[],o=0;o<e.length;o++){var r=e[o];if(r.include)for(var n=[].concat(r.include),i=0;i<n.length;i++)t.push({include:n[i]});else{if(!r.type)throw new Error(\"Rule has no type: \"+JSON.stringify(r));t.push(l(r.type,r))}}return t}(e):function(e){for(var t=Object.getOwnPropertyNames(e),o=[],r=0;r<t.length;r++){var i=t[r],s=e[i],a=[].concat(s);if(\"include\"!==i){var c=[];a.forEach((function(e){n(e)?(c.length&&o.push(l(i,c)),o.push(l(i,e)),c=[]):c.push(e)})),c.length&&o.push(l(i,c))}else for(var p=0;p<a.length;p++)o.push({include:a[p]})}return o}(e)}var p=l(\"error\",{lineBreaks:!0,shouldThrow:!0});function u(e,t){for(var n=null,l=Object.create(null),c=!0,u=null,g=[],d=[],m=0;m<e.length;m++)e[m].fallback&&(c=!1);for(m=0;m<e.length;m++){var h=e[m];if(h.include)throw new Error(\"Inheritance is not allowed in stateless lexers\");if(h.error||h.fallback){if(n)throw!h.fallback==!n.fallback?new Error(\"Multiple \"+(h.fallback?\"fallback\":\"error\")+\" rules not allowed (for token '\"+h.defaultType+\"')\"):new Error(\"fallback and error are mutually exclusive (for token '\"+h.defaultType+\"')\");n=h}var I=h.match.slice();if(c)for(;I.length&&\"string\"==typeof I[0]&&1===I[0].length;)l[I.shift().charCodeAt(0)]=h;if(h.pop||h.push||h.next){if(!t)throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\"+h.defaultType+\"')\");if(h.fallback)throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\"+h.defaultType+\"')\")}if(0!==I.length){c=!1,g.push(h);for(var b=0;b<I.length;b++){var C=I[b];if(r(C))if(null===u)u=C.unicode;else if(u!==C.unicode&&!1===h.fallback)throw new Error(\"If one rule is /u then all must be\")}var f=s(I.map(a)),x=new RegExp(f);if(x.test(\"\"))throw new Error(\"RegExp matches empty string: \"+x);if(new RegExp(\"|\"+f).exec(\"\").length-1>0)throw new Error(\"RegExp has capture groups: \"+x+\"\\nUse (?: … ) instead\");if(!h.lineBreaks&&x.test(\"\\n\"))throw new Error(\"Rule should declare lineBreaks: \"+x);d.push(i(f))}}var y=n&&n.fallback,A=o&&!y?\"ym\":\"gm\",B=o||y?\"\":\"|\";return!0===u&&(A+=\"u\"),{regexp:new RegExp(s(d)+B,A),groups:g,fast:l,error:n||p}}function g(e,t,o){var r=e&&(e.push||e.next);if(r&&!o[r])throw new Error(\"Missing state '\"+r+\"' (in token '\"+e.defaultType+\"' of state '\"+t+\"')\");if(e&&e.pop&&1!=+e.pop)throw new Error(\"pop must be 1 (in token '\"+e.defaultType+\"' of state '\"+t+\"')\")}var d=function(e,t){this.startState=t,this.states=e,this.buffer=\"\",this.stack=[],this.reset()};d.prototype.reset=function(e,t){return this.buffer=e||\"\",this.index=0,this.line=t?t.line:1,this.col=t?t.col:1,this.queuedToken=t?t.queuedToken:null,this.queuedThrow=t?t.queuedThrow:null,this.setState(t?t.state:this.startState),this.stack=t&&t.stack?t.stack.slice():[],this},d.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},d.prototype.setState=function(e){if(e&&this.state!==e){this.state=e;var t=this.states[e];this.groups=t.groups,this.error=t.error,this.re=t.regexp,this.fast=t.fast}},d.prototype.popState=function(){this.setState(this.stack.pop())},d.prototype.pushState=function(e){this.stack.push(this.state),this.setState(e)};var m=o?function(e,t){return e.exec(t)}:function(e,t){var o=e.exec(t);return 0===o[0].length?null:o};function h(){return this.value}if(d.prototype._getGroup=function(e){for(var t=this.groups.length,o=0;o<t;o++)if(void 0!==e[o+1])return this.groups[o];throw new Error(\"Cannot find token type for matched text\")},d.prototype.next=function(){var e=this.index;if(this.queuedGroup){var t=this._token(this.queuedGroup,this.queuedText,e);return this.queuedGroup=null,this.queuedText=\"\",t}var o=this.buffer;if(e!==o.length){if(s=this.fast[o.charCodeAt(e)])return this._token(s,o.charAt(e),e);var r=this.re;r.lastIndex=e;var n=m(r,o),i=this.error;if(null==n)return this._token(i,o.slice(e,o.length),e);var s=this._getGroup(n),a=n[0];return i.fallback&&n.index!==e?(this.queuedGroup=s,this.queuedText=a,this._token(i,o.slice(e,n.index),e)):this._token(s,a,e)}},d.prototype._token=function(e,t,o){var r=0;if(e.lineBreaks){var n=/\\n/g,i=1;if(\"\\n\"===t)r=1;else for(;n.exec(t);)r++,i=n.lastIndex}var s={type:\"function\"==typeof e.type&&e.type(t)||e.defaultType,value:\"function\"==typeof e.value?e.value(t):t,text:t,toString:h,offset:o,lineBreaks:r,line:this.line,col:this.col},a=t.length;if(this.index+=a,this.line+=r,0!==r?this.col=a-i+1:this.col+=a,e.shouldThrow)throw new Error(this.formatError(s,\"invalid syntax\"));return e.pop?this.popState():e.push?this.pushState(e.push):e.next&&this.setState(e.next),s},\"undefined\"!=typeof Symbol&&Symbol.iterator){var I=function(e){this.lexer=e};I.prototype.next=function(){var e=this.lexer.next();return{value:e,done:!e}},I.prototype[Symbol.iterator]=function(){return this},d.prototype[Symbol.iterator]=function(){return new I(this)}}return d.prototype.formatError=function(e,t){if(null==e){var o=this.buffer.slice(this.index);e={text:o,offset:this.index,lineBreaks:-1===o.indexOf(\"\\n\")?0:1,line:this.line,col:this.col}}var r=Math.max(0,e.offset-e.col+1),n=e.lineBreaks?e.text.indexOf(\"\\n\"):e.text.length,i=this.buffer.substring(r,e.offset+n);return t+=\" at line \"+e.line+\" col \"+e.col+\":\\n\\n\",t+=\"  \"+i+\"\\n\",t+=\"  \"+Array(e.col).join(\" \")+\"^\"},d.prototype.clone=function(){return new d(this.states,this.state)},d.prototype.has=function(e){return!0},{compile:function(e){var t=u(c(e));return new d({start:t},\"start\")},states:function(e,t){var o=e.$all?c(e.$all):[];delete e.$all;var r=Object.getOwnPropertyNames(e);t||(t=r[0]);for(var n=Object.create(null),i=0;i<r.length;i++)n[f=r[i]]=c(e[f]).concat(o);for(i=0;i<r.length;i++)for(var s=n[f=r[i]],a=Object.create(null),l=0;l<s.length;l++){var p=s[l];if(p.include){var m=[l,1];if(p.include!==f&&!a[p.include]){a[p.include]=!0;var h=n[p.include];if(!h)throw new Error(\"Cannot include nonexistent state '\"+p.include+\"' (in state '\"+f+\"')\");for(var I=0;I<h.length;I++){var b=h[I];-1===s.indexOf(b)&&m.push(b)}}s.splice.apply(s,m),l--}}var C=Object.create(null);for(i=0;i<r.length;i++){var f;C[f=r[i]]=u(n[f],!0)}for(i=0;i<r.length;i++){var x=r[i],y=C[x],A=y.groups;for(l=0;l<A.length;l++)g(A[l],x,C);var B=Object.getOwnPropertyNames(y.fast);for(l=0;l<B.length;l++)g(y.fast[B[l]],x,C)}return new d(C,t)},error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:function(e){for(var t=Object.create(null),o=Object.create(null),r=Object.getOwnPropertyNames(e),n=0;n<r.length;n++){var i=r[n],s=e[i];(Array.isArray(s)?s:[s]).forEach((function(e){if((o[e.length]=o[e.length]||[]).push(e),\"string\"!=typeof e)throw new Error(\"keyword must be string (in keyword '\"+i+\"')\");t[e]=i}))}function a(e){return JSON.stringify(e)}var l=\"\";for(var c in l+=\"switch (value.length) {\\n\",o){var p=o[c];l+=\"case \"+c+\":\\n\",l+=\"switch (value) {\\n\",p.forEach((function(e){var o=t[e];l+=\"case \"+a(e)+\": return \"+a(o)+\"\\n\"})),l+=\"}\\n\"}return l+=\"}\\n\",Function(\"value\",l)}}},e.exports?e.exports=o():t.moo=o()})),nearleyLanguageBootstrapped=createCommonjsModule((function(e){!function(){function t(e){return e[0]}function o(e){return e[0].value}var r=moo,n=Object.assign({ws:{match:/\\s+/,lineBreaks:!0,next:\"main\"},comment:/\\#.*/,arrow:{match:/[=-]+\\>/,next:\"main\"},js:{match:/\\{\\%(?:[^%]|\\%[^}])*\\%\\}/,value:e=>e.slice(2,-2),lineBreaks:!0},word:{match:/[\\w\\?\\+]+/,next:\"afterWord\"},string:{match:/\"(?:[^\\\\\"\\n]|\\\\[\"\\\\/bfnrt]|\\\\u[a-fA-F0-9]{4})*\"/,value:e=>JSON.parse(e),next:\"main\"},btstring:{match:/`[^`]*`/,value:e=>e.slice(1,-1),next:\"main\",lineBreaks:!0}},function(e){var t={};for(var o of e)t[o]={match:o,next:\"main\"};return t}([\",\",\"|\",\"$\",\"%\",\"(\",\")\",\":?\",\":*\",\":+\",\"@include\",\"@builtin\",\"@\",\"]\"])),i=r.states({main:Object.assign({},n,{charclass:{match:/\\.|\\[(?:\\\\.|[^\\\\\\n])+?\\]/,value:e=>new RegExp(e)}}),afterWord:Object.assign({},n,{\"[\":{match:\"[\",next:\"main\"}})});var s={Lexer:i,ParserRules:[{name:\"final$ebnf$1\",symbols:[i.has(\"ws\")?{type:\"ws\"}:ws],postprocess:t},{name:\"final$ebnf$1\",symbols:[],postprocess:function(e){return null}},{name:\"final\",symbols:[\"_\",\"prog\",\"_\",\"final$ebnf$1\"],postprocess:function(e){return e[1]}},{name:\"prog\",symbols:[\"prod\"],postprocess:function(e){return[e[0]]}},{name:\"prog\",symbols:[\"prod\",\"ws\",\"prog\"],postprocess:function(e){return[e[0]].concat(e[2])}},{name:\"prod\",symbols:[\"word\",\"_\",i.has(\"arrow\")?{type:\"arrow\"}:arrow,\"_\",\"expression+\"],postprocess:function(e){return{name:e[0],rules:e[4]}}},{name:\"prod\",symbols:[\"word\",{literal:\"[\"},\"_\",\"wordlist\",\"_\",{literal:\"]\"},\"_\",i.has(\"arrow\")?{type:\"arrow\"}:arrow,\"_\",\"expression+\"],postprocess:function(e){return{macro:e[0],args:e[3],exprs:e[9]}}},{name:\"prod\",symbols:[{literal:\"@\"},\"_\",\"js\"],postprocess:function(e){return{body:e[2]}}},{name:\"prod\",symbols:[{literal:\"@\"},\"word\",\"ws\",\"word\"],postprocess:function(e){return{config:e[1],value:e[3]}}},{name:\"prod\",symbols:[{literal:\"@include\"},\"_\",\"string\"],postprocess:function(e){return{include:e[2].literal,builtin:!1}}},{name:\"prod\",symbols:[{literal:\"@builtin\"},\"_\",\"string\"],postprocess:function(e){return{include:e[2].literal,builtin:!0}}},{name:\"expression+\",symbols:[\"completeexpression\"]},{name:\"expression+\",symbols:[\"expression+\",\"_\",{literal:\"|\"},\"_\",\"completeexpression\"],postprocess:function(e){return e[0].concat([e[4]])}},{name:\"expressionlist\",symbols:[\"completeexpression\"]},{name:\"expressionlist\",symbols:[\"expressionlist\",\"_\",{literal:\",\"},\"_\",\"completeexpression\"],postprocess:function(e){return e[0].concat([e[4]])}},{name:\"wordlist\",symbols:[\"word\"]},{name:\"wordlist\",symbols:[\"wordlist\",\"_\",{literal:\",\"},\"_\",\"word\"],postprocess:function(e){return e[0].concat([e[4]])}},{name:\"completeexpression\",symbols:[\"expr\"],postprocess:function(e){return{tokens:e[0]}}},{name:\"completeexpression\",symbols:[\"expr\",\"_\",\"js\"],postprocess:function(e){return{tokens:e[0],postprocess:e[2]}}},{name:\"expr_member\",symbols:[\"word\"],postprocess:t},{name:\"expr_member\",symbols:[{literal:\"$\"},\"word\"],postprocess:function(e){return{mixin:e[1]}}},{name:\"expr_member\",symbols:[\"word\",{literal:\"[\"},\"_\",\"expressionlist\",\"_\",{literal:\"]\"}],postprocess:function(e){return{macrocall:e[0],args:e[3]}}},{name:\"expr_member$ebnf$1\",symbols:[{literal:\"i\"}],postprocess:t},{name:\"expr_member$ebnf$1\",symbols:[],postprocess:function(e){return null}},{name:\"expr_member\",symbols:[\"string\",\"expr_member$ebnf$1\"],postprocess:function(e){return e[1]?function(e){for(var t=e.literal,o=[],r=0;r<t.length;r++){var n=t.charAt(r);n.toUpperCase()!==n||n.toLowerCase()!==n?o.push(new RegExp(\"[\"+n.toLowerCase()+n.toUpperCase()+\"]\")):o.push({literal:n})}return{subexpression:[{tokens:o,postprocess:function(e){return e.join(\"\")}}]}}(e[0]):e[0]}},{name:\"expr_member\",symbols:[{literal:\"%\"},\"word\"],postprocess:function(e){return{token:e[1]}}},{name:\"expr_member\",symbols:[\"charclass\"],postprocess:t},{name:\"expr_member\",symbols:[{literal:\"(\"},\"_\",\"expression+\",\"_\",{literal:\")\"}],postprocess:function(e){return{subexpression:e[2]}}},{name:\"expr_member\",symbols:[\"expr_member\",\"_\",\"ebnf_modifier\"],postprocess:function(e){return{ebnf:e[0],modifier:e[2]}}},{name:\"ebnf_modifier\",symbols:[{literal:\":+\"}],postprocess:o},{name:\"ebnf_modifier\",symbols:[{literal:\":*\"}],postprocess:o},{name:\"ebnf_modifier\",symbols:[{literal:\":?\"}],postprocess:o},{name:\"expr\",symbols:[\"expr_member\"]},{name:\"expr\",symbols:[\"expr\",\"ws\",\"expr_member\"],postprocess:function(e){return e[0].concat([e[2]])}},{name:\"word\",symbols:[i.has(\"word\")?{type:\"word\"}:word],postprocess:o},{name:\"string\",symbols:[i.has(\"string\")?{type:\"string\"}:string],postprocess:e=>({literal:e[0].value})},{name:\"string\",symbols:[i.has(\"btstring\")?{type:\"btstring\"}:btstring],postprocess:e=>({literal:e[0].value})},{name:\"charclass\",symbols:[i.has(\"charclass\")?{type:\"charclass\"}:charclass],postprocess:o},{name:\"js\",symbols:[i.has(\"js\")?{type:\"js\"}:js],postprocess:o},{name:\"_$ebnf$1\",symbols:[\"ws\"],postprocess:t},{name:\"_$ebnf$1\",symbols:[],postprocess:function(e){return null}},{name:\"_\",symbols:[\"_$ebnf$1\"]},{name:\"ws\",symbols:[i.has(\"ws\")?{type:\"ws\"}:ws]},{name:\"ws$ebnf$1\",symbols:[i.has(\"ws\")?{type:\"ws\"}:ws],postprocess:t},{name:\"ws$ebnf$1\",symbols:[],postprocess:function(e){return null}},{name:\"ws\",symbols:[\"ws$ebnf$1\",i.has(\"comment\")?{type:\"comment\"}:comment,\"_\"]}],ParserStart:\"final\"};e.exports=s}()}));function compileLowLevel(e,t){var o=uniquer();t.alreadycompiled||(t.alreadycompiled=[]);for(var r={rules:[],body:[],config:{},customTokens:[],macros:{},start:\"\"},n=0;n<e.length;n++){var i=e[n];if(u(i.name,i.pos,i.name&&i.name.length),i.body)t.nojs||r.body.push(i.body);else if(i.include){var s;if(s=i.builtin?i.include:require(\"path\").resolve(t.file?require(\"path\").dirname(t.file):process.cwd(),i.include),-1===t.alreadycompiled.indexOf(s)){if(t.alreadycompiled.push(s),\"postprocessors.ne\"===s)var a=require(\"nearley/builtin/postprocessors.ne\");else if(\"whitespace.ne\"===s)a=require(\"nearley/builtin/whitespace.ne\");else if(\"string.ne\"===s)a=require(\"nearley/builtin/string.ne\");else if(\"number.ne\"===s)a=require(\"nearley/builtin/number.ne\");else if(\"cow.ne\"===s)a=require(\"nearley/builtin/cow.ne\");var l=nearley.Grammar.fromCompiled(nearleyLanguageBootstrapped),c=new nearley.Parser(l);c.feed(a);var p=Compile(c.results[0],{file:s,__proto__:t});r.rules=r.rules.concat(p.rules),r.body=r.body.concat(p.body),Object.keys(p.config).forEach((function(e){r.config[e]=p.config[e]})),Object.keys(p.macros).forEach((function(e){r.macros[e]=p.macros[e]}))}}else i.macro?r.macros[i.macro]={args:i.args,exprs:i.exprs}:i.config?r.config[i.config]=i.value:(g(i.name,i.rules,{}),r.start||(r.start=i.name))}return r;function u(e,o,r){t.rangeCallback&&t.rangeCallback(e,o,o+r)}function g(e,o,n){for(var i=0;i<o.length;i++){var s=d(e,o[i],n);t.nojs&&(s.postprocess=null),r.rules.push(s)}}function d(e,t,o){for(var r=[],n=0;n<t.tokens.length;n++){var i=m(e,t.tokens[n],o);null!==i&&r.push(i)}return new nearley.Rule(e,r,t.postprocess)}function m(e,t,n){if(\"string\"==typeof t)return\"null\"===t?null:t;if(t instanceof RegExp)return t;if(t.literal)return t.literal.length?1===t.literal.length||r.config.lexer?t:function(e,t,r){var n=o(e+\"$string\");return u(n,t.pos,JSON.stringify(t.literal).length),g(n,[{tokens:t.literal.split(\"\").map((function(e){return{literal:e}})),postprocess:{builtin:\"joiner\"}}],r),n}(e,t,n):null;if(t.token){if(r.config.lexer){var i=t.token;return-1===r.customTokens.indexOf(i)&&r.customTokens.push(i),{token:\"(\"+(r.config.lexer+\".has(\"+JSON.stringify(i)+\") ? {type: \"+JSON.stringify(i)+\"} : \"+i)+\")\"}}return t}if(t.subexpression)return function(e,t,r){var n=t.subexpression,i=o(e+\"$subexpression\");return g(i,n,r),i}(e,t,n);if(t.ebnf)return function(e,t,r){switch(t.modifier){case\":+\":return function(e,t,r){var n=o(e+\"$ebnf\");return g(n,[{tokens:[t.ebnf]},{tokens:[t.ebnf,n],postprocess:{builtin:\"arrconcat\"}}],r),n}(e,t,r);case\":*\":return function(e,t,r){var n=o(e+\"$ebnf\");return g(n,[{tokens:[]},{tokens:[t.ebnf,n],postprocess:{builtin:\"arrconcat\"}}],r),n}(e,t,r);case\":?\":return function(e,t,r){var n=o(e+\"$ebnf\");return g(n,[{tokens:[t.ebnf],postprocess:{builtin:\"id\"}},{tokens:[],postprocess:{builtin:\"nuller\"}}],r),n}(e,t,r)}}(e,t,n);if(t.macrocall)return function(e,t,n){var i=o(e+\"$macrocall\"),s=r.macros[t.macrocall];if(!s)throw new Error(\"Unkown macro: \"+t.macrocall);if(s.args.length!==t.args.length)throw new Error(\"Argument count mismatch.\");for(var a={__proto__:n},l=0;l<s.args.length;l++){var c=o(e+\"$macrocall\");a[s.args[l]]=c,g(c,[t.args[l]],n)}return g(i,s.exprs,a),i}(e,t,n);if(t.mixin){if(n[t.mixin])return m(e,n[t.mixin],n);throw new Error(\"Unbound variable: \"+t.mixin)}throw new Error(\"unrecognized token: \"+JSON.stringify(t))}}function uniquer(){var e={};return function(t){var o=e[t]=(e[t]||0)+1;return t+\"$\"+o}}var generate=createCommonjsModule((function(e){var t,o;t=commonjsGlobal,o=function(e){function t(e,t,i){return null==i&&(i=\"\"),\"[\\n    \"+e.map((function(e){return function(e,t){var i=\"{\";return i+='\"name\": '+JSON.stringify(e.name),i+=', \"symbols\": ['+e.symbols.map(n).join(\", \")+\"]\",e.postprocess&&(e.postprocess.builtin&&(e.postprocess=t[e.postprocess.builtin]),i+=', \"postprocess\": '+r(o(e.postprocess),\"        \",{indentFirst:!1})),i+=\"}\"}(e,t)})).join(\",\\n    \")+\"\\n\"+i+\"]\"}function o(e){var t=e.toString().split(/\\n/);if(1===t.length)return[t[0].replace(/^\\s+|\\s+$/g,\"\")];for(var o=null,r=t.slice(1),n=0;n<r.length;n++){var i=/^\\s*/.exec(r[n]);i&&i[0].length!==r[n].length&&(null===o||i[0].length<o.length)&&(o=i[0])}return null===o?t:t.map((function(e){return e.slice(0,o.length)===o?e.slice(o.length):e}))}function r(e,t,o){var r;return r=Array.isArray(e)?e:e.toString().split(\"\\n\"),o=o||{},r.map((function(e,r){var n=!0;return 0!=r||o.indentFirst||(n=!1),n?t+e:e})).join(\"\\n\")}function n(e){return e instanceof RegExp?e.toString():e.token?e.token:JSON.stringify(e)}var i=function(e,t){if(e.config.preprocessor||(e.config.preprocessor=\"_default\"),!i[e.config.preprocessor])throw new Error(\"No such preprocessor: \"+e.config.preprocessor);return i[e.config.preprocessor](e,t)};return i.js=i._default=i.javascript=function(e,o){var r=\"// Generated automatically by nearley, version \"+e.version+\"\\n\";return r+=\"// http://github.com/Hardmath123/nearley\\n\",r+=\"(function () {\\n\",r+=\"function id(x) { return x[0]; }\\n\",r+=e.body.join(\"\\n\"),r+=\"var grammar = {\\n\",r+=\"    Lexer: \"+e.config.lexer+\",\\n\",r+=\"    ParserRules: \"+t(e.rules,i.javascript.builtinPostprocessors)+\"\\n\",r+=\"  , ParserStart: \"+JSON.stringify(e.start)+\"\\n\",r+=\"}\\n\",r+=\"if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {\\n\",r+=\"   module.exports = grammar;\\n\",r+=\"} else {\\n\",r+=\"   window.\"+o+\" = grammar;\\n\",r+=\"}\\n\",r+=\"})();\\n\"},i.javascript.builtinPostprocessors={joiner:\"function joiner(d) {return d.join('');}\",arrconcat:\"function arrconcat(d) {return [d[0]].concat(d[1]);}\",arrpush:\"function arrpush(d) {return d[0].concat([d[1]]);}\",nuller:\"function(d) {return null;}\",id:\"id\"},i.module=i.esmodule=function(e,o){var r=\"// Generated automatically by nearley, version \"+e.version+\"\\n\";return r+=\"// http://github.com/Hardmath123/nearley\\n\",r+=\"function id(x) { return x[0]; }\\n\",r+=e.body.join(\"\\n\"),r+=\"let Lexer = \"+e.config.lexer+\";\\n\",r+=\"let ParserRules = \"+t(e.rules,i.javascript.builtinPostprocessors)+\";\\n\",r+=\"let ParserStart = \"+JSON.stringify(e.start)+\";\\n\",r+=\"export default { Lexer, ParserRules, ParserStart };\\n\"},i.cs=i.coffee=i.coffeescript=function(e,n){var s=\"# Generated automatically by nearley, version \"+e.version+\"\\n\";return s+=\"# http://github.com/Hardmath123/nearley\\n\",s+=\"do ->\\n\",s+=\"  id = (d) -> d[0]\\n\",s+=r(o(e.body.join(\"\\n\")),\"  \")+\"\\n\",s+=\"  grammar = {\\n\",s+=\"    Lexer: \"+e.config.lexer+\",\\n\",s+=\"    ParserRules: \"+r(t(e.rules,i.coffeescript.builtinPostprocessors),\"      \",{indentFirst:!1})+\",\\n\",s+=\"    ParserStart: \"+JSON.stringify(e.start)+\"\\n\",s+=\"  }\\n\",s+=\"  if typeof module != 'undefined' && typeof module.exports != 'undefined'\\n\",s+=\"    module.exports = grammar;\\n\",s+=\"  else\\n\",s+=\"    window.\"+n+\" = grammar;\\n\"},i.coffeescript.builtinPostprocessors={joiner:\"(d) -> d.join('')\",arrconcat:\"(d) -> [d[0]].concat(d[1])\",arrpush:\"(d) -> d[0].concat([d[1]])\",nuller:\"() -> null\",id:\"id\"},i.ts=i.typescript=function(e,o){var r=\"// Generated automatically by nearley, version \"+e.version+\"\\n\";return r+=\"// http://github.com/Hardmath123/nearley\\n\",r+=\"// Bypasses TS6133. Allow declared but unused functions.\\n\",r+=\"// @ts-ignore\\n\",r+=\"function id(d: any[]): any { return d[0]; }\\n\",r+=e.customTokens.map((function(e){return\"declare var \"+e+\": any;\\n\"})).join(\"\"),r+=e.body.join(\"\\n\"),r+=\"\\n\",r+=\"interface NearleyToken {\\n\",r+=\"  value: any;\\n\",r+=\"  [key: string]: any;\\n\",r+=\"};\\n\",r+=\"\\n\",r+=\"interface NearleyLexer {\\n\",r+=\"  reset: (chunk: string, info: any) => void;\\n\",r+=\"  next: () => NearleyToken | undefined;\\n\",r+=\"  save: () => any;\\n\",r+=\"  formatError: (token: never) => string;\\n\",r+=\"  has: (tokenType: string) => boolean;\\n\",r+=\"};\\n\",r+=\"\\n\",r+=\"interface NearleyRule {\\n\",r+=\"  name: string;\\n\",r+=\"  symbols: NearleySymbol[];\\n\",r+=\"  postprocess?: (d: any[], loc?: number, reject?: {}) => any;\\n\",r+=\"};\\n\",r+=\"\\n\",r+=\"type NearleySymbol = string | { literal: any } | { test: (token: any) => boolean };\\n\",r+=\"\\n\",r+=\"interface Grammar {\\n\",r+=\"  Lexer: NearleyLexer | undefined;\\n\",r+=\"  ParserRules: NearleyRule[];\\n\",r+=\"  ParserStart: string;\\n\",r+=\"};\\n\",r+=\"\\n\",r+=\"const grammar: Grammar = {\\n\",r+=\"  Lexer: \"+e.config.lexer+\",\\n\",r+=\"  ParserRules: \"+t(e.rules,i.typescript.builtinPostprocessors,\"  \")+\",\\n\",r+=\"  ParserStart: \"+JSON.stringify(e.start)+\",\\n\",r+=\"};\\n\",r+=\"\\n\",r+=\"export default grammar;\\n\"},i.typescript.builtinPostprocessors={joiner:\"(d) => d.join('')\",arrconcat:\"(d) => [d[0]].concat(d[1])\",arrpush:\"(d) => d[0].concat([d[1]])\",nuller:\"() => null\",id:\"id\"},i},e.exports?e.exports=o():t.generate=o(t.nearley)})),warn=function(e,t){e.out.write(\"WARN\\t\"+t+\"\\n\")};function lintNames(e,t){var o=[];e.rules.forEach((function(e){o.push(e.name)})),e.rules.forEach((function(e){e.symbols.forEach((function(e){e.literal||e.token||e.constructor===RegExp||-1===o.indexOf(e)&&warn(t,\"Undefined symbol `\"+e+\"` used.\")}))}))}function lint(e,t){t.out||(t.out=process.stderr),lintNames(e,t)}var lint_1=lint,objectID=0,vars={},jsFuncMap={saw:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.saw(${t[0].loop})`},sin:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.sinewave(${t[0].loop})`},tri:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.triangle(${t[0].loop})`},pha:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.phasor(${t[0].loop})`},ph2:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>3?t[3].loop:0});`,loop:(e,t)=>`${e}.phasorBetween(${t[0].loop},${t[1].loop},${t[2].loop})`},sqr:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.square(${t[0].loop})`},pul:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>2?t[2].loop:0});`,loop:(e,t)=>`${e}.pulse(${t[0].loop},${t[1].loop})`},imp:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.impulse(${t[0].loop})`},sawn:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc();\\n                      ${e}.phaseReset(${t.length>1?t[1].loop:0});`,loop:(e,t)=>`${e}.sawn(${t[0].loop})`},noiz:{setup:(e,t)=>`${e} = new Maximilian.maxiOsc()`,loop:(e,t)=>`${e}.noise()*${t[0].loop}`},gt:{setup:(e,t)=>\"\",loop:(e,t)=>`((${t[0].loop} > ${t[1].loop}) ? 1 : 0)`},lt:{setup:(e,t)=>\"\",loop:(e,t)=>`((${t[0].loop} < ${t[1].loop}) ? 1 : 0)`},mod:{setup:(e,t)=>\"\",loop:(e,t)=>`(${t[0].loop} % ${t[1].loop})`},add:{setup:(e,t)=>\"\",loop:(e,t)=>`(${t[0].loop} + ${t[1].loop})`},mul:{setup:(e,t)=>\"\",loop:(e,t)=>`(${t[0].loop} * ${t[1].loop})`},sub:{setup:(e,t)=>\"\",loop:(e,t)=>`(${t[0].loop} - ${t[1].loop})`},div:{setup:(e,t)=>\"\",loop:(e,t)=>`(${t[1].loop} != 0 ? ${t[0].loop}/${t[1].loop} : 0)`},pow:{setup:(e,t)=>\"\",loop:(e,t)=>`Math.pow(${t[0].loop},${t[1].loop})`},abs:{setup:(e,t)=>\"\",loop:(e,t)=>`Math.abs(${t[0].loop})`},env:{setup:(e,t)=>`${e} = new Maximilian.maxiEnv();\\n                      ${e}.setAttack(${t[1].loop});\\n                      ${e}.setDecay(${t[2].loop});\\n                      ${e}.setSustain(${t[3].loop});\\n                      ${e}.setRelease(${t[4].loop})`,loop:(e,t)=>`${e}.adsr(1,${t[0].loop})`},sum:{setup:(e,t)=>\"\",loop:(e,t)=>{let o=`(${t[0].loop}`;for(let e=1;e<t.length;e++)o+=`+${t[e].loop}`;return o+\")\"}},mix:{setup:(e,t)=>\"\",loop:(e,t)=>{let o=`((${t[0].loop}`;for(let e=1;e<t.length;e++)o+=`+${t[e].loop}`;return o+`)/${t.length})`}},prod:{setup:(e,t)=>\"\",loop:(e,t)=>{let o=`(${t[0].loop}`;for(let e=1;e<t.length;e++)o+=`*${t[e].loop}`;return o+\")\"}},blin:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linlin(${t[0].loop}, -1, 1, ${t[1].loop}, ${t[2].loop})`},ulin:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linlin(${t[0].loop}, 0, 1, ${t[1].loop}, ${t[2].loop})`},bexp:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linexp(${t[0].loop}, -1, 1, ${t[1].loop}, ${t[2].loop})`},uexp:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linexp(${t[0].loop}, 0.0000001, 1, ${t[1].loop}, ${t[2].loop})`},linlin:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linlin(${t[0].loop}, ${t[1].loop}, ${t[2].loop},${t[3].loop}, ${t[4].loop})`},linexp:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiMap.linexp(${t[0].loop}, ${t[1].loop}, ${t[2].loop}, ${t[3].loop}, ${t[4].loop})`},dist:{setup:(e,t)=>`${e} = new Maximilian.maxiNonlinearity()`,loop:(e,t)=>`${e}.atanDist(${t[0].loop},${t[1].loop})`},softclip:{setup:(e,t)=>`${e} = new Maximilian.maxiNonlinearity()`,loop:(e,t)=>`${e}.softclip(${t[0].loop})`},hardclip:{setup:(e,t)=>`${e} = new Maximilian.maxiNonlinearity()`,loop:(e,t)=>`${e}.hardclip(${t[0].loop})`},asymclip:{setup:(e,t)=>`${e} = new Maximilian.maxiNonlinearity()`,loop:(e,t)=>`${e}.asymclip(${t[0].loop},${t[1].loop},${t[2].loop})`},flange:{setup:(e,t)=>`${e} = new Maximilian.maxiFlanger()`,loop:(e,t)=>`${e}.flange(${t[0].loop},${t[1].loop},${t[2].loop},${t[3].loop},${t[4].loop})`},chor:{setup:(e,t)=>`${e} = new Maximilian.maxiChorus()`,loop:(e,t)=>`${e}.chorus(${t[0].loop},${t[1].loop},${t[2].loop},${t[3].loop},${t[4].loop})`},dl:{setup:(e,t)=>`${e} = new Maximilian.maxiDelayline()`,loop:(e,t)=>`${e}.dl(${t[0].loop},${t[1].loop},${t[2].loop})`},lpf:{setup:(e,t)=>`${e} = new Maximilian.maxiFilter()`,loop:(e,t)=>`${e}.lopass(${t[0].loop},${t[1].loop})`},hpf:{setup:(e,t)=>`${e} = new Maximilian.maxiFilter()`,loop:(e,t)=>`${e}.hipass(${t[0].loop},${t[1].loop})`},lpz:{setup:(e,t)=>`${e} = new Maximilian.maxiFilter()`,loop:(e,t)=>`${e}.lores(${t[0].loop},${t[1].loop},${t[2].loop})`},hpz:{setup:(e,t)=>`${e} = new Maximilian.maxiFilter()`,loop:(e,t)=>`${e}.hires(${t[0].loop},${t[1].loop},${t[2].loop})`},toJS:{setup:(e,t)=>`${e} = new SABOutputTransducer(outputSABs,\\n                                      this.port,\\n                                      'ML',\\n                                      ${t[1].loop},\\n                                      this.currentSample,\\n                                      ${3==t.length?1:t[3].loop})`,loop:(e,t)=>`${e}.send(${t[0].loop}, ${t[2].loop})`},fromJS:{setup:(e,t)=>`${e} = new SABInputTransducer(${t[0].loop}, ${2==t.length?1:0})`,loop:(e,t)=>`${e}.getSABValue(inputSABs, ${2==t.length?t[1].loop:0})`},mouseX:{setup:(e,t)=>\"\",loop:(e,t)=>\"this.getSABValue('mxy')[0]\"},mouseY:{setup:(e,t)=>\"\",loop:(e,t)=>\"this.getSABValue('mxy')[1]\"},at:{setup:(e,t)=>\"\",loop:(e,t)=>`${t[0].loop}[Math.min(${t[1].loop}, ${t[0].loop}.length-1)]`},sah:{setup:(e,t)=>`${e} = new Maximilian.maxiSampleAndHold();`,loop:(e,t)=>`${e}.sah(${t[0].loop},${t[1].loop})`},stretch:{setup:(e,t)=>`${e} = new Maximilian.maxiSample();\\n                      ${e}.setSample(this.getSampleBuffer(${t[4].loop}));\\n                      ${e}stretch = new Maximilian.maxiStretch();\\n                      ${e}stretch.setSample(${e});`,loop:(e,t)=>`(${e}.isReady() ? ${e}stretch.play(${t[0].loop},${t[1].loop},${t[2].loop},${t[3].loop},0.0) : 0.0)`},adc:{setup:(e,t)=>\"\",loop:(e,t)=>`(inputs * ${t[0].loop})`},sampler:{setup:(e,t)=>`${e} = new Maximilian.maxiSample();\\n                      ${e}.setSample(this.getSampleBuffer(${t[t.length-1].loop}));`,loop:(e,t)=>{let o=`${t[0].loop}`;return 3==t.length?o+=`,${t[1].loop}`:4==t.length&&(o+=`,${t[1].loop},${t[2].loop}`),`(${e}.isReady() ? ${e}.playOnZX(${o}) : 0.0)`}},loop:{setup:(e,t)=>`${e} = new Maximilian.maxiSample();\\n                      ${e}.setSample(this.getSampleBuffer(${t[1].loop}));`,loop:(e,t)=>`(${e}.isReady() ? ${e}.play(${t[0].loop}) : 0.0)`},slice:{setup:(e,t)=>`${e} = new Maximilian.maxiSample();\\n                      ${e}.setSample(this.getSampleBuffer(${t[2].loop}));`,loop:(e,t)=>`(${e}.isReady() ? ${e}.loopSetPosOnZX(${t[0].loop},${t[1].loop}) : 0.0)`},oscin:{setup:(e,t)=>\"\",loop:(e,t)=>`this.OSCTransducer(${t[0].loop},${t[1].loop})`},oscout:{setup:(e,t)=>\"\",loop:(e,t)=>`this.OSCTransducer(${t[0].loop},${t[1].loop})`},sah:{setup:(e,t)=>`${e} = new Maximilian.maxiSampleAndHold();`,loop:(e,t)=>`${e}.sah(${t[0].loop},${t[1].loop})`},stretch:{setup:(e,t)=>`${e} = new Maximilian.maxiSample();\\n                      ${e}.setSample(this.getSampleBuffer(${t[4].loop}));\\n                      ${e}stretch = new Maximilian.maxiStretch();\\n                      ${e}stretch.setSample(${e});`,loop:(e,t)=>`(${e}.isReady() ? ${e}stretch.play(${t[0].loop},${t[1].loop},${t[2].loop},${t[3].loop},0.0) : 0.0)`},bitToSig:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.toSignal(${t[0].loop})`},bitToTrigSig:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.toTrigSignal(${t[0].loop})`},bitNeg:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.neg(${t[0].loop})`},bitInc:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.inc(${t[0].loop})`},bitDec:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.dec(${t[0].loop})`},bitAnd:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.land(${t[0].loop},${t[1].loop})`},bitOr:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.lor(${t[0].loop},${t[1].loop})`},bitXor:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.lxor(${t[0].loop},${t[1].loop})`},bitShl:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.shl(${t[0].loop},${t[1].loop})`},bitShr:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.shr(${t[0].loop},${t[1].loop})`},bitAt:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.at(${t[0].loop},${t[1].loop})`},bitAdd:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.add(${t[0].loop},${t[1].loop})`},bitSub:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.sub(${t[0].loop},${t[1].loop})`},bitMul:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.mul(${t[0].loop},${t[1].loop})`},bitEq:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.eq(${t[0].loop},${t[1].loop})`},bitGt:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.gt(${t[0].loop},${t[1].loop})`},bitGte:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.gte(${t[0].loop},${t[1].loop})`},bitLte:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.lte(${t[0].loop},${t[1].loop})`},bitLt:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.lt(${t[0].loop},${t[1].loop})`},setup:(e,t)=>\"\",bitDiv:{loop:(e,t)=>`Maximilian.maxiBits.div(${t[0].loop},${t[1].loop})`},bitr:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.at(${t[0].loop},${t[1].loop},${t[2].loop})`},bitnoise:{setup:(e,t)=>\"\",loop:(e,t)=>\"Maximilian.maxiBits.noise()\"},btime:{setup:(e,t)=>\"\",loop:(e,t)=>\"this.bitTime\"},bitFromSig:{setup:(e,t)=>\"\",loop:(e,t)=>`Maximilian.maxiBits.fromSignal(${t[0].loop})`},clp:{setup:(e,t)=>\"\",loop:(e,t)=>`this.clockPhase(${t[0].loop},${t.length>1?t[1].loop:0})`},clt:{setup:(e,t)=>\"\",loop:(e,t)=>`this.clockTrig(${t[0].loop},${t.length>1?t[1].loop:0})`},clk:{setup:(e,t)=>\"\",loop:(e,t)=>`(()=>{this.setBPM(${t[0].loop}); this.setBeatsPerBar(${t[1].loop});})()`},onzx:{setup:(e,t)=>`${e} = new Maximilian.maxiTrigger();`,loop:(e,t)=>`${e}.onZX(${t[0].loop})`},onchange:{setup:(e,t)=>`${e} = new Maximilian.maxiTrigger();`,loop:(e,t)=>`${e}.onChanged(${t[0].loop},${t[1].loop})`},count:{setup:(e,t)=>`${e} = new Maximilian.maxiCounter();`,loop:(e,t)=>`${e}.count(${t[0].loop},${t[1].loop})`},idx:{setup:(e,t)=>`${e} = new Maximilian.maxiIndex();`,loop:(e,t)=>`${e}.pull(${t[0].loop},${t[1].loop},${t[2].loop})`},svf:{setup:(e,t)=>`${e} = new Maximilian.maxiSVF();\\n                      ${e}_p1 = new Maximilian.maxiTrigger();\\n                      ${e}_p2 = new Maximilian.maxiTrigger();`,loop:(e,t)=>`( () => { ${e}_cutoff = ${t[1].loop};\\n                                if (${e}_p1.onChanged(${e}_cutoff, 1e-5)) {${e}.setCutoff(${e}_cutoff)};\\n                                ${e}_res = ${t[2].loop};\\n                                if (${e}_p2.onChanged(${e}_res, 1e-5)) {${e}.setResonance(${e}_res)};\\n                                return ${e}.play(${t[0].loop},${t[3].loop},${t[4].loop},${t[5].loop},${t[6].loop})})()`},bitclock:{setup:(e,t)=>\"\",loop:(e,t)=>\"this.bitclock\"},pvshift:{setup:(e,t)=>`${e} = new pvshift();`,loop:(e,t)=>`${e}.play(${t[0].loop},${t[1].loop})`},rsq:{setup:(e,t)=>`${e} = new Maximilian.maxiRatioSeq();`,loop:(e,t)=>2==t.length?`${e}.playTrig(${t[0].loop},${t[1].loop})`:`${e}.playValues(${t[0].loop},${t[1].loop},${t[2].loop})`},o303:{setup:(e,t)=>`${e} = new Open303.Open303();\\n                      ${e}.setSampleRate(sampleRate);\\n                      ${e}_tnote = new Maximilian.maxiTrigger();\\n                      ${e}_twf = new Maximilian.maxiTrigger();\\n                      ${e}_tcut = new Maximilian.maxiTrigger();\\n                      ${e}_tres = new Maximilian.maxiTrigger();\\n                      ${e}_tenvm = new Maximilian.maxiTrigger();\\n                      ${e}_tdec = new Maximilian.maxiTrigger();\\n                      ${e}_tnoteoff = new Maximilian.maxiTrigger();\\n                      ${e}_tatt = new Maximilian.maxiTrigger();`,loop:(e,t)=>`(()=>{\\n\\t\\t\\tlet newNote = ${e}_tnote.onZX(${t[0].loop});\\n\\t\\t\\tlet accent = ${t[3].loop};\\n\\t\\t\\tif (newNote) {\\n\\t\\t\\t\\tif (${t[2].loop}>0) {\\n\\t\\t\\t\\t\\t${e}.slideToNote(${t[1].loop},accent);\\n\\t\\t\\t\\t}else{\\n\\t\\t\\t\\t\\t${e}.triggerNote(${t[1].loop},accent);\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (${e}_tnoteoff.onChanged(${t[4].loop}, 1e-5)) {${e}.allNotesOff()};\\n\\t\\t\\tif (${e}_twf.onChanged(${t[5].loop}, 1e-5)) {${e}.setWaveform(${t[5].loop})};\\n\\t\\t\\tif (${e}_tcut.onChanged(${t[6].loop}, 1e-5)) {${e}.setCutoff(${t[6].loop})};\\n\\t\\t\\tif (${e}_tres.onChanged(${t[7].loop}, 1e-5)) {${e}.setResonance(${t[7].loop})};\\n\\t\\t\\tif (${e}_tenvm.onChanged(${t[8].loop}, 1e-5)) {${e}.setEnvMod(${t[8].loop})};\\n\\t\\t\\tif (${e}_tatt.onChanged(${t[9].loop}, 1e-5)) {${e}.setNormalAttack(${t[9].loop})};\\n\\t\\t\\tif (${e}_tdec.onChanged(${t[10].loop}, 1e-5)) {${e}.setDecay(${t[10].loop})};\\n\\t\\t\\t${e}.setAccent(${t[11].loop});\\n\\t\\t\\treturn ${e}.play();})()`},freeverb:{setup:(e,t)=>`${e} = new Maximilian.maxiFreeVerb();`,loop:(e,t)=>`${e}.play(${t[0].loop},${t[1].loop},${t[2].loop})`},line:{setup:(e,t)=>`${e} = new Maximilian.maxiLine(); ${e}.prepare(0,1,${t[1].loop}, false); ${e}.triggerEnable(1);`,loop:(e,t)=>`${e}.play(${t[0].loop})`},const:{setup:(e,t)=>\"\",loop:(e,t)=>`${t[0].loop}`},poll:{setup:(e,t)=>`${e} = new poll()`,loop:(e,t)=>`${e}.play(${t[0].loop})`},dac:{setup:(e,t)=>\"\",loop:(e,t)=>1==t.length?`this.dacOutAll(${t[0].loop})`:`this.dacOut(${t[0].loop},${t[1].loop})`},fft:{setup:(e,t)=>`${e} = new fft(${t[1].loop}, ${t[2].loop})`,loop:(e,t)=>`${e}.play(${t[0].loop})`},ifft:{setup:(e,t)=>`${e} = new ifft(${t[3].loop}, ${t[4].loop})`,loop:(e,t)=>`${e}.play(${t[0].loop}, ${t[1].loop}, ${t[2].loop})`},mfcc:{setup:(e,t)=>`${e} = new mfcc(${t[1].loop}, ${t[2].loop}, ${t[3].loop})`,loop:(e,t)=>`${e}.play(${t[0].loop})`}};class ASTreeToJavascript{static getNextID(){return objectID=objectID>9999?0:++objectID}static emptyCode(){return{setup:\"\",loop:\"\",paramMarkers:[]}}static traverseTree(e,t,o,r,n){let i={\"@lang\":(e,t)=>(t.map((t=>{let i=ASTreeToJavascript.traverseTree(t,ASTreeToJavascript.emptyCode(),o,r,n);e.setup+=i.setup,e.loop+=i.loop})),e),\"@spawn\":(e,t)=>((e=ASTreeToJavascript.traverseTree(t,e,o,r,n)).loop+=\";\",e),\"@sigp\":(e,t)=>{let i=[{s:t.paramBegin,e:t.paramEnd,l:o}];e.paramMarkers=e.paramMarkers.concat(i);let s=t[\"@func\"].value,a=jsFuncMap[s],l=\"q.b\"+n+\"u\"+ASTreeToJavascript.getNextID(),c=[];for(let e=0;e<t[\"@params\"].length;e++){let i=ASTreeToJavascript.emptyCode();i=ASTreeToJavascript.traverseTree(t[\"@params\"][e],i,o+1,r,n),c[e]=i}let p=\"\";for(let t in c)p+=c[t].setup,e.paramMarkers=e.paramMarkers.concat(c[t].paramMarkers);return e.setup+=`${p} ${a.setup(l,c)};`,e.loop+=`${a.loop(l,c)}`,e},\"@setvar\":(e,t)=>{let i=t[\"@varname\"],s=r[i];null==s&&(s=Object.keys(r).length,r[i]=s);let a=ASTreeToJavascript.traverseTree(t[\"@varvalue\"],ASTreeToJavascript.emptyCode(),o+1,r,n);return e.setup+=a.setup,e.loop=`(mem[${s}] = ${a.loop})`,e},\"@getvar\":(e,t)=>{let o=r[t];return null==o&&(o=Object.keys(r).length,r[t]=o),e.loop+=`(mem[${o}] != undefined ? mem[${o}] : 0)`,e},\"@string\":(e,t)=>((\"string\"==typeof t||t instanceof String)&&(e.loop+=`'${t}'`),e),\"@num\":(e,t)=>(null!=t.value&&(e.loop+=`${t.value}`),e),\"@list\":(e,t)=>{let i=\"q.b\"+n+\"l\"+ASTreeToJavascript.getNextID();e.setup+=`${i} = new Float64Array(${t.length});`,e.loop+=\"(()=>{\";let s=\"\";for(let a=0;a<t.length;a++){let l=ASTreeToJavascript.traverseTree(t[a],ASTreeToJavascript.emptyCode(),o,r,n);\"@num\"==Object.keys(t[a])[0]?e.setup+=`${i}[${a}] = ${l.loop};`:(s+=l.setup,e.loop+=`${i}[${a}] = ${l.loop};`)}return e.loop+=`return ${i}})()`,e.setup+=s,e}};return Array.isArray(e)?e.map((e=>{Object.keys(e).map((o=>{t=i[o](t,e[o])}))})):Object.keys(e).map((o=>{t=i[o](t,e[o])})),t}static treeToCode(e,t=0){vars={};let o=ASTreeToJavascript.traverseTree(e,ASTreeToJavascript.emptyCode(),0,vars,t);return o.setup=`() => {let q=this.newq(); ${o.setup}; return q;}`,o.loop=`(q, inputs, mem) => {${o.loop}}`,o}}var IR=Object.freeze({__proto__:null,default:ASTreeToJavascript}),sema=createCommonjsModule((function(e){var t;t=commonjsGlobal,e.exports?e.exports={num:function(e){return{\"@num\":{value:e}}},str:function(e){return{\"@string\":e}},synth:function(e,t){return{\"@sigp\":{\"@params\":t,\"@func\":{value:e}}}},setvar:function(e,t){return{\"@setvar\":{\"@varname\":e,\"@varvalue\":t}}},getvar:function(e){return{\"@getvar\":e}}}:t.sema={num:function(e){return{\"@num\":{value:e}}},str:function(e){return{\"@string\":e}},synth:function(e,t){return{\"@sigp\":{\"@params\":t,\"@func\":{value:e}}}},setvar:function(e,t){return{\"@setvar\":{\"@varname\":e,\"@varvalue\":t}}},getvar:function(e){return{\"@getvar\":e}}}}));function getParserModuleExports(source){let sema$1=sema;sema$1.num(\"3\");let module={exports:\"\"};return eval(source),module.exports}function compile(e,t){let o;const{errors:r,output:n}=compileGrammar(e),i=getParserModuleExports(n),s=new nearley.Parser(i);if(!r&&s){const e=s.feed(t);e&&(o=ASTreeToJavascript.treeToCode(e.results,0))}return{errors:r,dspCode:o}}function stream(){let e=\"\";return{write(t){e+=t},dump:()=>e}}function AnnotatePositions(e){return e.map((e=>new nearley.Rule(e.name,e.symbols,e.postprocess&&((t,o,r)=>{var n=e.postprocess(t,o,r);return null===n?null:(\"object\"!=typeof n||n.slice||(n.pos=o),n)}))))}function compileGrammar(e){let t=new nearley.Parser(AnnotatePositions(nearleyLanguageBootstrapped.ParserRules),nearleyLanguageBootstrapped.ParserStart,{lexer:nearleyLanguageBootstrapped.Lexer}),o=stream(),r=\"\",n={};try{if(t.feed(e),t.results[0]){var i=compileLowLevel(t.results[0],{rangeCallback:function(e,t,o){n[e]=[t,o]}});lint_1(i,{out:o}),r=generate(i,\"grammar\")}}catch(e){o.write(e)}return{errors:o.dump(),positions:n,output:r}}var WorkerClass=null;try{var WorkerThreads=\"undefined\"!=typeof module&&\"function\"==typeof module.require&&module.require(\"worker_threads\")||\"function\"==typeof __non_webpack_require__&&__non_webpack_require__(\"worker_threads\")||\"function\"==typeof require&&require(\"worker_threads\");WorkerClass=WorkerThreads.Worker}catch(e){}function decodeBase64(e,t){return Buffer.from(e,\"base64\").toString(t?\"utf16\":\"utf8\")}function createBase64WorkerFactory(e,t,o){var r=void 0===t?null:t,n=decodeBase64(e,void 0!==o&&o),i=n.indexOf(\"\\n\",10)+1,s=n.substring(i)+(r?\"//# sourceMappingURL=\"+r:\"\");return function(e){return new WorkerClass(s,Object.assign({},e,{eval:!0}))}}function decodeBase64$1(e,t){var o=atob(e);if(t){for(var r=new Uint8Array(o.length),n=0,i=o.length;n<i;++n)r[n]=o.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(r.buffer))}return o}function createURL(e,t,o){var r=void 0===t?null:t,n=decodeBase64$1(e,void 0!==o&&o),i=n.indexOf(\"\\n\",10)+1,s=n.substring(i)+(r?\"//# sourceMappingURL=\"+r:\"\"),a=new Blob([s],{type:\"application/javascript\"});return URL.createObjectURL(a)}function createBase64WorkerFactory$1(e,t,o){var r;return function(n){return r=r||createURL(e,t,o),new Worker(r,n)}}var kIsNodeJS=\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0);function isNodeJS(){return kIsNodeJS}function createBase64WorkerFactory$2(e,t,o){return isNodeJS()?createBase64WorkerFactory(e,t,o):createBase64WorkerFactory$1(e,t,o)}var WorkerFactory=createBase64WorkerFactory$2(\"Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihuKXtpZihuZXcgVVJMKG4pKXt0cnl7aW1wb3J0U2NyaXB0cyhuKyIvbGFsb2xpYi5qcyIpfWNhdGNoKG4pe2NvbnNvbGUuZXJyb3IoIkVSUk9SOiBpbXBvcnRTY3JpcHRzIOKAkyBsYWxvbGliLmpzICIsbil9dHJ5e2ltcG9ydFNjcmlwdHMobisiL3N2ZC5qcyIpfWNhdGNoKG4pe2NvbnNvbGUuZXJyb3IoIkVSUk9SOiBpbXBvcnRTY3JpcHRzIOKAkyBzdmQuanMgIixuKX10cnl7aW1wb3J0U2NyaXB0cyhuKyIvbWx3b3JrZXJzY3JpcHRzLmpzIil9Y2F0Y2gobil7Y29uc29sZS5lcnJvcigiRVJST1I6IGltcG9ydFNjcmlwdHMg4oCTIG1sd29ya2Vyc2NyaXB0cy5qcyIsbil9dHJ5e2ltcG9ydFNjcmlwdHMoImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vQHRlbnNvcmZsb3cvdGZqcy9kaXN0L3RmLm1pbi5qcyIpfWNhdGNoKG4pe2NvbnNvbGUuZXJyb3IoIkVSUk9SOiBpbXBvcnRTY3JpcHRzIOKAkyB0ZmpzIixuKX10cnl7IWZ1bmN0aW9uKCl7aWYoIW4pe3ZhciBuPWV2YWw7bigidmFyIGlucHV0ID0gKHZhbHVlLCBjaGFubmVsKSA9PiB7fSIpLG4oInZhciBvdXRwdXQgPSAodmFsdWUsY2hhbm5lbCkgPT4ge3Bvc3RNZXNzYWdlKHtmdW5jOidkYXRhJywgdmFsOnZhbHVlLCBjaDpjaGFubmVsfSk7fSIpLG4oIlxudmFyIG91dHB1dFNBQnMgPSB7fTtcbmNsYXNzIE1MU0FCT3V0cHV0VHJhbnNkdWNlciB7XG4gIGNvbnN0cnVjdG9yKGJ1ZmZlclR5cGUsIGNoYW5uZWwsIGJsb2Nrc2l6ZSkge1xuICAgIHRoaXMuY2hhbm5lbCA9IGNoYW5uZWw7XG4gICAgdGhpcy5ibG9ja3NpemUgPSBibG9ja3NpemU7XG5cbiAgICAvL2NoZWNrIGZvciBleGlzdGluZyBjaGFubmVsc1xuICAgIGlmIChjaGFubmVsIGluIG91dHB1dFNBQnMgJiYgb3V0cHV0U0FCc1tjaGFubmVsXS5ibG9ja3NpemUgPT0gYmxvY2tzaXplKSB7XG4gICAgICAvL3JldXNlIGV4aXN0aW5nXG4gICAgICB0aGlzLnJpbmdidWYgPSBvdXRwdXRTQUJzW2NoYW5uZWxdLnJiO1xuICAgIH1lbHNle1xuICAgICAgLy9jcmVhdGUgYSBuZXcgU0FCIGFuZCBub3RpZnkgdGhlIHJlY2VpdmVyXG4gICAgICB0aGlzLnNhYiA9IFJpbmdCdWZmZXIuZ2V0U3RvcmFnZUZvckNhcGFjaXR5KDMyICogYmxvY2tzaXplLCBGbG9hdDY0QXJyYXkpO1xuICAgICAgdGhpcy5yaW5nYnVmID0gbmV3IFJpbmdCdWZmZXIodGhpcy5zYWIsIEZsb2F0NjRBcnJheSk7XG4gICAgICBvdXRwdXRTQUJzW2NoYW5uZWxdID0ge3JiOnRoaXMucmluZ2J1Ziwgc2FiOnRoaXMuc2FiLCBjcmVhdGVkOkRhdGUubm93KCksIGJsb2Nrc2l6ZTpibG9ja3NpemV9O1xuXG4gICAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAgIGZ1bmM6ICdzYWInLFxuICAgICAgICB2YWx1ZTogdGhpcy5zYWIsXG4gICAgICAgIHR0eXBlOiBidWZmZXJUeXBlLFxuICAgICAgICBjaGFubmVsSUQ6IGNoYW5uZWwsXG4gICAgICAgIGJsb2Nrc2l6ZTpibG9ja3NpemVcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHNlbmQodmFsdWUpIHtcbiAgICBpZiAodGhpcy5yaW5nYnVmLmF2YWlsYWJsZV93cml0ZSgpID4gMSkge1xuICAgICAgaWYgKHR5cGVvZih2YWx1ZSkgPT0gXCJudW1iZXJcIikge1xuICAgICAgICB0aGlzLnJpbmdidWYucHVzaChuZXcgRmxvYXQ2NEFycmF5KFt2YWx1ZV0pKTtcbiAgICAgIH1lbHNle1xuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09IHRoaXMuYmxvY2tzaXplKSB7XG4gICAgICAgICAgdGhpcy5yaW5nYnVmLnB1c2godmFsdWUpO1xuICAgICAgICB9ZWxzZSBpZiAodmFsdWUubGVuZ3RoIDwgdGhpcy5ibG9ja3NpemUpIHtcbiAgICAgICAgICBsZXQgbmV3VmFsID0gbmV3IEZsb2F0NjRBcnJheSh0aGlzLmJsb2Nrc2l6ZSk7XG4gICAgICAgICAgZm9yKGxldCBpIGluIHZhbHVlKSBuZXdWYWxbaV0gPSB2YWx1ZVtpXTtcbiAgICAgICAgICB0aGlzLnJpbmdidWYucHVzaChuZXdWYWwpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICB0aGlzLnJpbmdidWYucHVzaCh2YWx1ZS5zbGljZSgwLHRoaXMuYmxvY2tzaXplKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuXG52YXIgY3JlYXRlT3V0cHV0Q2hhbm5lbCA9IChpZCwgYmxvY2tzaXplKSA9PiB7XG4gIHJldHVybiBuZXcgTUxTQUJPdXRwdXRUcmFuc2R1Y2VyKCdNTCcsIGlkLCBibG9ja3NpemUpO1xufTtcbiIpLG4oJ1xudmFyIGxvYWRSZXNwb25kZXJzID0ge307XG52YXIgaW5wdXRTQUJzPXt9O1xudmFyIHNlbWEgPSB7XG4gIHNhdmVGMzJBcnJheTogKG5hbWUsIHZhbCkgPT4ge1xuICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICJmdW5jIjogInNhdmUiLFxuICAgICAgIm5hbWUiOiBuYW1lLFxuICAgICAgInZhbCI6IHZhbFxuICAgIH0pO1xuICAgIHJldHVybiAwO1xuICB9LFxuICBsb2FkRjMyQXJyYXk6IChuYW1lLCBvbmxvYWQpID0+IHtcbiAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAiZnVuYyI6ICJsb2FkIixcbiAgICAgICJuYW1lIjogbmFtZSxcbiAgICB9KTtcbiAgICBsb2FkUmVzcG9uZGVyc1tuYW1lXSA9IG9ubG9hZDtcbiAgICByZXR1cm4gMDtcbiAgfSxcbiAgZG93bmxvYWQ6IChuYW1lKSA9PiB7XG4gICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgImZ1bmMiOiAiZG93bmxvYWQiLFxuICAgICAgIm5hbWUiOiBuYW1lLFxuICAgIH0pO1xuICB9LFxuICBzZW5kQ29kZTogKGNvZGUpID0+IHtcbiAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAiZnVuYyI6ICJzZW5kY29kZSIsXG4gICAgICAiY29kZSI6IGNvZGUsXG4gICAgfSk7XG4gIH0sXG4gIHBiY29weTogKG1zZykgPT4ge1xuICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICJmdW5jIjogInBiY29weSIsXG4gICAgICAibXNnIjogbXNnLFxuICAgIH0pO1xuICB9LFxuICBzZW5kQnVmZmVyOiAoYnVmZmVyTmFtZSxkYXRhKSA9PiB7XG4gICAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAgICAgImZ1bmMiOiAic2VuZGJ1ZiIsXG4gICAgICAgICAgIm5hbWUiOiBidWZmZXJOYW1lLFxuICAgICAgICAgICJkYXRhIjogZGF0YVxuICAgICAgfSk7XG4gIH0sXG4gIGVudjoge1xuICAgIHNhdmVMb2NhbDogKG5hbWUpID0+IHtcbiAgICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICJmdW5jIjogImVudnNhdmUiLFxuICAgICAgICAgICAgIm5hbWUiOiBuYW1lLFxuICAgICAgICAgICAgInN0b3JhZ2UiOiJsb2NhbCJcbiAgICAgICAgfVxuICAgICAgKVxuICAgIH0sXG4gICAgbG9hZExvY2FsOiAobmFtZSkgPT4ge1xuICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgImZ1bmMiOiAiZW52bG9hZCIsXG4gICAgICAgICAgICAibmFtZSI6IG5hbWUsXG4gICAgICAgICAgICAic3RvcmFnZSI6ImxvY2FsIlxuICAgICAgICB9XG4gICAgICApXG4gICAgfSxcbiAgICBzYXZlVG9QQjogKCkgPT4ge1xuICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgImZ1bmMiOiAiZW52c2F2ZSIsXG4gICAgICAgICAgICAic3RvcmFnZSI6InBhc3RlYnVmZmVyIlxuICAgICAgICB9XG4gICAgICApXG4gICAgfSxcbiAgICBsb2FkR2lzdDogKGdpc3RpZCkgPT4ge1xuICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgImZ1bmMiOiAiZW52bG9hZCIsXG4gICAgICAgICAgICAibmFtZSI6IGdpc3RpZCxcbiAgICAgICAgICAgICJzdG9yYWdlIjoiZ2lzdCJcbiAgICAgICAgfVxuICAgICAgKVxuICAgIH0sXG5cbiAgfSxcbiAgLy9ydW4gaW4gdGhlIERPTVxuICBkb21ldmFsOiAoY29kZSkgPT4ge1xuICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAiZnVuYyI6ICJkb21ldmFsIixcbiAgICAgICAgICAiY29kZSI6IGNvZGUsXG4gICAgICB9XG4gICAgKVxuICB9LFxuICBwZWVyaW5mbzogKCkgPT4ge1xuICAgIHBvc3RNZXNzYWdlICh7XG4gICAgICAiZnVuYyI6ICJwZWVyaW5mbyJcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygiWW91ciBwZWVyIElEIGhhcyBiZWVuIGNvcGllZCB0byB0aGUgcGFzdGUgYnVmZmVyIilcbiAgfVxufTtcbicpfX0oKSxlKCl9Y2F0Y2gobil7Y29uc29sZS5lcnJvcigiRVJST1I6IG9uIGltcG9ydFNjcmlwdHMsIGdldmFsQWxsIGFuZCBzYWJDaGVja2VyIixuKX1wb3N0TWVzc2FnZSh7aW5pdDohMH0pfWVsc2UgY29uc29sZS5lcnJvcigiRVJST1I6d29ya2VyOmluaXRXaXRoVVJMOiBJbnZhbGlkIFVSTCIpfWZ1bmN0aW9uIGUoKXt0cnl7Zm9yKGxldCBuIGluIGlucHV0U0FCcyl7bGV0IGU9aW5wdXRTQUJzW25dLnJiLmF2YWlsYWJsZV9yZWFkKCk7aWYoZSE9aW5wdXRTQUJzW25dLnJiLmNhcGFjaXR5JiZlPjApZm9yKGxldCBhPTA7YTxlO2ErPWlucHV0U0FCc1tuXS5ibG9ja3NpemUpe2xldCBlPW5ldyBGbG9hdDY0QXJyYXkoaW5wdXRTQUJzW25dLmJsb2Nrc2l6ZSk7aW5wdXRTQUJzW25dLnJiLnBvcChlKSxpbnB1dChuLGUpfX1zZXRUaW1lb3V0KGUsMjApfWNhdGNoKG4pe3NldFRpbWVvdXQoZSwxMDApfX1vbm1lc3NhZ2U9ZT0+e2lmKGUuZGF0YS51cmwmJm4oZS5kYXRhLnVybCksZS5kYXRhLmV2YWwpdHJ5e2lmKCFhKXZhciBhPWV2YWw7YShlLmRhdGEuZXZhbCl9Y2F0Y2gobil7Y29uc29sZS5lcnJvcihgRVJST1I6d29ya2VyOmdldmFsIGV4Y2VwdGlvbjogJHtufSBgLGUuZGF0YS5ldmFsKX1lbHNlIGlmKCJ2YWwiaW4gZS5kYXRhKXtsZXQgbj1lLmRhdGEudmFsO249SlNPTi5wYXJzZShgWyR7bn1dYCksbG9hZFJlc3BvbmRlcnNbZS5kYXRhLm5hbWVdKG4pLGRlbGV0ZSBsb2FkUmVzcG9uZGVyc1tlLmRhdGEubmFtZV19ZWxzZSBpZigibW9kZWwtaW5wdXQtZGF0YSI9PT1lLmRhdGEudHlwZSlpbnB1dChlLmRhdGEudmFsdWUsZS5kYXRhLmNoKTtlbHNlIGlmKGUuZGF0YS5zYWIpe2NvbnNvbGUubG9nKCJERUJVRzogU0FCIHJlY2VpdmVkIixlKTtsZXQgbj1lLmRhdGEuc2FiLGE9bmV3IFJpbmdCdWZmZXIobixGbG9hdDY0QXJyYXkpO2lucHV0U0FCc1tlLmRhdGEuY2hhbm5lbElEXT17c2FiOm4scmI6YSxibG9ja3NpemU6ZS5kYXRhLmJsb2Nrc2l6ZX0sY29uc29sZS5sb2coIk1MIixpbnB1dFNBQnMpfX19KCk7Cgo=\",\"data:application/json;charset=utf-8;base64,\",!1);class Learner{constructor(){this.dispatcher=new Dispatcher}addEventListener(e,t){if(!(this.dispatcher&&e&&t))throw new Error(\"Error adding event listener to Learner\");this.dispatcher.addEventListener(e,t)}removeEventListner(e,t){if(!(this.dispatcher&&e&&t))throw new Error(\"Error removing event listener to Learner\");this.dispatcher.removeEventListener(e,t)}async init(e){return this.worker=new WorkerFactory,new Promise(((t,o)=>{let r={};this.worker&&new URL(e)&&(this.worker.postMessage({url:e}),this.worker.onerror=this.onErrorHandler,this.worker.onmessage=e=>{r=e.data.init,console.info(\"running Learner\"),t(r),this.worker.onmessage=this.onMessageHandler})}))}onMessageHandler=e=>{this.dispatcher.dispatch(\"onSharedBuffer\",e.data),console.log(\"onSharedBuffer\"),console.log(e)};onErrorHandler=e=>{console.log(\"onError\"),console.log(e)};eval(e){this.worker&&e&&this.worker.postMessage({eval:e})}createSharedBuffer(e){if(!this.worker||!e.sab)throw new Error(\"Error creating shared buffer in Learner\");this.worker.postMessage({sab:e.sab,blocksize:e.blocksize,channelID:e.channelID})}evalBlock(e){let t=e.indexOf(\"\\n\");\"//--DOM\"==e.substr(0,t)?(e=e.substr(t),evalDomCode(e),addToHistory(\"dom-history-\",e)):(this.worker.postMessage({eval:e}),window.localStorage.setItem(\"modelEditorValue\",codeMirror.getValue()),addToHistory(\"model-history-\",e))}terminate(){this.worker.terminate(),this.worker=null}}function getBlock(e){if(e){let t=e.getCursor(),o=t.line,r=e.lastLine();for(;o<r;){if(/___+/.test(e.getLine(o))){r=o-1;break}o++}o=t.line;let n=-1;for(;o>=0;){if(/___+/.test(e.getLine(o))){n=o;break}o--}return n>-1&&n++,e.getRange({line:n,ch:0},{line:r+1,ch:0})}}var mooo=moo.mooo,nearley$1=nearley.nearley,semaa=sema.semaa;export{IR as ASTreeToJavascript,Engine,Learner,compile,compileGrammar,getBlock,getParserModuleExports,mooo,nearley$1 as nearley,semaa};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","// import update from './update.js';\n\n// // even though Rollup is bundling all your files together, errors and\n// // logs will still point to your original source modules\n// console.log('if you have sourcemaps enabled in your devtools, click on main.js:5 -->');\n\n// update();\n\nimport {\n  Engine,\n  compile,\n  Learner,\n  getBlock\n} from \"sema-engine/sema-engine.mjs\";\n\nlet engine,\n    analyser = 0,\n    compiledParser = {},\n    grammarCompilationErrors = \"\",\n    livecodeParseErrors,\n    livecodeParseTree,\n    dspCode,\n    learner\n    ;\n\nconst $ = (elemId, event, callback) =>\n  document.getElementById(elemId).addEventListener(event, callback);\n// var originURL = 'https://frantic0.github.io/sema-engine';\n\nvar originURL = document.location.origin;\n\n$(\"playButton\", \"click\", () => {\n  const audioWorkletURL = originURL + \"/maxi-processor.js\";\n  engine = new Engine();\n  engine.init(\"maxi-processor\", audioWorkletURL);\n  engine.play();\n});\n\n$(\"stopButton\", \"click\", () => engine.stop());\n\n$(\"loadSamplesButton\", \"click\", () => {\n  engine.loadSample(\"909.wav\",       originURL + \"/audio/909.wav\");\n  engine.loadSample(\"909b.wav\",      originURL + \"/audio/909b.wav\");\n  engine.loadSample(\"909closed.wav\", originURL + \"/audio/909closed.wav\");\n  engine.loadSample(\"909open.wav\",   originURL + \"/audio/909closed.wav\");\n  engine.loadSample(\"crebit2.ogg\",   originURL + \"/audio/crebit2.ogg\");\n  engine.loadSample(\"kick1.wav\",     originURL + \"/audio/kick1.wav\");\n  engine.loadSample(\"snare1.wav\",    originURL + \"/audio/snare1.wav\");\n});\n\n$(\"learnerButton\", \"click\", async () => {\n  learner = new Learner();\n  if(engine){\n    engine.addEventListener('onSharedBuffer', e => learner.createSharedBuffer(e) ); // Engine's SAB emissions subscribed by Learner\n    learner.addEventListener('onSharedBuffer', e => engine.pushSharedBuffer(e) );  // Learner's SAB emissions subscribed by Engine\n  }\n  await learner.init(originURL); // when Learner initializes\n});\n\nconst evalLiveCode = () => {\n  if(engine){\n    try{\n      const { errors, dspCode } = compile( editorGrammar.getValue(), editorLivecode.getValue() );\n      if(dspCode){\n        console.info(editorLivecode.getValue());\n        engine.eval(dspCode);\n      }\n    } catch (err) {\n      console.error(\"ERROR: Failed to compile and eval: \", err);\n    }\n  }\n  else throw new Error('ERROR: Engine not initialized. Please press Start Engine first.')\n}\n\nconst evalJs = async () => {\n  if(learner && editorJS){\n    const code = getBlock(editorJS);\n    console.info(code);\n    learner.eval(code);\n  }\n  else throw new Error('ERROR: Learner not initialized. Please press Create Learner first.')\n}\n\n$(\"evalButton\", \"click\", () => evalLiveCode() );\n$(\"evalJsButton\", \"click\", async () => evalJs() );\n\n\n\n$(\"mouseButton\", \"click\", () => {\n  if(engine){\n    try{\n      const id = \"mxy\",\n            ttype = \"mouseXY\",\n            blockSize = 2;\n      let sab = engine.createSharedBuffer(id, ttype, blockSize);\n      const onMouseMove = e => {\n        const x = e.offsetX/window.innerWidth;\n        const y = e.offsetY/window.innerHeight;\n        document.getElementById('outputText').innerText = `${parseFloat(x).toFixed(5)} ${parseFloat(y).toFixed(5)}`;\n        engine.pushDataToSharedBuffer(id, [ x, y ]);\n      }\n      // Subscribe Left `Alt`-key down event to subscribe mouse move\n      document.addEventListener(\"keydown\", e => {\n        if(e.keyCode === 18){\n          document.addEventListener( 'mousemove', onMouseMove, true )\n        }\n      });\n      // Subscribe Left `Alt`-key UP event to unsubscribe mouse move\n      document.addEventListener(\"keyup\", e => {\n        if(e.which === 18){\n          document.getElementById('outputText').innerText = ``;\n          document.removeEventListener( 'mousemove', onMouseMove, true );\n        }\n      });\n    } catch (err) {\n      console.error(\"ERROR: Failed to create new channel for mouse data: \", err);\n    }\n  }\n  else throw new Error('ERROR: Engine not initialized. Please press Start Engine first.')\n});\n\n(() => {\n  // Subscribe Left `Alt`-key down event to subscribe mouse move\n  document.addEventListener(\"keydown\", e => {\n    if ( e.keyCode == 13 && ( e.ctrlKey || e.metaKey ) ){\n      evalLiveCode();\n    }\n    else if ( e.keyCode == 13 && e.altKey ){\n      evalJs();\n    }\n  });\n})();\n\n    // $(\"minusButton\", \"click\", () => engine.less());\n    // $(\"plusButton\", \"click\", () => engine.more());\n    // $(\"createAnalyserButton\", \"click\", () => engine.createAnalyser(analyser++, data => console.log(data)) );\n"],"names":["RingBuffer","[object Object]","e","t","BYTES_PER_ELEMENT","o","SharedArrayBuffer","ArrayBuffer","__proto__","isPrototypeOf","this","_type","capacity","byteLength","buf","write_ptr","Uint32Array","read_ptr","storage","name","Atomics","load","_storage_capacity","r","Math","min","_available_write","length","n","i","_copy","store","_available_read","getBase64","indexOf","slice","match","_keyStr","removePaddingFromBase64","Module","maxiTools","charAt","substring","loadSampleToArray","s","a","l","c","p","u","g","d","m","h","parseInt","I","b","Uint8Array","replace","decodeAudioData","getChannelData","port","postMessage","sample","buffer","console","log","C","XMLHttpRequest","addEventListener","open","responseType","onload","response","send","Event","eventName","callbacks","push","splice","forEach","Dispatcher","events","emit","registerCallback","unregisterCallback","Engine","instance","analysers","sharedArrayBuffers","dispatcher","samplesLoaded","Error","audioWorkletNode","getStorageForCapacity","Float64Array","func","value","ttype","channelID","blocksize","sab","rb","fftSize","getByteTimeDomainData","getByteFrequencyData","smoothingTimeConstant","frequencyDataArray","timeDataArray","audioContext","createAnalyser","minDecibels","maxDecibels","connect","analyser","analyserFrameId","callback","pollAnalyserData","requestAnimationFrame","Object","keys","map","id","cancelAnimationFrame","URL","audioWorkletName","audioWorkletUrl","AudioContext","latencyHint","loadWorkletProcessorCode","connectWorkletNode","state","stop","resume","suspend","disconnect","destination","parameters","get","eval","setup","loop","phase","createMediaStreamSource","error","message","window","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","onAudioInputInit","catch","onAudioInputFail","audioWorklet","addModule","AudioWorkletNode","channelInterpretation","channelCountMode","channelCount","maxChannelCount","onprocessorerror","onprocessorstatechange","processorState","onmessageerror","data","onmessage","onProcessorMessageHandler","rq","peerNet","ch","dispatch","commonjsGlobal","globalThis","global","self","createCommonjsModule","exports","nearley","highestId","symbols","postprocess","rule","dot","reference","wantedBy","isComplete","grammar","index","states","wants","scannable","completed","rules","start","byName","hasOwnProperty","reset","fromCompiled","options","keepHistory","lexer","lexerState","table","predict","process","current","literal","JSON","stringify","RegExp","toString","type","test","String","prototype","join","nextState","left","right","build","reverse","finish","fail","complete","Lexer","ParserStart","ParserRules","line","lastLineBreak","col","next","save","formatError","split","max","Array","feed","reportLexerError","offset","token","text","constructor","isToken","reportError","results","reportErrorCommon","filter","displayStateStack","buildFirstStateStack","getSymbolDisplay","concat","restore","rewind","Parser","Grammar","Rule","moo","sticky","call","isArray","ignoreCase","multiline","source","include","defaultType","lineBreaks","fallback","pop","shouldThrow","sort","getOwnPropertyNames","create","shift","charCodeAt","unicode","f","x","exec","y","A","B","regexp","groups","fast","startState","stack","queuedToken","queuedThrow","setState","re","popState","pushState","_getGroup","queuedGroup","_token","queuedText","lastIndex","Symbol","iterator","done","clone","has","compile","$all","apply","freeze","keywords","Function","nearleyLanguageBootstrapped","assign","ws","comment","arrow","js","word","string","parse","btstring","main","charclass","afterWord","[","macro","args","exprs","body","config","builtin","tokens","mixin","macrocall","toUpperCase","toLowerCase","subexpression","ebnf","modifier","compileLowLevel","uniquer","alreadycompiled","customTokens","macros","pos","nojs","require","resolve","file","dirname","cwd","Compile","rangeCallback","generate","indentFirst","preprocessor","_default","javascript","version","builtinPostprocessors","joiner","arrconcat","arrpush","nuller","module","esmodule","cs","coffee","coffeescript","ts","typescript","warn","out","write","lintNames","lint","stderr","lint_1","objectID","vars","jsFuncMap","saw","sin","tri","pha","ph2","sqr","pul","imp","sawn","noiz","gt","lt","mod","add","mul","sub","div","pow","abs","env","sum","mix","prod","blin","ulin","bexp","uexp","linlin","linexp","dist","softclip","hardclip","asymclip","flange","chor","dl","lpf","hpf","lpz","hpz","toJS","fromJS","mouseX","mouseY","at","sah","stretch","adc","sampler","oscin","oscout","bitToSig","bitToTrigSig","bitNeg","bitInc","bitDec","bitAnd","bitOr","bitXor","bitShl","bitShr","bitAt","bitAdd","bitSub","bitMul","bitEq","bitGt","bitGte","bitLte","bitLt","bitDiv","bitr","bitnoise","btime","bitFromSig","clp","clt","clk","onzx","onchange","count","idx","svf","bitclock","pvshift","rsq","o303","freeverb","const","poll","dac","fft","ifft","mfcc","ASTreeToJavascript","paramMarkers","@lang","traverseTree","emptyCode","@spawn","@sigp","paramBegin","paramEnd","getNextID","@setvar","@getvar","@string","@num","@list","default","sema","num","str","synth","@params","@func","setvar","@varname","@varvalue","getvar","getParserModuleExports","sema$1","errors","output","compileGrammar","treeToCode","dspCode","stream","dump","AnnotatePositions","positions","WorkerClass","WorkerThreads","__non_webpack_require__","Worker","decodeBase64","Buffer","from","createBase64WorkerFactory","decodeBase64$1","atob","fromCharCode","Uint16Array","createURL","Blob","createObjectURL","createBase64WorkerFactory$1","kIsNodeJS","isNodeJS","createBase64WorkerFactory$2","WorkerFactory","Learner","removeEventListener","worker","Promise","url","onerror","onErrorHandler","init","info","onMessageHandler","substr","evalDomCode","addToHistory","localStorage","setItem","codeMirror","getValue","terminate","getBlock","getCursor","lastLine","getLine","getRange","engine","learner","mooo","semaa","$","elemId","event","document","getElementById","originURL","location","origin","audioWorkletURL","play","loadSample","async","createSharedBuffer","pushSharedBuffer","evalLiveCode","editorGrammar","editorLivecode","err","evalJs","editorJS","code","blockSize","onMouseMove","offsetX","innerWidth","offsetY","innerHeight","innerText","parseFloat","toFixed","pushDataToSharedBuffer","keyCode","which","ctrlKey","metaKey","altKey"],"mappings":"AAAA,MAAMA,WAAWC,6BAA6BC,EAAEC,GAAG,IAAIA,EAAEC,kBAAkB,KAAK,iCAAiC,IAAIC,EAAE,GAAGH,EAAE,GAAGC,EAAEC,kBAAkB,OAAO,IAAIE,kBAAkBD,GAAGJ,YAAYC,EAAEC,GAAG,IAAII,YAAYC,UAAUC,cAAcN,SAAI,IAASA,EAAEC,kBAAkB,KAAK,uDAAuDM,KAAKC,MAAMR,EAAEO,KAAKE,UAAUV,EAAEW,WAAW,GAAGV,EAAEC,kBAAkBM,KAAKI,IAAIZ,EAAEQ,KAAKK,UAAU,IAAIC,YAAYN,KAAKI,IAAI,EAAE,GAAGJ,KAAKO,SAAS,IAAID,YAAYN,KAAKI,IAAI,EAAE,GAAGJ,KAAKQ,QAAQ,IAAIf,EAAEO,KAAKI,IAAI,EAAEJ,KAAKE,UAAUX,OAAO,OAAOS,KAAKC,MAAMQ,KAAKlB,KAAKC,GAAG,IAAIC,EAAEiB,QAAQC,KAAKX,KAAKO,SAAS,GAAGZ,EAAEe,QAAQC,KAAKX,KAAKK,UAAU,GAAG,IAAIV,EAAE,GAAGK,KAAKY,qBAAqBnB,EAAE,OAAO,EAAE,IAAIoB,EAAEC,KAAKC,IAAIf,KAAKgB,iBAAiBvB,EAAEE,GAAGH,EAAEyB,QAAQC,EAAEJ,KAAKC,IAAIf,KAAKY,oBAAoBjB,EAAEkB,GAAGM,EAAEN,EAAEK,EAAE,OAAOlB,KAAKoB,MAAM5B,EAAE,EAAEQ,KAAKQ,QAAQb,EAAEuB,GAAGlB,KAAKoB,MAAM5B,EAAE0B,EAAElB,KAAKQ,QAAQ,EAAEW,GAAGT,QAAQW,MAAMrB,KAAKK,UAAU,GAAGV,EAAEkB,GAAGb,KAAKY,qBAAqBC,EAAEtB,IAAIC,GAAG,IAAIC,EAAEiB,QAAQC,KAAKX,KAAKO,SAAS,GAAGZ,EAAEe,QAAQC,KAAKX,KAAKK,UAAU,GAAG,GAAGV,GAAGF,EAAE,OAAO,EAAE,IAAIoB,EAAEC,KAAKC,IAAIf,KAAKsB,gBAAgB7B,EAAEE,GAAGH,EAAEyB,QAAQC,EAAEJ,KAAKC,IAAIf,KAAKY,oBAAoBnB,EAAED,EAAEyB,QAAQE,EAAEN,EAAEK,EAAE,OAAOlB,KAAKoB,MAAMpB,KAAKQ,QAAQf,EAAED,EAAE,EAAE0B,GAAGlB,KAAKoB,MAAMpB,KAAKQ,QAAQ,EAAEhB,EAAE0B,EAAEC,GAAGT,QAAQW,MAAMrB,KAAKO,SAAS,GAAGd,EAAEoB,GAAGb,KAAKY,qBAAqBC,EAAEtB,QAAQ,IAAIC,EAAEkB,QAAQC,KAAKX,KAAKO,SAAS,GAAG,OAAOG,QAAQC,KAAKX,KAAKK,UAAU,IAAIb,EAAED,OAAO,IAAIC,EAAEkB,QAAQC,KAAKX,KAAKO,SAAS,GAAG,OAAOG,QAAQC,KAAKX,KAAKK,UAAU,GAAG,GAAGL,KAAKE,UAAUV,EAAED,WAAW,OAAOS,KAAKE,SAAS,EAAEX,iBAAiB,IAAIC,EAAEkB,QAAQC,KAAKX,KAAKO,SAAS,GAAGd,EAAEiB,QAAQC,KAAKX,KAAKK,UAAU,GAAG,OAAOL,KAAKsB,gBAAgB9B,EAAEC,GAAGF,kBAAkB,IAAIC,EAAEkB,QAAQC,KAAKX,KAAKO,SAAS,GAAGd,EAAEiB,QAAQC,KAAKX,KAAKK,UAAU,GAAG,OAAOL,KAAKgB,iBAAiBxB,EAAEC,GAAGF,gBAAgBC,EAAEC,GAAG,OAAOA,EAAED,EAAEC,EAAED,EAAEC,EAAEO,KAAKY,oBAAoBpB,EAAED,iBAAiBC,EAAEC,GAAG,IAAIE,EAAEH,EAAEC,EAAE,EAAE,OAAOA,GAAGD,IAAIG,GAAGK,KAAKY,qBAAqBjB,EAAEJ,oBAAoB,OAAOS,KAAKE,SAASX,MAAMC,EAAEC,EAAEE,EAAEkB,EAAEK,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEC,IAAIxB,EAAEkB,EAAEM,GAAG3B,EAAEC,EAAE0B,IAAI,MAAMI,UAAU/B,IAAI,IAAI,IAAIA,EAAEgC,QAAQ,YAAY,CAAC,IAAI/B,EAAED,EAAEgC,QAAQ,YAAY,EAAE,QAAQhC,EAAEiC,MAAMhC,GAAGiC,MAAM,qFAAqFlC,EAAEiC,MAAMhC,GAAG,OAAM,GAAIkC,QAAQ,oEAAoEC,wBAAwBpC,GAAG,KAAKqC,OAAOC,UAAUH,QAAQH,QAAQhC,EAAEuC,OAAOvC,EAAEyB,OAAO,IAAIzB,EAAEwC,UAAU,EAAExC,EAAEyB,OAAO,GAAGzB,EAAEyC,kBAAkB,CAACzC,EAAEC,EAAEE,EAAEkB,KAAK,IAAIK,EAAE,GAAGC,EAAEI,UAAU5B,GAAG,GAAGwB,EAAE,CAAC,IAAIe,EAAEf,EAAEF,OAAO,EAAE,EAAEkB,EAAE,IAAItC,YAAYqC,GAAGf,EAAES,wBAAwBA,wBAAwBT,IAAI,IAAIiB,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,SAASzB,EAAEF,OAAO,EAAE,EAAE,IAAI4B,EAAE,EAAEC,EAAE,EAAE,IAAIV,EAAE,IAAIW,WAAWZ,GAAGhB,EAAEA,EAAE6B,QAAQ,sBAAsB,IAAIH,EAAE,EAAEA,EAAEF,EAAEE,GAAG,EAAER,EAAEV,QAAQH,QAAQL,EAAEY,OAAOe,OAAO,GAAGN,EAAEb,QAAQH,QAAQL,EAAEY,OAAOe,QAAQ,EAAER,GAAG,GAAGE,IAAI,GAAGC,EAAEd,QAAQH,QAAQL,EAAEY,OAAOe,QAAQ,EAAEP,GAAG,EAAEE,IAAI,GAAGC,EAAEf,QAAQH,QAAQL,EAAEY,OAAOe,OAAOV,EAAES,GAAGR,EAAE,KAAKI,IAAIL,EAAES,EAAE,GAAGP,GAAG,KAAKI,IAAIN,EAAES,EAAE,GAAGN,GAAG/C,EAAEyD,gBAAgBd,YAAY3C,GAAG,IAAIG,EAAEH,EAAE0D,eAAe,QAAG,IAAShC,QAAG,IAASL,GAAGA,EAAEsC,KAAKC,YAAY,CAACC,OAAO5D,EAAE6D,OAAO3D,gBAAgBH,GAAG+D,QAAQC,IAAI,iCAAiC,CAAC,IAAIC,EAAE,IAAIC,eAAeD,EAAEE,iBAAiB,YAAYJ,QAAQC,IAAI,+BAA+BC,EAAEG,KAAK,MAAMjE,GAAE,GAAI8D,EAAEI,aAAa,cAAcJ,EAAEK,OAAO,WAAWtE,EAAEyD,gBAAgBQ,EAAEM,mBAAmBvE,GAAG,IAAIG,EAAEH,EAAE0D,eAAe,QAAG,IAAShC,QAAG,IAASL,GAAGA,EAAEsC,KAAKC,YAAY,CAACC,OAAO5D,EAAE6D,OAAO3D,gBAAgBH,GAAG+D,QAAQC,IAAI,8BAA8BC,EAAEO,OAAO,MAAM,kBAAkB,MAAMC,MAAM1E,YAAYC,GAAGQ,KAAKkE,UAAU1E,EAAEQ,KAAKmE,UAAU,GAAG5E,iBAAiBC,GAAGQ,KAAKmE,UAAUC,KAAK5E,GAAGD,mBAAmBC,GAAG,MAAMC,EAAEO,KAAKmE,UAAU3C,QAAQhC,GAAGC,GAAG,GAAGO,KAAKmE,UAAUE,OAAO5E,EAAE,GAAGF,KAAKC,GAAGQ,KAAKmE,UAAU1C,MAAM,GAAG6C,SAAS7E,IAAIA,EAAED,OAAO,MAAM+E,WAAWhF,cAAcS,KAAKwE,OAAO,GAAGjF,SAASC,EAAEC,GAAG,MAAME,EAAEK,KAAKwE,OAAOhF,GAAGG,GAAGA,EAAE8E,KAAKhF,GAAGF,iBAAiBC,EAAEC,GAAG,IAAIE,EAAEK,KAAKwE,OAAOhF,GAAGG,IAAIA,EAAE,IAAIsE,MAAMzE,GAAGQ,KAAKwE,OAAOhF,GAAGG,GAAGA,EAAE+E,iBAAiBjF,GAAGF,oBAAoBC,EAAEC,GAAG,MAAME,EAAEK,KAAKwE,OAAOhF,GAAGG,GAAGA,EAAEwE,UAAU3C,QAAQ/B,IAAI,IAAIE,EAAEgF,mBAAmBlF,GAAG,IAAIE,EAAEwE,UAAUlD,eAAejB,KAAKwE,OAAOhF,KAAK,MAAMoF,OAAOrF,cAAc,GAAGqF,OAAOC,SAAS,OAAOD,OAAOC,SAASD,OAAOC,SAAS7E,KAAKA,KAAK8E,UAAU,GAAG9E,KAAK+E,mBAAmB,GAAG/E,KAAKgF,WAAW,IAAIT,WAAWvE,KAAKiF,eAAc,EAAG1F,iBAAiBC,EAAEC,GAAG,KAAKO,KAAKgF,YAAYxF,GAAGC,GAAG,MAAM,IAAIyF,MAAM,yCAAyClF,KAAKgF,WAAWrB,iBAAiBnE,EAAEC,GAAGF,qBAAqBC,GAAG,KAAKA,GAAGQ,KAAKmF,kBAAkBnF,KAAKmF,iBAAiBhC,MAAM,MAAM,IAAI+B,MAAM,oCAAoC3B,QAAQC,IAAI,8CAA8CD,QAAQC,IAAIhE,GAAGQ,KAAKmF,iBAAiBhC,KAAKC,YAAY5D,GAAGD,mBAAmBC,EAAEC,EAAEE,GAAG,IAAIkB,EAAEvB,WAAW8F,sBAAsB,GAAGzF,EAAE0F,cAAcnE,EAAE,IAAI5B,WAAWuB,EAAEwE,cAAc,OAAOrF,KAAKmF,iBAAiBhC,KAAKC,YAAY,CAACkC,KAAK,MAAMC,MAAM1E,EAAE2E,MAAM/F,EAAEgG,UAAUjG,EAAEkG,UAAU/F,IAAIK,KAAK+E,mBAAmBvF,GAAG,CAACmG,IAAI9E,EAAE+E,GAAG1E,GAAGL,EAAEtB,iBAAiBC,GAAG,IAAIC,EAAE,IAAIH,WAAWE,EAAE+F,MAAMF,cAAcrF,KAAKmF,iBAAiBhC,KAAKC,YAAY,CAACkC,KAAK,MAAMC,MAAM/F,EAAE+F,MAAMC,MAAMhG,EAAEgG,MAAMC,UAAUjG,EAAEiG,UAAUC,UAAUlG,EAAEkG,YAAY1F,KAAK+E,mBAAmBvF,EAAEiG,WAAW,CAACE,IAAInG,EAAE+F,MAAMK,GAAGnG,GAAGF,uBAAuBC,EAAEC,GAAG,IAAKD,IAAGC,EAAyB,MAAM,IAAIyF,MAAM,gCAAgClF,KAAK+E,oBAAoB/E,KAAK+E,mBAAmBvF,IAAIQ,KAAK+E,mBAAmBvF,GAAGoG,GAAGxB,KAAK3E,GAAGF,iBAAiBC,GAAG,QAAG,IAASA,EAAE,CAAC,MAAMC,EAAE,IAAIsD,WAAWvD,EAAEqG,SAASlG,EAAE,IAAIoD,WAAWvD,EAAEqG,SAAS,OAAOrG,EAAEsG,sBAAsBrG,GAAGD,EAAEuG,qBAAqBpG,GAAG,CAACqG,sBAAsBxG,EAAEwG,sBAAsBH,QAAQrG,EAAEqG,QAAQI,mBAAmBtG,EAAEuG,cAAczG,IAAIF,eAAeC,EAAEC,GAAG,QAAG,IAASO,KAAKmG,mBAAc,IAAS3G,QAAG,IAASC,EAAE,CAAC,IAAIE,EAAEK,KAAKmG,aAAaC,iBAAiBzG,EAAEqG,sBAAsB,IAAIrG,EAAEkG,QAAQ,IAAIlG,EAAE0G,aAAa,GAAG1G,EAAE2G,aAAa,EAAEtG,KAAKmF,iBAAiBoB,QAAQ5G,GAAG,IAAIkB,GAAG,EAAEK,EAAE,GAAGlB,KAAK8E,UAAUtF,GAAG,CAACgH,SAAS7G,EAAE8G,gBAAgB5F,EAAE6F,SAASjH,GAAG,MAAM0B,EAAE,KAAKD,EAAElB,KAAK2G,iBAAiB3G,KAAK8E,UAAUtF,GAAGgH,UAAUxG,KAAK8E,UAAUtF,GAAGkH,SAASxF,GAAGlB,KAAK8E,UAAUtF,GAAGiH,gBAAgBG,sBAAsBzF,GAAGN,GAAGM,cAAS,IAASnB,KAAKmG,eAAenG,KAAK8E,UAAUtF,GAAG,CAACkH,SAASjH,IAAIF,mBAAmBsH,OAAOC,KAAK9G,KAAK8E,WAAWiC,KAAKvH,GAAGQ,KAAKoG,eAAe5G,EAAEQ,KAAK8E,UAAUtF,GAAGkH,YAAYnH,eAAeC,QAAM,IAASQ,KAAKmG,mBAAc,IAASnG,KAAKmF,uBAAkB,IAASnF,KAAK8E,UAAUtF,EAAEwH,MAAMC,qBAAqBjH,KAAK8E,UAAUtF,EAAEwH,IAAIP,wBAAwBzG,KAAK8E,UAAUtF,EAAEwH,KAAMzH,WAAWC,EAAEC,GAAG,GAAGD,GAAGC,GAAG,IAAIyH,IAAIzH,GAAI,OAAOO,KAAKmG,aAAanG,KAAKmH,iBAAiB3H,EAAEQ,KAAKoH,gBAAgB3H,OAAE,IAASO,KAAKmG,eAAenG,KAAKmG,aAAa,IAAIkB,aAAa,CAACC,YAAY,sBAAsBtH,KAAKuH,6BAA6BvH,KAAKwH,sBAAqB,GAAI,MAAM,IAAItC,MAAM,0DAA0D3F,OAAO,QAAG,IAASS,KAAKmG,aAAa,MAAM,cAAcnG,KAAKmG,aAAasB,OAAOzH,KAAK0H,QAAO,IAAK1H,KAAKmG,aAAawB,UAAS,GAAIpI,YAAO,IAASS,KAAKmF,kBAAkBnF,KAAKmG,aAAayB,UAAUrI,sBAAiB,IAASS,KAAKmF,mBAAmBnF,KAAKmF,iBAAiB0C,WAAW7H,KAAKmG,aAAa2B,aAAa9H,KAAKmF,sBAAiB,GAAQ5F,KAAKC,GAAG,QAAG,IAASQ,KAAKmF,iBAAiB,CAAC,MAAM1F,EAAEO,KAAKmF,iBAAiB4C,WAAWC,IAAIxI,GAAG,OAAOC,EAAE8F,OAAO,GAAGhC,QAAQC,IAAIhE,EAAE,KAAKC,EAAE8F,QAAO,EAAG,OAAM,EAAGhG,KAAKC,GAAG,QAAG,IAASQ,KAAKmF,iBAAiB,CAAC,MAAM1F,EAAEO,KAAKmF,iBAAiB4C,WAAWC,IAAIxI,GAAG,OAAOC,EAAE8F,OAAO,GAAGhC,QAAQC,IAAIhE,EAAE,KAAKC,EAAE8F,QAAO,EAAG,OAAM,EAAGhG,KAAKC,GAAG,SAASQ,KAAKmF,mBAAmBnF,KAAKmF,iBAAiBhC,OAAQ,cAAcnD,KAAKmG,aAAasB,OAAOzH,KAAKmG,aAAawB,SAAS3H,KAAKmF,iBAAiBhC,KAAKC,YAAY,CAAC6E,KAAK,EAAEC,MAAM1I,EAAE0I,MAAMC,KAAK3I,EAAE2I,OAAO,IAAI5I,eAAeC,EAAEC,QAAG,IAASO,KAAKmF,kBAAkBnF,KAAKmF,iBAAiBhC,KAAKC,YAAY,CAACgF,MAAM5I,EAAE2B,EAAE1B,IAAIF,iBAAiBC,GAAGQ,KAAKmG,aAAakC,wBAAwB7I,GAAG+G,QAAQvG,KAAKmF,kBAAkB5F,iBAAiBC,GAAG+D,QAAQ+E,MAAM,gCAAgC9I,EAAE+I,WAAW/I,EAAEiB,QAAQlB,2BAA2B,MAAMC,EAAEgJ,OAAOC,YAAY,CAACC,OAAM,EAAGC,OAAM,GAAIC,UAAUC,aAAaC,aAAatJ,GAAGuJ,MAAMvJ,GAAGQ,KAAKgJ,iBAAiBxJ,KAAKyJ,MAAMjJ,KAAKkJ,kBAAkB3J,iCAAiC,QAAG,IAASS,KAAKmG,aAAa,OAAM,EAAG,UAAUnG,KAAKmG,aAAagD,aAAaC,UAAUpJ,KAAKoH,iBAAiB,MAAM5H,GAAG,OAAO+D,QAAQ+E,MAAM,sFAAsF9I,EAAE+I,UAAS,EAAG,IAAI,OAAOvI,KAAKmF,iBAAiB,IAAIkE,iBAAiBrJ,KAAKmG,aAAanG,KAAKmH,kBAAkBnH,KAAKmF,iBAAiBmE,sBAAsB,WAAWtJ,KAAKmF,iBAAiBoE,iBAAiB,WAAWvJ,KAAKmF,iBAAiBqE,aAAaxJ,KAAKmG,aAAa2B,YAAY2B,iBAAgB,EAAG,MAAMjK,GAAG,OAAO+D,QAAQ+E,MAAM,sFAAsF9I,EAAE+I,UAAS,GAAIhJ,qBAAqB,QAAG,IAASS,KAAKmF,iBAAiB,IAAInF,KAAKmG,aAAa2B,YAAYwB,sBAAsB,WAAWtJ,KAAKmG,aAAa2B,YAAYyB,iBAAiB,WAAWvJ,KAAKmG,aAAa2B,YAAY0B,aAAaxJ,KAAKmG,aAAa2B,YAAY2B,gBAAgBzJ,KAAKmF,iBAAiBoB,QAAQvG,KAAKmG,aAAa2B,aAAa9H,KAAKmF,iBAAiBuE,iBAAiBlK,GAAG+D,QAAQ+E,MAAM,2DAA2DtI,KAAKmF,iBAAiBwE,uBAAuBnK,GAAG+D,QAAQC,IAAI,yCAAyC2B,iBAAiByE,gBAAgB5J,KAAKmF,iBAAiBhC,KAAK0G,eAAerK,GAAG+D,QAAQ+E,MAAM,0CAA0C9I,EAAEsK,MAAM9J,KAAKmF,iBAAiBhC,KAAK4G,UAAUvK,GAAGQ,KAAKgK,0BAA0BxK,GAAG,MAAMA,GAAG+D,QAAQ+E,MAAM,+CAA+C9I,EAAE+I,UAAUhJ,0BAA0BC,GAAG,GAAGA,GAAGA,EAAEsK,KAAK,GAAGtK,EAAEsK,KAAKG,IAAI,SAASzK,EAAEsK,KAAKG,GAAG,OAAOzK,EAAEsK,KAAKtE,OAAO,IAAI,KAAK,MAAM,IAAI,MAAMxF,KAAKkK,QAAQlG,KAAKxE,EAAEsK,KAAKK,GAAG,GAAG3K,EAAEsK,KAAKvE,MAAM/F,EAAEsK,KAAKK,GAAG,SAAS,GAAG3K,EAAEsK,KAAKG,IAAI,QAAQzK,EAAEsK,KAAKG,GAAG,OAAOzK,EAAEsK,KAAKtE,OAAO,IAAI,KAAKxF,KAAKgF,WAAWoF,SAAS,iBAAiB,CAACzE,IAAInG,EAAEsK,KAAKvE,MAAME,UAAUjG,EAAEsK,KAAKrE,UAAUC,UAAUlG,EAAEsK,KAAKpE,aAAanG,sBAAsBC,QAAG,IAASA,QAAG,IAASQ,KAAKmF,mBAAmBnF,KAAKmF,iBAAiBhC,KAAK4G,UAAUvK,GAAGD,WAAWC,EAAEC,GAAG,QAAG,IAASO,KAAKmG,aAAa,KAAK,oCAAoClE,kBAAkBjC,KAAKmG,aAAa3G,EAAEC,EAAEO,KAAKmF,mBAAmB,IAAIkF,eAAe,oBAAoBC,WAAWA,WAAW,oBAAoB9B,OAAOA,OAAO,oBAAoB+B,OAAOA,OAAO,oBAAoBC,KAAKA,KAAK,GAAG,SAASC,qBAAqBjL,GAAG,IAAIC,EAAE,CAACiL,QAAQ,IAAI,OAAOlL,EAAEC,EAAEA,EAAEiL,SAASjL,EAAEiL,QAAQ,IAAIC,QAAQF,+BAA+BjL,GAAG,IAAIC,EAAEE,EAAEF,EAAE4K,eAAe1K,EAAE,WAAW,SAASH,EAAEC,EAAEE,EAAEkB,GAAG,OAAOb,KAAKgH,KAAKxH,EAAEoL,UAAU5K,KAAKS,KAAKhB,EAAEO,KAAK6K,QAAQlL,EAAEK,KAAK8K,YAAYjK,EAAEb,KAAK,SAASP,EAAED,EAAEC,EAAEE,EAAEkB,GAAGb,KAAK+K,KAAKvL,EAAEQ,KAAKgL,IAAIvL,EAAEO,KAAKiL,UAAUtL,EAAEK,KAAK8J,KAAK,GAAG9J,KAAKkL,SAASrK,EAAEb,KAAKmL,WAAWnL,KAAKgL,MAAMxL,EAAEqL,QAAQ5J,OAAO,SAAStB,EAAEH,EAAEC,GAAGO,KAAKoL,QAAQ5L,EAAEQ,KAAKqL,MAAM5L,EAAEO,KAAKsL,OAAO,GAAGtL,KAAKuL,MAAM,GAAGvL,KAAKwL,UAAU,GAAGxL,KAAKyL,UAAU,GAAG,SAAS5K,EAAErB,EAAEC,GAAGO,KAAK0L,MAAMlM,EAAEQ,KAAK2L,MAAMlM,GAAGO,KAAK0L,MAAM,GAAGjL,KAAK,IAAId,EAAEK,KAAK4L,OAAO,GAAG5L,KAAK0L,MAAMpH,kBAAkB9E,GAAGG,EAAEkM,eAAerM,EAAEiB,QAAQd,EAAEH,EAAEiB,MAAM,IAAId,EAAEH,EAAEiB,MAAM2D,KAAK5E,MAAM,SAAS0B,IAAIlB,KAAK8L,MAAM,IAAI,SAAS3K,EAAE3B,EAAEC,EAAE0B,GAAG,GAAG3B,aAAaqB,EAAE,CAAC,IAAIqB,EAAE1C,EAAE2B,EAAE1B,OAAOyC,EAAErB,EAAEkL,aAAavM,EAAEC,GAAG,IAAI,IAAI0C,KAAKnC,KAAKoL,QAAQlJ,EAAElC,KAAKgM,QAAQ,CAACC,aAAY,EAAGC,MAAMhK,EAAEgK,OAAO,IAAIhL,GAAGC,GAAG,GAAGnB,KAAKgM,QAAQ7J,GAAGhB,EAAEgB,GAAGnC,KAAKkM,MAAMlM,KAAKgM,QAAQE,MAAMlM,KAAKmM,gBAAW,EAAO,IAAI/J,EAAE,IAAIzC,EAAEuC,EAAE,GAAGlC,KAAKoM,MAAM,CAAChK,GAAGA,EAAEmJ,MAAMrJ,EAAEyJ,OAAO,GAAGvJ,EAAEiK,QAAQnK,EAAEyJ,OAAOvJ,EAAEkK,UAAUtM,KAAKuM,QAAQ,EAAE,SAASrK,EAAE1C,GAAG,IAAIC,SAASD,EAAE,GAAG,WAAWC,EAAE,OAAOD,EAAE,GAAG,WAAWC,EAAE,CAAC,GAAGD,EAAEgN,QAAQ,OAAOC,KAAKC,UAAUlN,EAAEgN,SAAS,GAAGhN,aAAamN,OAAO,OAAOnN,EAAEoN,WAAW,GAAGpN,EAAEqN,KAAK,MAAM,IAAIrN,EAAEqN,KAAK,GAAGrN,EAAEsN,KAAK,MAAM,IAAIC,OAAOvN,EAAEsN,MAAM,IAAI,MAAM,IAAI5H,MAAM,wBAAwB1F,IAAI,OAAOA,EAAEoL,UAAU,EAAEpL,EAAEwN,UAAUJ,SAAS,SAASpN,GAAG,IAAIC,OAAE,IAASD,EAAEQ,KAAK6K,QAAQ9D,IAAI7E,GAAG+K,KAAK,KAAKjN,KAAK6K,QAAQpJ,MAAM,EAAEjC,GAAGuH,IAAI7E,GAAG+K,KAAK,KAAK,MAAMjN,KAAK6K,QAAQpJ,MAAMjC,GAAGuH,IAAI7E,GAAG+K,KAAK,KAAK,OAAOjN,KAAKS,KAAK,MAAMhB,GAAGA,EAAEuN,UAAUJ,SAAS,WAAW,MAAM,IAAI5M,KAAK+K,KAAK6B,SAAS5M,KAAKgL,KAAK,aAAahL,KAAKiL,WAAW,IAAIxL,EAAEuN,UAAUE,UAAU,SAAS1N,GAAG,IAAIG,EAAE,IAAIF,EAAEO,KAAK+K,KAAK/K,KAAKgL,IAAI,EAAEhL,KAAKiL,UAAUjL,KAAKkL,UAAU,OAAOvL,EAAEwN,KAAKnN,KAAKL,EAAEyN,MAAM5N,EAAEG,EAAEwL,aAAaxL,EAAEmK,KAAKnK,EAAE0N,QAAQ1N,EAAEyN,WAAM,GAAQzN,GAAGF,EAAEuN,UAAUK,MAAM,WAAW,IAAI7N,EAAE,GAAGC,EAAEO,KAAK,GAAGR,EAAE4E,KAAK3E,EAAE2N,MAAMtD,MAAMrK,EAAEA,EAAE0N,WAAW1N,EAAE0N,MAAM,OAAO3N,EAAE8N,UAAU9N,GAAGC,EAAEuN,UAAUO,OAAO,WAAWvN,KAAK+K,KAAKD,cAAc9K,KAAK8J,KAAK9J,KAAK+K,KAAKD,YAAY9K,KAAK8J,KAAK9J,KAAKiL,UAAU9J,EAAEqM,QAAQ7N,EAAEqN,UAAUV,QAAQ,SAAS9M,GAAG,IAAI,IAAIC,EAAEO,KAAKsL,OAAO3L,EAAEK,KAAKuL,MAAM1K,EAAEb,KAAKyL,UAAUvK,EAAE,EAAEA,EAAEzB,EAAEwB,OAAOC,IAAI,CAAC,IAAIgB,EAAEzC,EAAEyB,GAAG,GAAGgB,EAAEiJ,YAAY,GAAGjJ,EAAEqL,SAASrL,EAAE4H,OAAO3I,EAAEqM,KAAK,CAAC,IAAI,IAAIrL,EAAED,EAAEgJ,SAAS9I,EAAED,EAAElB,OAAOmB,KAAK,CAAC,IAAIC,EAAEF,EAAEC,GAAGpC,KAAKyN,SAASpL,EAAEH,GAAG,GAAGA,EAAE+I,YAAYjL,KAAKqL,MAAM,CAAC,IAAI/I,EAAEJ,EAAE6I,KAAKtK,MAAMT,KAAKyL,UAAUnJ,GAAGtC,KAAKyL,UAAUnJ,IAAI,IAAI8B,KAAKlC,SAAS,CAAC,GAAG,iBAAiBI,EAAEJ,EAAE6I,KAAKF,QAAQ3I,EAAE8I,MAAM,CAAChL,KAAKwL,UAAUpH,KAAKlC,GAAG,SAAS,GAAGvC,EAAE2C,IAAI,GAAG3C,EAAE2C,GAAG8B,KAAKlC,GAAGrB,EAAEgL,eAAevJ,GAAG,CAAC,IAAIC,EAAE1B,EAAEyB,GAAG,IAAIF,EAAE,EAAEA,EAAEG,EAAEtB,OAAOmB,IAAI,CAAC,IAAII,EAAED,EAAEH,GAAGpC,KAAKyN,SAASvL,EAAEM,UAAU7C,EAAE2C,GAAG,CAACJ,GAAGlC,KAAKqM,QAAQ/J,MAAM3C,EAAEqN,UAAUX,QAAQ,SAAS7M,GAAG,IAAI,IAAIG,EAAEK,KAAKoL,QAAQQ,OAAOpM,IAAI,GAAGqB,EAAE,EAAEA,EAAElB,EAAEsB,OAAOJ,IAAI,CAAC,IAAIK,EAAEvB,EAAEkB,GAAGM,EAAEnB,KAAKuL,MAAM/L,GAAG0C,EAAE,IAAIzC,EAAEyB,EAAE,EAAElB,KAAKqL,MAAMlK,GAAGnB,KAAKsL,OAAOlH,KAAKlC,KAAKvC,EAAEqN,UAAUS,SAAS,SAASjO,EAAEC,GAAG,IAAIE,EAAEH,EAAE0N,UAAUzN,GAAGO,KAAKsL,OAAOlH,KAAKzE,IAAIkB,EAAEkL,aAAa,SAAStM,EAAEE,GAAG,IAAIuB,EAAEzB,EAAEiO,MAAMjO,EAAEkO,cAAchO,EAAEF,EAAEkO,YAAYlO,EAAEA,EAAEmO,aAAa,IAAIzM,EAAE,IAAIN,EAAEpB,EAAEA,EAAEsH,cAActH,GAAG,OAAO,IAAID,EAAEC,EAAEgB,KAAKhB,EAAEoL,QAAQpL,EAAEqL,gBAAgBnL,GAAG,OAAOwB,EAAE+K,MAAMhL,EAAEC,GAAGD,EAAE8L,UAAUlB,MAAM,SAAStM,EAAEC,GAAGO,KAAKsD,OAAO9D,EAAEQ,KAAKqL,MAAM,EAAErL,KAAK6N,KAAKpO,EAAEA,EAAEoO,KAAK,EAAE7N,KAAK8N,cAAcrO,GAAGA,EAAEsO,IAAI,GAAG7M,EAAE8L,UAAUgB,KAAK,WAAW,GAAGhO,KAAKqL,MAAMrL,KAAKsD,OAAOrC,OAAO,CAAC,IAAIzB,EAAEQ,KAAKsD,OAAOtD,KAAKqL,SAAS,MAAM,OAAO7L,IAAIQ,KAAK6N,MAAM,EAAE7N,KAAK8N,cAAc9N,KAAKqL,OAAO,CAAC9F,MAAM/F,KAAK0B,EAAE8L,UAAUiB,KAAK,WAAW,MAAM,CAACJ,KAAK7N,KAAK6N,KAAKE,IAAI/N,KAAKqL,MAAMrL,KAAK8N,gBAAgB5M,EAAE8L,UAAUkB,YAAY,SAAS1O,EAAEC,GAAG,IAAIE,EAAEK,KAAKsD,OAAO,GAAG,iBAAiB3D,EAAE,CAAC,IAAIkB,EAAElB,EAAEwO,MAAM,MAAM1M,MAAMX,KAAKsN,IAAI,EAAEpO,KAAK6N,KAAK,GAAG7N,KAAK6N,MAAM3M,EAAEvB,EAAE6B,QAAQ,KAAKxB,KAAKqL,QAAQ,IAAInK,IAAIA,EAAEvB,EAAEsB,QAAQ,IAAIE,EAAEnB,KAAKqL,MAAMrL,KAAK8N,cAAc5L,EAAE6K,OAAO/M,KAAK6N,MAAM5M,OAAO,OAAOxB,GAAG,YAAYO,KAAK6N,KAAK,QAAQ1M,EAAE,SAAQ1B,GAAGoB,EAAEkG,cAAcvH,EAAEC,GAAG,OAAO0C,EAAEnC,KAAK6N,KAAKhN,EAAEI,OAAOxB,EAAE,EAAEyC,GAAG,IAAI1C,IAAIQ,MAAMiN,KAAK,OAAS,KAAK9K,EAAE,GAAGD,EAAEf,GAAG,MAAM,OAAO1B,EAAE,cAAcO,KAAKqL,MAAM,GAAG,SAASlJ,EAAE3C,EAAEC,GAAG,IAAIE,EAAEoN,OAAOvN,GAAG,OAAO6O,MAAM5O,EAAEE,EAAEsB,OAAO,GAAGgM,KAAK,KAAKtN,IAAIwB,EAAEqM,KAAK,GAAGrM,EAAE6L,UAAUsB,KAAK,SAAS9O,GAAG,IAAIC,EAAEoB,EAAEb,KAAKkM,MAAM,IAAIrL,EAAEiL,MAAMtM,EAAEQ,KAAKmM,cAAc,CAAC,IAAI,KAAK1M,EAAEoB,EAAEmN,QAAQ,MAAM,MAAMxO,GAAG,IAAI2B,EAAE,IAAIxB,EAAEK,KAAKoL,QAAQpL,KAAKuM,QAAQ,GAAG,MAAMvM,KAAKoM,MAAMhI,KAAKjD,IAAIiB,EAAE,IAAI8C,MAAMlF,KAAKuO,iBAAiB/O,KAAKgP,OAAOxO,KAAKuM,QAAQnK,EAAEqM,MAAMjP,EAAEiP,MAAMrM,EAAE,IAAIF,EAAElC,KAAKoM,MAAMpM,KAAKuM,SAASvM,KAAKgM,QAAQC,oBAAoBjM,KAAKoM,MAAMpM,KAAKuM,QAAQ,GAAG,IAAIpK,EAAEnC,KAAKuM,QAAQ,EAAEpL,EAAE,IAAIxB,EAAEK,KAAKoL,QAAQjJ,GAAGnC,KAAKoM,MAAMhI,KAAKjD,GAAG,IAAI,IAAIiB,EAAEC,OAAE,IAAS5C,EAAEiP,KAAKjP,EAAEiP,KAAKjP,EAAE8F,MAAMjD,EAAEzB,EAAE8N,cAAczN,EAAEzB,EAAE8F,MAAM9F,EAAE8C,EAAEL,EAAEsJ,UAAUhJ,EAAED,EAAEtB,OAAOuB,KAAK,CAAC,IAAIC,EAAEF,EAAEC,GAAGE,EAAED,EAAEsI,KAAKF,QAAQpI,EAAEuI,KAAK,GAAGtI,EAAEoK,KAAKpK,EAAEoK,KAAKxK,GAAGI,EAAEmK,KAAKnK,EAAEmK,OAAOpN,EAAEoN,KAAKnK,EAAE8J,UAAUnK,EAAE,CAAC,IAAIM,EAAEF,EAAEyK,UAAU,CAACpD,KAAKxH,EAAEmM,MAAMhP,EAAEmP,SAAQ,EAAG3D,UAAU9I,EAAE,IAAIhB,EAAEmK,OAAOlH,KAAKzB,IAAI,GAAGxB,EAAEmL,UAAU,IAAInL,EAAEmK,OAAOrK,OAAO,MAAMmB,EAAE,IAAI8C,MAAMlF,KAAK6O,YAAYpP,KAAK+O,OAAOxO,KAAKuM,QAAQnK,EAAEqM,MAAMhP,EAAE2C,EAAEpC,KAAKgM,QAAQC,cAAc/J,EAAEiK,WAAWtL,EAAEoN,QAAQjO,KAAKuM,UAAU,OAAOrK,IAAIlC,KAAKmM,WAAWtL,EAAEoN,QAAQjO,KAAK8O,QAAQ9O,KAAKuN,SAASvN,MAAMmB,EAAE6L,UAAUuB,iBAAiB,SAAS/O,GAAG,IAAIC,EAAEE,EAAEkB,EAAErB,EAAEiP,MAAM,OAAO5N,GAAGpB,EAAE,SAASgN,KAAKC,UAAU7L,EAAE6N,KAAK,IAAI,iBAAiB/O,EAAEK,KAAKkM,MAAMgC,YAAYrN,EAAE,kBAAkBpB,EAAE,sBAAsBE,EAAEH,EAAE+I,SAASvI,KAAK+O,kBAAkBpP,EAAEF,IAAI0B,EAAE6L,UAAU6B,YAAY,SAASrP,GAAG,IAAIC,GAAGD,EAAEqN,KAAKrN,EAAEqN,KAAK,WAAW,IAAIJ,KAAKC,eAAU,IAASlN,EAAE+F,MAAM/F,EAAE+F,MAAM/F,GAAGG,EAAEK,KAAKkM,MAAMgC,YAAY1O,EAAE,gBAAgB,OAAOQ,KAAK+O,kBAAkBpP,EAAEF,IAAI0B,EAAE6L,UAAU+B,kBAAkB,SAASvP,EAAEC,GAAG,IAAIE,EAAE,GAAGA,EAAEyE,KAAK5E,GAAG,IAAIqB,EAAEb,KAAKoM,MAAMnL,OAAO,EAAEC,EAAElB,KAAKoM,MAAMvL,GAAGM,EAAED,EAAEoK,OAAO0D,iBAAiBxP,GAAG,IAAIC,EAAED,EAAEuL,KAAKF,QAAQrL,EAAEwL,KAAK,OAAOvL,GAAG,iBAAiBA,KAAK,OAAO,IAAI0B,EAAEF,QAAQtB,EAAEyE,KAAK,cAAc3E,EAAE,6EAA6EO,KAAKiP,kBAAkB/N,EAAEoK,OAAO3L,KAAKA,EAAEyE,KAAK,cAAc3E,EAAE,6DAA6D0B,EAAE4F,cAAcvH,GAAG,OAAOQ,KAAKkP,qBAAqB1P,EAAE,KAAK,CAACA,KAAKQ,MAAMsE,kBAAkB9E,GAAG,IAAIC,EAAED,EAAE,GAAGqB,EAAEpB,EAAEsL,KAAKF,QAAQpL,EAAEuL,KAAK9J,EAAElB,KAAKmP,iBAAiBtO,GAAGlB,EAAEyE,KAAK,KAAKlD,EAAE,cAAclB,KAAKiP,kBAAkBzP,EAAEG,KAAKK,OAAOL,EAAEyE,KAAK,IAAIzE,EAAEsN,KAAK,OAAO9L,EAAE6L,UAAUiC,kBAAkB,SAASzP,EAAEC,GAAG,IAAI,IAAIE,EAAEkB,EAAE,EAAEK,EAAE,EAAEA,EAAE1B,EAAEyB,OAAOC,IAAI,CAAC,IAAIC,EAAE3B,EAAE0B,GAAGgB,EAAEf,EAAE4J,KAAK6B,SAASzL,EAAE6J,KAAK9I,IAAIvC,EAAEkB,KAAKA,EAAE,GAAGpB,EAAE2E,KAAK,SAASvD,EAAE,iCAAiCA,EAAE,EAAEpB,EAAE2E,KAAK,OAAOlC,IAAIvC,EAAEuC,IAAIf,EAAE6L,UAAUmC,iBAAiB,SAAS3P,GAAG,OAAO,SAASA,GAAG,IAAIC,SAASD,EAAE,GAAG,WAAWC,EAAE,OAAOD,EAAE,GAAG,WAAWC,EAAE,CAAC,GAAGD,EAAEgN,QAAQ,OAAOC,KAAKC,UAAUlN,EAAEgN,SAAS,GAAGhN,aAAamN,OAAO,MAAM,sBAAsBnN,EAAE,GAAGA,EAAEqN,KAAK,OAAOrN,EAAEqN,KAAK,SAAS,GAAGrN,EAAEsN,KAAK,MAAM,kBAAkBC,OAAOvN,EAAEsN,MAAM,MAAM,IAAI5H,MAAM,wBAAwB1F,IAAlS,CAAuSA,IAAI2B,EAAE6L,UAAUkC,qBAAqB,SAAS1P,EAAEC,GAAG,IAAI,IAAIA,EAAE+B,QAAQhC,GAAG,OAAO,KAAK,GAAG,IAAIA,EAAE0L,SAASjK,OAAO,MAAM,CAACzB,GAAG,IAAIG,EAAEH,EAAE0L,SAAS,GAAGrK,EAAE,CAACrB,GAAG4P,OAAO3P,GAAGyB,EAAElB,KAAKkP,qBAAqBvP,EAAEkB,GAAG,OAAO,OAAOK,EAAE,KAAK,CAAC1B,GAAG4P,OAAOlO,IAAIC,EAAE6L,UAAUiB,KAAK,WAAW,IAAIzO,EAAEQ,KAAKoM,MAAMpM,KAAKuM,SAAS,OAAO/M,EAAE2M,WAAWnM,KAAKmM,WAAW3M,GAAG2B,EAAE6L,UAAUqC,QAAQ,SAAS7P,GAAG,IAAIC,EAAED,EAAE6L,MAAMrL,KAAKuM,QAAQ9M,EAAEO,KAAKoM,MAAM3M,GAAGD,EAAEQ,KAAKoM,MAAM/H,OAAO5E,EAAE,GAAGO,KAAKmM,WAAW3M,EAAE2M,WAAWnM,KAAK8O,QAAQ9O,KAAKuN,UAAUpM,EAAE6L,UAAUsC,OAAO,SAAS9P,GAAG,IAAIQ,KAAKgM,QAAQC,YAAY,MAAM,IAAI/G,MAAM,gDAAgDlF,KAAKqP,QAAQrP,KAAKoM,MAAM5M,KAAK2B,EAAE6L,UAAUO,OAAO,WAAW,IAAI/N,EAAE,GAAGC,EAAEO,KAAKoL,QAAQO,MAAM,OAAO3L,KAAKoM,MAAMpM,KAAKoM,MAAMnL,OAAO,GAAGqK,OAAOhH,kBAAkB3E,GAAGA,EAAEoL,KAAKtK,OAAOhB,GAAGE,EAAEqL,MAAMrL,EAAEoL,KAAKF,QAAQ5J,QAAQ,IAAItB,EAAEsL,WAAWtL,EAAEmK,OAAO3I,EAAEqM,MAAMhO,EAAE4E,KAAKzE,MAAMH,EAAEuH,cAAcvH,GAAG,OAAOA,EAAEsK,SAAS,CAACyF,OAAOpO,EAAEqO,QAAQ3O,EAAE4O,KAAKjQ,IAAIA,EAAEkL,QAAQlL,EAAEkL,QAAQ/K,IAAIF,EAAEkL,QAAQhL,OAAO+P,IAAIjF,+BAA+BjL,GAAG,IAAIC,EAAEE,EAAEF,EAAE4K,eAAe1K,EAAE,WAAW,IAAIH,EAAEqH,OAAOmG,UAAUnB,eAAepM,EAAEoH,OAAOmG,UAAUJ,SAASjN,EAAE,kBAAiB,IAAKgN,QAAQgD,OAAO,SAAS9O,EAAErB,GAAG,OAAOA,GAAG,oBAAoBC,EAAEmQ,KAAKpQ,GAAG,SAAS0B,EAAE1B,GAAG,OAAOA,GAAG,iBAAiBA,IAAIqB,EAAErB,KAAK6O,MAAMwB,QAAQrQ,GAAG,SAAS2B,EAAE3B,GAAG,MAAM,IAAIA,EAAE,IAAI,SAAS0C,EAAE1C,GAAG,OAAOA,EAAEyB,OAAO,MAAMzB,EAAEuH,cAAcvH,GAAG,MAAM,MAAMA,EAAE,OAAOyN,KAAK,KAAK,IAAI,OAAO,SAAS9K,EAAE3C,GAAG,GAAG,iBAAiBA,EAAE,MAAM,MAAMA,EAAEwD,QAAQ,yBAAyB,QAAQ,IAAI,GAAGnC,EAAErB,GAAG,CAAC,GAAGA,EAAEsQ,WAAW,MAAM,IAAI5K,MAAM,8BAA8B,GAAG1F,EAAE+K,OAAO,MAAM,IAAIrF,MAAM,6BAA6B,GAAG1F,EAAEmQ,OAAO,MAAM,IAAIzK,MAAM,6BAA6B,GAAG1F,EAAEuQ,UAAU,MAAM,IAAI7K,MAAM,6BAA6B,OAAO1F,EAAEwQ,OAAO,MAAM,IAAI9K,MAAM,kBAAkB1F,GAAG,SAAS4C,EAAE3C,EAAEE,GAAG,GAAGuB,EAAEvB,KAAKA,EAAE,CAAC+B,MAAM/B,IAAIA,EAAEsQ,QAAQ,MAAM,IAAI/K,MAAM,6CAA6C,IAAI/D,EAAE,CAAC+O,YAAYzQ,EAAE0Q,aAAaxQ,EAAE2I,SAAS3I,EAAEyQ,SAASC,KAAI,EAAGrC,KAAK,KAAK5J,KAAK,KAAKkE,OAAM,EAAG8H,UAAS,EAAG7K,MAAM,KAAKsH,KAAK,KAAKyD,aAAY,GAAI,IAAI,IAAIpO,KAAKvC,EAAEH,EAAEoQ,KAAKjQ,EAAEuC,KAAKf,EAAEe,GAAGvC,EAAEuC,IAAI,GAAG,iBAAiBf,EAAE0L,MAAMpN,IAAI0B,EAAE0L,KAAK,MAAM,IAAI3H,MAAM,4CAA4C/D,EAAE0L,KAAK,gBAAgBpN,EAAE,MAAM,IAAI0C,EAAEhB,EAAEO,MAAM,OAAOP,EAAEO,MAAM2M,MAAMwB,QAAQ1N,GAAGA,EAAEA,EAAE,CAACA,GAAG,GAAGhB,EAAEO,MAAM6O,eAAe/Q,EAAEC,GAAG,OAAOoB,EAAErB,IAAIqB,EAAEpB,GAAG,EAAEoB,EAAEpB,IAAI,EAAEoB,EAAErB,GAAG,EAAEC,EAAEwB,OAAOzB,EAAEyB,UAAUE,EAAE,SAASkB,EAAE7C,GAAG,OAAO6O,MAAMwB,QAAQrQ,GAAG,SAASA,GAAG,IAAI,IAAIC,EAAE,GAAGE,EAAE,EAAEA,EAAEH,EAAEyB,OAAOtB,IAAI,CAAC,IAAIkB,EAAErB,EAAEG,GAAG,GAAGkB,EAAEoP,QAAQ,IAAI,IAAI/O,EAAE,GAAGkO,OAAOvO,EAAEoP,SAAS9O,EAAE,EAAEA,EAAED,EAAED,OAAOE,IAAI1B,EAAE2E,KAAK,CAAC6L,QAAQ/O,EAAEC,SAAS,CAAC,IAAIN,EAAEgM,KAAK,MAAM,IAAI3H,MAAM,qBAAqBuH,KAAKC,UAAU7L,IAAIpB,EAAE2E,KAAKhC,EAAEvB,EAAEgM,KAAKhM,KAAK,OAAOpB,EAAlP,CAAqPD,GAAG,SAASA,GAAG,IAAI,IAAIC,EAAEoH,OAAO2J,oBAAoBhR,GAAGG,EAAE,GAAGkB,EAAE,EAAEA,EAAEpB,EAAEwB,OAAOJ,IAAI,CAAC,IAAIM,EAAE1B,EAAEoB,GAAGqB,EAAE1C,EAAE2B,GAAGgB,EAAE,GAAGiN,OAAOlN,GAAG,GAAG,YAAYf,EAAE,CAAC,IAAIkB,EAAE,GAAGF,EAAEmC,kBAAkB9E,GAAG0B,EAAE1B,IAAI6C,EAAEpB,QAAQtB,EAAEyE,KAAKhC,EAAEjB,EAAEkB,IAAI1C,EAAEyE,KAAKhC,EAAEjB,EAAE3B,IAAI6C,EAAE,IAAIA,EAAE+B,KAAK5E,MAAM6C,EAAEpB,QAAQtB,EAAEyE,KAAKhC,EAAEjB,EAAEkB,SAAS,IAAI,IAAIC,EAAE,EAAEA,EAAEH,EAAElB,OAAOqB,IAAI3C,EAAEyE,KAAK,CAAC6L,QAAQ9N,EAAEG,KAAK,OAAO3C,EAAxT,CAA2TH,GAAG,IAAI8C,EAAEF,EAAE,QAAQ,CAAC+N,YAAW,EAAGG,aAAY,IAAK,SAAS/N,EAAE/C,EAAEC,GAAG,IAAI,IAAIyB,EAAE,KAAKkB,EAAEyE,OAAO4J,OAAO,MAAMpO,GAAE,EAAGE,EAAE,KAAKC,EAAE,GAAGC,EAAE,GAAGC,EAAE,EAAEA,EAAElD,EAAEyB,OAAOyB,IAAIlD,EAAEkD,GAAG0N,WAAW/N,GAAE,GAAI,IAAIK,EAAE,EAAEA,EAAElD,EAAEyB,OAAOyB,IAAI,CAAC,IAAIC,EAAEnD,EAAEkD,GAAG,GAAGC,EAAEsN,QAAQ,MAAM,IAAI/K,MAAM,kDAAkD,GAAGvC,EAAE2F,OAAO3F,EAAEyN,SAAS,CAAC,GAAGlP,EAAE,MAAMyB,EAAEyN,WAAWlP,EAAEkP,SAAS,IAAIlL,MAAM,aAAavC,EAAEyN,SAAS,WAAW,SAAS,kCAAkCzN,EAAEuN,YAAY,MAAM,IAAIhL,MAAM,yDAAyDvC,EAAEuN,YAAY,MAAMhP,EAAEyB,EAAE,IAAIE,EAAEF,EAAEjB,MAAMD,QAAQ,GAAGY,EAAE,KAAKQ,EAAE5B,QAAQ,iBAAiB4B,EAAE,IAAI,IAAIA,EAAE,GAAG5B,QAAQmB,EAAES,EAAE6N,QAAQC,WAAW,IAAIhO,EAAE,GAAGA,EAAE0N,KAAK1N,EAAEyB,MAAMzB,EAAEqL,KAAK,CAAC,IAAIvO,EAAE,MAAM,IAAIyF,MAAM,2EAA2EvC,EAAEuN,YAAY,MAAM,GAAGvN,EAAEyN,SAAS,MAAM,IAAIlL,MAAM,0EAA0EvC,EAAEuN,YAAY,MAAM,GAAG,IAAIrN,EAAE5B,OAAO,CAACoB,GAAE,EAAGG,EAAE4B,KAAKzB,GAAG,IAAI,IAAIG,EAAE,EAAEA,EAAED,EAAE5B,OAAO6B,IAAI,CAAC,IAAIW,EAAEZ,EAAEC,GAAG,GAAGjC,EAAE4C,GAAG,GAAG,OAAOlB,EAAEA,EAAEkB,EAAEmN,aAAa,GAAGrO,IAAIkB,EAAEmN,UAAS,IAAKjO,EAAEyN,SAAS,MAAM,IAAIlL,MAAM,sCAAsC,IAAI2L,EAAE3O,EAAEW,EAAEkE,IAAI5E,IAAI2O,EAAE,IAAInE,OAAOkE,GAAG,GAAGC,EAAEhE,KAAK,IAAI,MAAM,IAAI5H,MAAM,gCAAgC4L,GAAG,GAAG,IAAInE,OAAO,IAAIkE,GAAGE,KAAK,IAAI9P,OAAO,EAAE,EAAE,MAAM,IAAIiE,MAAM,8BAA8B4L,EAAE,yBAAyB,IAAInO,EAAEwN,YAAYW,EAAEhE,KAAK,MAAM,MAAM,IAAI5H,MAAM,mCAAmC4L,GAAGrO,EAAE2B,KAAKjD,EAAE0P,KAAK,IAAIG,EAAE9P,GAAGA,EAAEkP,SAASa,EAAEtR,IAAIqR,EAAE,KAAK,KAAKE,EAAEvR,GAAGqR,EAAE,GAAG,IAAI,OAAM,IAAKzO,IAAI0O,GAAG,KAAK,CAACE,OAAO,IAAIxE,OAAOzK,EAAEO,GAAGyO,EAAED,GAAGG,OAAO5O,EAAE6O,KAAKjP,EAAEkG,MAAMpH,GAAGoB,GAAG,SAASE,EAAEhD,EAAEC,EAAEE,GAAG,IAAIkB,EAAErB,IAAIA,EAAE4E,MAAM5E,EAAEwO,MAAM,GAAGnN,IAAIlB,EAAEkB,GAAG,MAAM,IAAIqE,MAAM,kBAAkBrE,EAAE,gBAAgBrB,EAAE0Q,YAAY,eAAezQ,EAAE,MAAM,GAAGD,GAAGA,EAAE6Q,KAAK,IAAI7Q,EAAE6Q,IAAI,MAAM,IAAInL,MAAM,4BAA4B1F,EAAE0Q,YAAY,eAAezQ,EAAE,MAAM,IAAIgD,EAAE,SAASjD,EAAEC,GAAGO,KAAKsR,WAAW7R,EAAEO,KAAKsL,OAAO9L,EAAEQ,KAAKsD,OAAO,GAAGtD,KAAKuR,MAAM,GAAGvR,KAAK8L,SAASrJ,EAAEuK,UAAUlB,MAAM,SAAStM,EAAEC,GAAG,OAAOO,KAAKsD,OAAO9D,GAAG,GAAGQ,KAAKqL,MAAM,EAAErL,KAAK6N,KAAKpO,EAAEA,EAAEoO,KAAK,EAAE7N,KAAK+N,IAAItO,EAAEA,EAAEsO,IAAI,EAAE/N,KAAKwR,YAAY/R,EAAEA,EAAE+R,YAAY,KAAKxR,KAAKyR,YAAYhS,EAAEA,EAAEgS,YAAY,KAAKzR,KAAK0R,SAASjS,EAAEA,EAAEgI,MAAMzH,KAAKsR,YAAYtR,KAAKuR,MAAM9R,GAAGA,EAAE8R,MAAM9R,EAAE8R,MAAM9P,QAAQ,GAAGzB,MAAMyC,EAAEuK,UAAUiB,KAAK,WAAW,MAAM,CAACJ,KAAK7N,KAAK6N,KAAKE,IAAI/N,KAAK+N,IAAItG,MAAMzH,KAAKyH,MAAM8J,MAAMvR,KAAKuR,MAAM9P,QAAQ+P,YAAYxR,KAAKwR,YAAYC,YAAYzR,KAAKyR,cAAchP,EAAEuK,UAAU0E,SAAS,SAASlS,GAAG,GAAGA,GAAGQ,KAAKyH,QAAQjI,EAAE,CAACQ,KAAKyH,MAAMjI,EAAE,IAAIC,EAAEO,KAAKsL,OAAO9L,GAAGQ,KAAKoR,OAAO3R,EAAE2R,OAAOpR,KAAKsI,MAAM7I,EAAE6I,MAAMtI,KAAK2R,GAAGlS,EAAE0R,OAAOnR,KAAKqR,KAAK5R,EAAE4R,OAAO5O,EAAEuK,UAAU4E,SAAS,WAAW5R,KAAK0R,SAAS1R,KAAKuR,MAAMlB,QAAQ5N,EAAEuK,UAAU6E,UAAU,SAASrS,GAAGQ,KAAKuR,MAAMnN,KAAKpE,KAAKyH,OAAOzH,KAAK0R,SAASlS,IAAI,IAAIkD,EAAE/C,EAAE,SAASH,EAAEC,GAAG,OAAOD,EAAEuR,KAAKtR,IAAI,SAASD,EAAEC,GAAG,IAAIE,EAAEH,EAAEuR,KAAKtR,GAAG,OAAO,IAAIE,EAAE,GAAGsB,OAAO,KAAKtB,GAAG,SAASgD,IAAI,OAAO3C,KAAKuF,MAAM,GAAG9C,EAAEuK,UAAU8E,UAAU,SAAStS,GAAG,IAAI,IAAIC,EAAEO,KAAKoR,OAAOnQ,OAAOtB,EAAE,EAAEA,EAAEF,EAAEE,IAAI,QAAG,IAASH,EAAEG,EAAE,GAAG,OAAOK,KAAKoR,OAAOzR,GAAG,MAAM,IAAIuF,MAAM,4CAA4CzC,EAAEuK,UAAUgB,KAAK,WAAW,IAAIxO,EAAEQ,KAAKqL,MAAM,GAAGrL,KAAK+R,YAAY,CAAC,IAAItS,EAAEO,KAAKgS,OAAOhS,KAAK+R,YAAY/R,KAAKiS,WAAWzS,GAAG,OAAOQ,KAAK+R,YAAY,KAAK/R,KAAKiS,WAAW,GAAGxS,EAAE,IAAIE,EAAEK,KAAKsD,OAAO,GAAG9D,IAAIG,EAAEsB,OAAO,CAAC,GAAGiB,EAAElC,KAAKqR,KAAK1R,EAAEgR,WAAWnR,IAAI,OAAOQ,KAAKgS,OAAO9P,EAAEvC,EAAEoC,OAAOvC,GAAGA,GAAG,IAAIqB,EAAEb,KAAK2R,GAAG9Q,EAAEqR,UAAU1S,EAAE,IAAI0B,EAAEwB,EAAE7B,EAAElB,GAAGwB,EAAEnB,KAAKsI,MAAM,GAAG,MAAMpH,EAAE,OAAOlB,KAAKgS,OAAO7Q,EAAExB,EAAE8B,MAAMjC,EAAEG,EAAEsB,QAAQzB,GAAG,IAAI0C,EAAElC,KAAK8R,UAAU5Q,GAAGiB,EAAEjB,EAAE,GAAG,OAAOC,EAAEiP,UAAUlP,EAAEmK,QAAQ7L,GAAGQ,KAAK+R,YAAY7P,EAAElC,KAAKiS,WAAW9P,EAAEnC,KAAKgS,OAAO7Q,EAAExB,EAAE8B,MAAMjC,EAAE0B,EAAEmK,OAAO7L,IAAIQ,KAAKgS,OAAO9P,EAAEC,EAAE3C,KAAKiD,EAAEuK,UAAUgF,OAAO,SAASxS,EAAEC,EAAEE,GAAG,IAAIkB,EAAE,EAAE,GAAGrB,EAAE2Q,WAAW,CAAC,IAAIjP,EAAE,MAAMC,EAAE,EAAE,GAAG,OAAO1B,EAAEoB,EAAE,OAAO,KAAKK,EAAE6P,KAAKtR,IAAIoB,IAAIM,EAAED,EAAEgR,UAAU,IAAIhQ,EAAE,CAAC2K,KAAK,mBAAmBrN,EAAEqN,MAAMrN,EAAEqN,KAAKpN,IAAID,EAAE0Q,YAAY3K,MAAM,mBAAmB/F,EAAE+F,MAAM/F,EAAE+F,MAAM9F,GAAGA,EAAEiP,KAAKjP,EAAEmN,SAASjK,EAAE6L,OAAO7O,EAAEwQ,WAAWtP,EAAEgN,KAAK7N,KAAK6N,KAAKE,IAAI/N,KAAK+N,KAAK5L,EAAE1C,EAAEwB,OAAO,GAAGjB,KAAKqL,OAAOlJ,EAAEnC,KAAK6N,MAAMhN,EAAE,IAAIA,EAAEb,KAAK+N,IAAI5L,EAAEhB,EAAE,EAAEnB,KAAK+N,KAAK5L,EAAE3C,EAAE8Q,YAAY,MAAM,IAAIpL,MAAMlF,KAAKkO,YAAYhM,EAAE,mBAAmB,OAAO1C,EAAE6Q,IAAIrQ,KAAK4R,WAAWpS,EAAE4E,KAAKpE,KAAK6R,UAAUrS,EAAE4E,MAAM5E,EAAEwO,MAAMhO,KAAK0R,SAASlS,EAAEwO,MAAM9L,GAAG,oBAAoBiQ,QAAQA,OAAOC,SAAS,CAAC,IAAIvP,EAAE,SAASrD,GAAGQ,KAAKkM,MAAM1M,GAAGqD,EAAEmK,UAAUgB,KAAK,WAAW,IAAIxO,EAAEQ,KAAKkM,MAAM8B,OAAO,MAAM,CAACzI,MAAM/F,EAAE6S,MAAM7S,IAAIqD,EAAEmK,UAAUmF,OAAOC,UAAU,WAAW,OAAOpS,MAAMyC,EAAEuK,UAAUmF,OAAOC,UAAU,WAAW,OAAO,IAAIvP,EAAE7C,OAAO,OAAOyC,EAAEuK,UAAUkB,YAAY,SAAS1O,EAAEC,GAAG,GAAG,MAAMD,EAAE,CAAC,IAAIG,EAAEK,KAAKsD,OAAO7B,MAAMzB,KAAKqL,OAAO7L,EAAE,CAACkP,KAAK/O,EAAE6O,OAAOxO,KAAKqL,MAAM8E,YAAY,IAAIxQ,EAAE6B,QAAQ,MAAM,EAAE,EAAEqM,KAAK7N,KAAK6N,KAAKE,IAAI/N,KAAK+N,KAAK,IAAIlN,EAAEC,KAAKsN,IAAI,EAAE5O,EAAEgP,OAAOhP,EAAEuO,IAAI,GAAG7M,EAAE1B,EAAE2Q,WAAW3Q,EAAEkP,KAAKlN,QAAQ,MAAMhC,EAAEkP,KAAKzN,OAAOE,EAAEnB,KAAKsD,OAAOtB,UAAUnB,EAAErB,EAAEgP,OAAOtN,GAAG,OAAOzB,GAAG,YAAYD,EAAEqO,KAAK,QAAQrO,EAAEuO,IAAI,SAAQtO,GAAG,KAAK0B,EAAE,MAAQ,KAAKkN,MAAM7O,EAAEuO,KAAKd,KAAK,KAAK,KAAKxK,EAAEuK,UAAUsF,MAAM,WAAW,OAAO,IAAI7P,EAAEzC,KAAKsL,OAAOtL,KAAKyH,QAAQhF,EAAEuK,UAAUuF,IAAI,SAAS/S,GAAG,OAAM,GAAI,CAACgT,QAAQ,SAAShT,GAAG,IAAIC,EAAE8C,EAAEF,EAAE7C,IAAI,OAAO,IAAIiD,EAAE,CAACkJ,MAAMlM,GAAG,UAAU6L,OAAO,SAAS9L,EAAEC,GAAG,IAAIE,EAAEH,EAAEiT,KAAKpQ,EAAE7C,EAAEiT,MAAM,UAAUjT,EAAEiT,KAAK,IAAI5R,EAAEgG,OAAO2J,oBAAoBhR,GAAGC,IAAIA,EAAEoB,EAAE,IAAI,IAAI,IAAIK,EAAE2F,OAAO4J,OAAO,MAAMtP,EAAE,EAAEA,EAAEN,EAAEI,OAAOE,IAAID,EAAE2P,EAAEhQ,EAAEM,IAAIkB,EAAE7C,EAAEqR,IAAIzB,OAAOzP,GAAG,IAAIwB,EAAE,EAAEA,EAAEN,EAAEI,OAAOE,IAAI,IAAI,IAAIe,EAAEhB,EAAE2P,EAAEhQ,EAAEM,IAAIgB,EAAE0E,OAAO4J,OAAO,MAAMrO,EAAE,EAAEA,EAAEF,EAAEjB,OAAOmB,IAAI,CAAC,IAAIE,EAAEJ,EAAEE,GAAG,GAAGE,EAAE2N,QAAQ,CAAC,IAAIvN,EAAE,CAACN,EAAE,GAAG,GAAGE,EAAE2N,UAAUY,IAAI1O,EAAEG,EAAE2N,SAAS,CAAC9N,EAAEG,EAAE2N,UAAS,EAAG,IAAItN,EAAEzB,EAAEoB,EAAE2N,SAAS,IAAItN,EAAE,MAAM,IAAIuC,MAAM,qCAAqC5C,EAAE2N,QAAQ,gBAAgBY,EAAE,MAAM,IAAI,IAAIhO,EAAE,EAAEA,EAAEF,EAAE1B,OAAO4B,IAAI,CAAC,IAAIC,EAAEH,EAAEE,IAAI,IAAIX,EAAEV,QAAQsB,IAAIJ,EAAE0B,KAAKtB,IAAIZ,EAAEmC,OAAOqO,MAAMxQ,EAAEQ,GAAGN,KAAK,IAAIqB,EAAEoD,OAAO4J,OAAO,MAAM,IAAItP,EAAE,EAAEA,EAAEN,EAAEI,OAAOE,IAAI,CAAC,IAAI0P,EAAEpN,EAAEoN,EAAEhQ,EAAEM,IAAIoB,EAAErB,EAAE2P,IAAG,GAAI,IAAI1P,EAAE,EAAEA,EAAEN,EAAEI,OAAOE,IAAI,CAAC,IAAI2P,EAAEjQ,EAAEM,GAAG6P,EAAEvN,EAAEqN,GAAGG,EAAED,EAAEI,OAAO,IAAIhP,EAAE,EAAEA,EAAE6O,EAAEhQ,OAAOmB,IAAII,EAAEyO,EAAE7O,GAAG0O,EAAErN,GAAG,IAAIyN,EAAErK,OAAO2J,oBAAoBQ,EAAEK,MAAM,IAAIjP,EAAE,EAAEA,EAAE8O,EAAEjQ,OAAOmB,IAAII,EAAEwO,EAAEK,KAAKH,EAAE9O,IAAI0O,EAAErN,GAAG,OAAO,IAAIhB,EAAEgB,EAAEhE,IAAI6I,MAAMzB,OAAO8L,OAAO,CAACrK,OAAM,IAAK8H,SAASvJ,OAAO8L,OAAO,CAACvC,UAAS,IAAKwC,SAAS,SAASpT,GAAG,IAAI,IAAIC,EAAEoH,OAAO4J,OAAO,MAAM9Q,EAAEkH,OAAO4J,OAAO,MAAM5P,EAAEgG,OAAO2J,oBAAoBhR,GAAG0B,EAAE,EAAEA,EAAEL,EAAEI,OAAOC,IAAI,CAAC,IAAIC,EAAEN,EAAEK,GAAGgB,EAAE1C,EAAE2B,IAAIkN,MAAMwB,QAAQ3N,GAAGA,EAAE,CAACA,IAAIoC,kBAAkB9E,GAAG,IAAIG,EAAEH,EAAEyB,QAAQtB,EAAEH,EAAEyB,SAAS,IAAImD,KAAK5E,GAAG,iBAAiBA,EAAE,MAAM,IAAI0F,MAAM,uCAAuC/D,EAAE,MAAM1B,EAAED,GAAG2B,KAAK,SAASgB,EAAE3C,GAAG,OAAOiN,KAAKC,UAAUlN,GAAG,IAAI4C,EAAE,GAAG,IAAI,IAAIC,KAAKD,GAAG,4BAA4BzC,EAAE,CAAC,IAAI2C,EAAE3C,EAAE0C,GAAGD,GAAG,QAAQC,EAAE,MAAMD,GAAG,qBAAqBE,EAAEgC,kBAAkB9E,GAAG,IAAIG,EAAEF,EAAED,GAAG4C,GAAG,QAAQD,EAAE3C,GAAG,YAAY2C,EAAExC,GAAG,QAAQyC,GAAG,MAAM,OAAOA,GAAG,MAAMyQ,SAAS,QAAQzQ,MAAM5C,EAAEkL,QAAQlL,EAAEkL,QAAQ/K,IAAIF,EAAEiQ,IAAI/P,OAAOmT,4BAA4BrI,+BAA+BjL,IAAI,WAAW,SAASC,EAAED,GAAG,OAAOA,EAAE,GAAG,SAASG,EAAEH,GAAG,OAAOA,EAAE,GAAG+F,MAAM,IAAI1E,EAAE6O,IAAIxO,EAAE2F,OAAOkM,OAAO,CAACC,GAAG,CAACtR,MAAM,MAAMyO,YAAW,EAAGnC,KAAK,QAAQiF,QAAQ,OAAOC,MAAM,CAACxR,MAAM,UAAUsM,KAAK,QAAQmF,GAAG,CAACzR,MAAM,2BAA2B6D,MAAM/F,GAAGA,EAAEiC,MAAM,GAAG,GAAG0O,YAAW,GAAIiD,KAAK,CAAC1R,MAAM,YAAYsM,KAAK,aAAaqF,OAAO,CAAC3R,MAAM,kDAAkD6D,MAAM/F,GAAGiN,KAAK6G,MAAM9T,GAAGwO,KAAK,QAAQuF,SAAS,CAAC7R,MAAM,UAAU6D,MAAM/F,GAAGA,EAAEiC,MAAM,GAAG,GAAGuM,KAAK,OAAOmC,YAAW,IAAK,SAAS3Q,GAAG,IAAIC,EAAE,GAAG,IAAI,IAAIE,IAA4C,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,WAAW,WAAW,IAAI,KAAvGF,EAAEE,GAAG,CAAC+B,MAAM/B,EAAEqO,KAAK,QAAQ,OAAOvO,EAAtE,IAAkJ0B,EAAEN,EAAEyK,OAAO,CAACkI,KAAK3M,OAAOkM,OAAO,GAAG7R,EAAE,CAACuS,UAAU,CAAC/R,MAAM,2BAA2B6D,MAAM/F,GAAG,IAAImN,OAAOnN,MAAMkU,UAAU7M,OAAOkM,OAAO,GAAG7R,EAAE,CAACyS,IAAI,CAACjS,MAAM,IAAIsM,KAAK,YAAgB9L,EAAE,CAACwL,MAAMvM,EAAEyM,YAAY,CAAC,CAACnN,KAAK,eAAeoK,QAAQ,CAAC1J,EAAEoR,IAAI,MAAM,CAAC1F,KAAK,MAAMmG,IAAIlI,YAAYrL,GAAG,CAACgB,KAAK,eAAeoK,QAAQ,GAAGC,YAAY,SAAStL,GAAG,OAAO,OAAO,CAACiB,KAAK,QAAQoK,QAAQ,CAAC,IAAI,OAAO,IAAI,gBAAgBC,YAAY,SAAStL,GAAG,OAAOA,EAAE,KAAK,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,QAAQC,YAAY,SAAStL,GAAG,MAAM,CAACA,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,OAAO,KAAK,QAAQC,YAAY,SAAStL,GAAG,MAAM,CAACA,EAAE,IAAI4P,OAAO5P,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,OAAO,IAAI1J,EAAEoR,IAAI,SAAS,CAAC1F,KAAK,SAASqG,MAAM,IAAI,eAAepI,YAAY,SAAStL,GAAG,MAAM,CAACiB,KAAKjB,EAAE,GAAGkM,MAAMlM,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,OAAO,CAAC2B,QAAQ,KAAK,IAAI,WAAW,IAAI,CAACA,QAAQ,KAAK,IAAIrL,EAAEoR,IAAI,SAAS,CAAC1F,KAAK,SAASqG,MAAM,IAAI,eAAepI,YAAY,SAAStL,GAAG,MAAM,CAACoU,MAAMpU,EAAE,GAAGqU,KAAKrU,EAAE,GAAGsU,MAAMtU,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,CAAC2B,QAAQ,KAAK,IAAI,MAAM1B,YAAY,SAAStL,GAAG,MAAM,CAACuU,KAAKvU,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,CAAC2B,QAAQ,KAAK,OAAO,KAAK,QAAQ1B,YAAY,SAAStL,GAAG,MAAM,CAACwU,OAAOxU,EAAE,GAAG+F,MAAM/F,EAAE,MAAM,CAACiB,KAAK,OAAOoK,QAAQ,CAAC,CAAC2B,QAAQ,YAAY,IAAI,UAAU1B,YAAY,SAAStL,GAAG,MAAM,CAACyQ,QAAQzQ,EAAE,GAAGgN,QAAQyH,SAAQ,KAAM,CAACxT,KAAK,OAAOoK,QAAQ,CAAC,CAAC2B,QAAQ,YAAY,IAAI,UAAU1B,YAAY,SAAStL,GAAG,MAAM,CAACyQ,QAAQzQ,EAAE,GAAGgN,QAAQyH,SAAQ,KAAM,CAACxT,KAAK,cAAcoK,QAAQ,CAAC,uBAAuB,CAACpK,KAAK,cAAcoK,QAAQ,CAAC,cAAc,IAAI,CAAC2B,QAAQ,KAAK,IAAI,sBAAsB1B,YAAY,SAAStL,GAAG,OAAOA,EAAE,GAAG4P,OAAO,CAAC5P,EAAE,OAAO,CAACiB,KAAK,iBAAiBoK,QAAQ,CAAC,uBAAuB,CAACpK,KAAK,iBAAiBoK,QAAQ,CAAC,iBAAiB,IAAI,CAAC2B,QAAQ,KAAK,IAAI,sBAAsB1B,YAAY,SAAStL,GAAG,OAAOA,EAAE,GAAG4P,OAAO,CAAC5P,EAAE,OAAO,CAACiB,KAAK,WAAWoK,QAAQ,CAAC,SAAS,CAACpK,KAAK,WAAWoK,QAAQ,CAAC,WAAW,IAAI,CAAC2B,QAAQ,KAAK,IAAI,QAAQ1B,YAAY,SAAStL,GAAG,OAAOA,EAAE,GAAG4P,OAAO,CAAC5P,EAAE,OAAO,CAACiB,KAAK,qBAAqBoK,QAAQ,CAAC,QAAQC,YAAY,SAAStL,GAAG,MAAM,CAAC0U,OAAO1U,EAAE,MAAM,CAACiB,KAAK,qBAAqBoK,QAAQ,CAAC,OAAO,IAAI,MAAMC,YAAY,SAAStL,GAAG,MAAM,CAAC0U,OAAO1U,EAAE,GAAGsL,YAAYtL,EAAE,MAAM,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,QAAQC,YAAYrL,GAAG,CAACgB,KAAK,cAAcoK,QAAQ,CAAC,CAAC2B,QAAQ,KAAK,QAAQ1B,YAAY,SAAStL,GAAG,MAAM,CAAC2U,MAAM3U,EAAE,MAAM,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,OAAO,CAAC2B,QAAQ,KAAK,IAAI,iBAAiB,IAAI,CAACA,QAAQ,MAAM1B,YAAY,SAAStL,GAAG,MAAM,CAAC4U,UAAU5U,EAAE,GAAGqU,KAAKrU,EAAE,MAAM,CAACiB,KAAK,qBAAqBoK,QAAQ,CAAC,CAAC2B,QAAQ,MAAM1B,YAAYrL,GAAG,CAACgB,KAAK,qBAAqBoK,QAAQ,GAAGC,YAAY,SAAStL,GAAG,OAAO,OAAO,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,SAAS,sBAAsBC,YAAY,SAAStL,GAAG,OAAOA,EAAE,GAAG,SAASA,GAAG,IAAI,IAAIC,EAAED,EAAEgN,QAAQ7M,EAAE,GAAGkB,EAAE,EAAEA,EAAEpB,EAAEwB,OAAOJ,IAAI,CAAC,IAAIK,EAAEzB,EAAEsC,OAAOlB,GAAGK,EAAEmT,gBAAgBnT,GAAGA,EAAEoT,gBAAgBpT,EAAEvB,EAAEyE,KAAK,IAAIuI,OAAO,IAAIzL,EAAEoT,cAAcpT,EAAEmT,cAAc,MAAM1U,EAAEyE,KAAK,CAACoI,QAAQtL,IAAI,MAAM,CAACqT,cAAc,CAAC,CAACL,OAAOvU,EAAEmL,YAAY,SAAStL,GAAG,OAAOA,EAAEyN,KAAK,QAA1Q,CAAmRzN,EAAE,IAAIA,EAAE,KAAK,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,CAAC2B,QAAQ,KAAK,QAAQ1B,YAAY,SAAStL,GAAG,MAAM,CAACiP,MAAMjP,EAAE,MAAM,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,aAAaC,YAAYrL,GAAG,CAACgB,KAAK,cAAcoK,QAAQ,CAAC,CAAC2B,QAAQ,KAAK,IAAI,cAAc,IAAI,CAACA,QAAQ,MAAM1B,YAAY,SAAStL,GAAG,MAAM,CAAC+U,cAAc/U,EAAE,MAAM,CAACiB,KAAK,cAAcoK,QAAQ,CAAC,cAAc,IAAI,iBAAiBC,YAAY,SAAStL,GAAG,MAAM,CAACgV,KAAKhV,EAAE,GAAGiV,SAASjV,EAAE,MAAM,CAACiB,KAAK,gBAAgBoK,QAAQ,CAAC,CAAC2B,QAAQ,OAAO1B,YAAYnL,GAAG,CAACc,KAAK,gBAAgBoK,QAAQ,CAAC,CAAC2B,QAAQ,OAAO1B,YAAYnL,GAAG,CAACc,KAAK,gBAAgBoK,QAAQ,CAAC,CAAC2B,QAAQ,OAAO1B,YAAYnL,GAAG,CAACc,KAAK,OAAOoK,QAAQ,CAAC,gBAAgB,CAACpK,KAAK,OAAOoK,QAAQ,CAAC,OAAO,KAAK,eAAeC,YAAY,SAAStL,GAAG,OAAOA,EAAE,GAAG4P,OAAO,CAAC5P,EAAE,OAAO,CAACiB,KAAK,OAAOoK,QAAQ,CAAC1J,EAAEoR,IAAI,QAAQ,CAAC1F,KAAK,QAAQuG,MAAMtI,YAAYnL,GAAG,CAACc,KAAK,SAASoK,QAAQ,CAAC1J,EAAEoR,IAAI,UAAU,CAAC1F,KAAK,UAAUwG,QAAQvI,YAAYtL,KAAKgN,QAAQhN,EAAE,GAAG+F,SAAS,CAAC9E,KAAK,SAASoK,QAAQ,CAAC1J,EAAEoR,IAAI,YAAY,CAAC1F,KAAK,YAAY0G,UAAUzI,YAAYtL,KAAKgN,QAAQhN,EAAE,GAAG+F,SAAS,CAAC9E,KAAK,YAAYoK,QAAQ,CAAC1J,EAAEoR,IAAI,aAAa,CAAC1F,KAAK,aAAa4G,WAAW3I,YAAYnL,GAAG,CAACc,KAAK,KAAKoK,QAAQ,CAAC1J,EAAEoR,IAAI,MAAM,CAAC1F,KAAK,MAAMsG,IAAIrI,YAAYnL,GAAG,CAACc,KAAK,WAAWoK,QAAQ,CAAC,MAAMC,YAAYrL,GAAG,CAACgB,KAAK,WAAWoK,QAAQ,GAAGC,YAAY,SAAStL,GAAG,OAAO,OAAO,CAACiB,KAAK,IAAIoK,QAAQ,CAAC,aAAa,CAACpK,KAAK,KAAKoK,QAAQ,CAAC1J,EAAEoR,IAAI,MAAM,CAAC1F,KAAK,MAAMmG,KAAK,CAACvS,KAAK,YAAYoK,QAAQ,CAAC1J,EAAEoR,IAAI,MAAM,CAAC1F,KAAK,MAAMmG,IAAIlI,YAAYrL,GAAG,CAACgB,KAAK,YAAYoK,QAAQ,GAAGC,YAAY,SAAStL,GAAG,OAAO,OAAO,CAACiB,KAAK,KAAKoK,QAAQ,CAAC,YAAY1J,EAAEoR,IAAI,WAAW,CAAC1F,KAAK,WAAWoG,QAAQ,OAAOtF,YAAY,SAASnO,EAAEkL,QAAQxI,EAAzlK,MAAimK,SAASwS,gBAAgBlV,EAAEC,GAAG,IAAIE,EAAEgV,UAAUlV,EAAEmV,kBAAkBnV,EAAEmV,gBAAgB,IAAI,IAAI,IAAI/T,EAAE,CAAC6K,MAAM,GAAGqI,KAAK,GAAGC,OAAO,GAAGa,aAAa,GAAGC,OAAO,GAAGnJ,MAAM,IAAIzK,EAAE,EAAEA,EAAE1B,EAAEyB,OAAOC,IAAI,CAAC,IAAIC,EAAE3B,EAAE0B,GAAG,GAAGqB,EAAEpB,EAAEV,KAAKU,EAAE4T,IAAI5T,EAAEV,MAAMU,EAAEV,KAAKQ,QAAQE,EAAE4S,KAAKtU,EAAEuV,MAAMnU,EAAEkT,KAAK3P,KAAKjD,EAAE4S,WAAW,GAAG5S,EAAE8O,QAAQ,CAAC,IAAI/N,EAAE,GAAGA,EAAEf,EAAE8S,QAAQ9S,EAAE8O,QAAQgF,QAAQ,QAAQC,QAAQzV,EAAE0V,KAAKF,QAAQ,QAAQG,QAAQ3V,EAAE0V,MAAM7I,QAAQ+I,MAAMlU,EAAE8O,UAAU,IAAIxQ,EAAEmV,gBAAgBpT,QAAQU,GAAG,CAAC,GAAGzC,EAAEmV,gBAAgBxQ,KAAKlC,GAAG,sBAAsBA,EAAE,IAAIC,EAAE8S,QAAQ,yCAA6C,kBAAkB/S,EAAEC,EAAE8S,QAAQ,iCAAyC,cAAc/S,EAAEC,EAAE8S,QAAQ,6BAAqC,cAAc/S,EAAEC,EAAE8S,QAAQ,6BAAqC,WAAW/S,IAAEC,EAAE8S,QAAQ,2BAA0B,IAAI7S,EAAEuI,QAAQ6E,QAAQzD,aAAa+G,6BAA6BzQ,EAAE,IAAIsI,QAAQ4E,OAAOnN,GAAGC,EAAEiM,KAAKnM,GAAG,IAAIG,EAAEgT,QAAQjT,EAAEyM,QAAQ,GAAG,CAACqG,KAAKjT,EAAEpC,UAAUL,IAAIoB,EAAE6K,MAAM7K,EAAE6K,MAAM0D,OAAO9M,EAAEoJ,OAAO7K,EAAEkT,KAAKlT,EAAEkT,KAAK3E,OAAO9M,EAAEyR,MAAMlN,OAAOC,KAAKxE,EAAE0R,QAAQ1P,kBAAkB9E,GAAGqB,EAAEmT,OAAOxU,GAAG8C,EAAE0R,OAAOxU,MAAMqH,OAAOC,KAAKxE,EAAEwS,QAAQxQ,kBAAkB9E,GAAGqB,EAAEiU,OAAOtV,GAAG8C,EAAEwS,OAAOtV,YAAY2B,EAAEyS,MAAM/S,EAAEiU,OAAO3T,EAAEyS,OAAO,CAACC,KAAK1S,EAAE0S,KAAKC,MAAM3S,EAAE2S,OAAO3S,EAAE6S,OAAOnT,EAAEmT,OAAO7S,EAAE6S,QAAQ7S,EAAEoE,OAAO/C,EAAErB,EAAEV,KAAKU,EAAEuK,MAAM,IAAI7K,EAAE8K,QAAQ9K,EAAE8K,MAAMxK,EAAEV,OAAO,OAAOI,EAAE,SAAS0B,EAAE/C,EAAEG,EAAEkB,GAAGpB,EAAE8V,eAAe9V,EAAE8V,cAAc/V,EAAEG,EAAEA,EAAEkB,GAAG,SAAS2B,EAAEhD,EAAEG,EAAEuB,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAExB,EAAEsB,OAAOE,IAAI,CAAC,IAAIe,EAAEO,EAAEjD,EAAEG,EAAEwB,GAAGD,GAAGzB,EAAEuV,OAAO9S,EAAE4I,YAAY,MAAMjK,EAAE6K,MAAMtH,KAAKlC,IAAI,SAASO,EAAEjD,EAAEC,EAAEE,GAAG,IAAI,IAAIkB,EAAE,GAAGK,EAAE,EAAEA,EAAEzB,EAAEyU,OAAOjT,OAAOC,IAAI,CAAC,IAAIC,EAAEuB,EAAElD,EAAEC,EAAEyU,OAAOhT,GAAGvB,GAAG,OAAOwB,GAAGN,EAAEuD,KAAKjD,GAAG,OAAO,IAAIwJ,QAAQ8E,KAAKjQ,EAAEqB,EAAEpB,EAAEqL,aAAa,SAASpI,EAAElD,EAAEC,EAAEyB,GAAG,GAAG,iBAAiBzB,EAAE,MAAM,SAASA,EAAE,KAAKA,EAAE,GAAGA,aAAakN,OAAO,OAAOlN,EAAE,GAAGA,EAAE+M,QAAQ,OAAO/M,EAAE+M,QAAQvL,OAAO,IAAIxB,EAAE+M,QAAQvL,QAAQJ,EAAEmT,OAAO9H,MAAMzM,EAAE,SAASD,EAAEC,EAAEoB,GAAG,IAAIK,EAAEvB,EAAEH,EAAE,WAAW,OAAO+C,EAAErB,EAAEzB,EAAEsV,IAAItI,KAAKC,UAAUjN,EAAE+M,SAASvL,QAAQuB,EAAEtB,EAAE,CAAC,CAACgT,OAAOzU,EAAE+M,QAAQ2B,MAAM,IAAIpH,cAAcvH,GAAG,MAAM,CAACgN,QAAQhN,MAAMsL,YAAY,CAACmJ,QAAQ,YAAYpT,GAAGK,EAAnM,CAAsM1B,EAAEC,EAAEyB,GAAG,KAAK,GAAGzB,EAAEgP,MAAM,CAAC,GAAG5N,EAAEmT,OAAO9H,MAAM,CAAC,IAAI/K,EAAE1B,EAAEgP,MAAM,OAAO,IAAI5N,EAAEgU,aAAarT,QAAQL,IAAIN,EAAEgU,aAAazQ,KAAKjD,GAAG,CAACsN,MAAM,IAAK5N,EAAEmT,OAAO9H,MAAM,QAAQO,KAAKC,UAAUvL,GAAG,cAAcsL,KAAKC,UAAUvL,GAAG,OAAOA,EAAG,KAAK,OAAO1B,EAAE,GAAGA,EAAE8U,cAAc,OAAO,SAAS/U,EAAEC,EAAEoB,GAAG,IAAIK,EAAEzB,EAAE8U,cAAcpT,EAAExB,EAAEH,EAAE,kBAAkB,OAAOgD,EAAErB,EAAED,EAAEL,GAAGM,EAA9E,CAAiF3B,EAAEC,EAAEyB,GAAG,GAAGzB,EAAE+U,KAAK,OAAO,SAAShV,EAAEC,EAAEoB,GAAG,OAAOpB,EAAEgV,UAAU,IAAI,KAAK,OAAO,SAASjV,EAAEC,EAAEoB,GAAG,IAAIK,EAAEvB,EAAEH,EAAE,SAAS,OAAOgD,EAAEtB,EAAE,CAAC,CAACgT,OAAO,CAACzU,EAAE+U,OAAO,CAACN,OAAO,CAACzU,EAAE+U,KAAKtT,GAAG4J,YAAY,CAACmJ,QAAQ,eAAepT,GAAGK,EAA3H,CAA8H1B,EAAEC,EAAEoB,GAAG,IAAI,KAAK,OAAO,SAASrB,EAAEC,EAAEoB,GAAG,IAAIK,EAAEvB,EAAEH,EAAE,SAAS,OAAOgD,EAAEtB,EAAE,CAAC,CAACgT,OAAO,IAAI,CAACA,OAAO,CAACzU,EAAE+U,KAAKtT,GAAG4J,YAAY,CAACmJ,QAAQ,eAAepT,GAAGK,EAArH,CAAwH1B,EAAEC,EAAEoB,GAAG,IAAI,KAAK,OAAO,SAASrB,EAAEC,EAAEoB,GAAG,IAAIK,EAAEvB,EAAEH,EAAE,SAAS,OAAOgD,EAAEtB,EAAE,CAAC,CAACgT,OAAO,CAACzU,EAAE+U,MAAM1J,YAAY,CAACmJ,QAAQ,OAAO,CAACC,OAAO,GAAGpJ,YAAY,CAACmJ,QAAQ,YAAYpT,GAAGK,EAA3I,CAA8I1B,EAAEC,EAAEoB,IAAze,CAA8erB,EAAEC,EAAEyB,GAAG,GAAGzB,EAAE2U,UAAU,OAAO,SAAS5U,EAAEC,EAAEyB,GAAG,IAAIC,EAAExB,EAAEH,EAAE,cAAc0C,EAAErB,EAAEiU,OAAOrV,EAAE2U,WAAW,IAAIlS,EAAE,MAAM,IAAIgD,MAAM,iBAAiBzF,EAAE2U,WAAW,GAAGlS,EAAE2R,KAAK5S,SAASxB,EAAEoU,KAAK5S,OAAO,MAAM,IAAIiE,MAAM,4BAA4B,IAAI,IAAI/C,EAAE,CAACrC,UAAUoB,GAAGkB,EAAE,EAAEA,EAAEF,EAAE2R,KAAK5S,OAAOmB,IAAI,CAAC,IAAIC,EAAE1C,EAAEH,EAAE,cAAc2C,EAAED,EAAE2R,KAAKzR,IAAIC,EAAEG,EAAEH,EAAE,CAAC5C,EAAEoU,KAAKzR,IAAIlB,GAAG,OAAOsB,EAAErB,EAAEe,EAAE4R,MAAM3R,GAAGhB,EAAlU,CAAqU3B,EAAEC,EAAEyB,GAAG,GAAGzB,EAAE0U,MAAM,CAAC,GAAGjT,EAAEzB,EAAE0U,OAAO,OAAOzR,EAAElD,EAAE0B,EAAEzB,EAAE0U,OAAOjT,GAAG,MAAM,IAAIgE,MAAM,qBAAqBzF,EAAE0U,OAAO,MAAM,IAAIjP,MAAM,uBAAuBuH,KAAKC,UAAUjN,KAAK,SAASkV,UAAU,IAAInV,EAAE,GAAG,OAAO,SAASC,GAA0B,OAAOA,EAAE,KAA1BD,EAAEC,IAAID,EAAEC,IAAI,GAAG,IAAkB,IAAI+V,SAAS/K,+BAA+BjL,GAAG,IAAIC,EAAEE,EAAEF,EAAE4K,eAAe1K,EAAE,SAASH,GAAG,SAASC,EAAED,EAAEC,EAAE0B,GAAG,OAAO,MAAMA,IAAIA,EAAE,IAAI,UAAU3B,EAAEuH,cAAcvH,GAAG,OAAO,SAASA,EAAEC,GAAG,IAAI0B,EAAE,IAAI,OAAOA,GAAG,WAAWsL,KAAKC,UAAUlN,EAAEiB,MAAMU,GAAG,iBAAiB3B,EAAEqL,QAAQ9D,IAAI7F,GAAG+L,KAAK,MAAM,IAAIzN,EAAEsL,cAActL,EAAEsL,YAAYmJ,UAAUzU,EAAEsL,YAAYrL,EAAED,EAAEsL,YAAYmJ,UAAU9S,GAAG,oBAAoBN,EAAElB,EAAEH,EAAEsL,aAAa,WAAW,CAAC2K,aAAY,KAAMtU,EAAG,IAAnR,CAAwR3B,EAAEC,MAAMwN,KAAK,WAAW,KAAK9L,EAAE,IAAI,SAASxB,EAAEH,GAAG,IAAIC,EAAED,EAAEoN,WAAWuB,MAAM,MAAM,GAAG,IAAI1O,EAAEwB,OAAO,MAAM,CAACxB,EAAE,GAAGuD,QAAQ,aAAa,KAAK,IAAI,IAAIrD,EAAE,KAAKkB,EAAEpB,EAAEgC,MAAM,GAAGP,EAAE,EAAEA,EAAEL,EAAEI,OAAOC,IAAI,CAAC,IAAIC,EAAE,OAAO4P,KAAKlQ,EAAEK,IAAIC,GAAGA,EAAE,GAAGF,SAASJ,EAAEK,GAAGD,SAAS,OAAOtB,GAAGwB,EAAE,GAAGF,OAAOtB,EAAEsB,UAAUtB,EAAEwB,EAAE,IAAI,OAAO,OAAOxB,EAAEF,EAAEA,EAAEsH,cAAcvH,GAAG,OAAOA,EAAEiC,MAAM,EAAE9B,EAAEsB,UAAUtB,EAAEH,EAAEiC,MAAM9B,EAAEsB,QAAQzB,KAAK,SAASqB,EAAErB,EAAEC,EAAEE,GAAG,IAAIkB,EAAE,OAAOA,EAAEwN,MAAMwB,QAAQrQ,GAAGA,EAAEA,EAAEoN,WAAWuB,MAAM,MAAMxO,EAAEA,GAAG,GAAGkB,EAAEkG,cAAcvH,EAAEqB,GAAG,IAAIK,GAAE,EAAG,OAAO,GAAGL,GAAGlB,EAAE8V,cAAcvU,GAAE,GAAIA,EAAEzB,EAAED,EAAEA,KAAKyN,KAAK,MAAM,SAAS/L,EAAE1B,GAAG,OAAOA,aAAamN,OAAOnN,EAAEoN,WAAWpN,EAAEiP,MAAMjP,EAAEiP,MAAMhC,KAAKC,UAAUlN,GAAG,IAAI2B,EAAE,SAAS3B,EAAEC,GAAG,GAAGD,EAAEwU,OAAO0B,eAAelW,EAAEwU,OAAO0B,aAAa,aAAavU,EAAE3B,EAAEwU,OAAO0B,cAAc,MAAM,IAAIxQ,MAAM,yBAAyB1F,EAAEwU,OAAO0B,cAAc,OAAOvU,EAAE3B,EAAEwU,OAAO0B,cAAclW,EAAEC,IAAI,OAAO0B,EAAEgS,GAAGhS,EAAEwU,SAASxU,EAAEyU,WAAW,SAASpW,EAAEG,GAAG,IAAIkB,EAAE,kDAAkDrB,EAAEqW,QAAQ,KAAK,OAAOhV,GAAG,6CAA6CA,GAAG,mBAAmBA,GAAG,oCAAoCA,GAAGrB,EAAEuU,KAAK9G,KAAK,MAAMpM,GAAG,oBAAoBA,GAAG,cAAcrB,EAAEwU,OAAO9H,MAAM,MAAMrL,GAAG,oBAAoBpB,EAAED,EAAEkM,MAAMvK,EAAEyU,WAAWE,uBAAuB,KAAKjV,GAAG,oBAAoB4L,KAAKC,UAAUlN,EAAEmM,OAAO,KAAK9K,GAAG,MAAMA,GAAG,iFAAiFA,GAAG,iCAAiCA,GAAG,aAAaA,GAAG,aAAalB,EAAE,iBAAgBkB,GAAG,OAAS,WAAWM,EAAEyU,WAAWE,sBAAsB,CAACC,OAAO,0CAA0CC,UAAU,sDAAsDC,QAAQ,oDAAoDC,OAAO,6BAA6BlP,GAAG,MAAM7F,EAAEgV,OAAOhV,EAAEiV,SAAS,SAAS5W,EAAEG,GAAG,IAAIkB,EAAE,kDAAkDrB,EAAEqW,QAAQ,KAAK,OAAOhV,GAAG,6CAA6CA,GAAG,oCAAoCA,GAAGrB,EAAEuU,KAAK9G,KAAK,MAAMpM,GAAG,eAAerB,EAAEwU,OAAO9H,MAAM,MAAMrL,GAAG,qBAAqBpB,EAAED,EAAEkM,MAAMvK,EAAEyU,WAAWE,uBAAuB,OAAMjV,GAAG,qBAAqB4L,KAAKC,UAAUlN,EAAEmM,OAAO,OAAS,yDAAyDxK,EAAEkV,GAAGlV,EAAEmV,OAAOnV,EAAEoV,aAAa,SAAS/W,EAAE0B,GAAG,IAAIgB,EAAE,iDAAiD1C,EAAEqW,QAAQ,KAAK,OAAO3T,GAAG,4CAA4CA,GAAG,UAAUA,GAAG,uBAAuBA,GAAGrB,EAAElB,EAAEH,EAAEuU,KAAK9G,KAAK,OAAO,MAAM,KAAK/K,GAAG,kBAAkBA,GAAG,cAAc1C,EAAEwU,OAAO9H,MAAM,MAAMhK,GAAG,oBAAoBrB,EAAEpB,EAAED,EAAEkM,MAAMvK,EAAEoV,aAAaT,uBAAuB,SAAS,CAACL,aAAY,IAAK,MAAMvT,GAAG,oBAAoBuK,KAAKC,UAAUlN,EAAEmM,OAAO,KAAKzJ,GAAG,QAAQA,GAAG,8EAA8EA,GAAG,mCAAkCA,GAAG,YAAc,cAAchB,EAAE,iBAAiBC,EAAEoV,aAAaT,sBAAsB,CAACC,OAAO,oBAAoBC,UAAU,6BAA6BC,QAAQ,6BAA6BC,OAAO,aAAalP,GAAG,MAAM7F,EAAEqV,GAAGrV,EAAEsV,WAAW,SAASjX,EAAEG,GAAG,IAAIkB,EAAE,kDAAkDrB,EAAEqW,QAAQ,KAAK,OAAOhV,GAAG,6CAA6CA,GAAG,6DAA6DA,GAAG,kBAAkBA,GAAG,gDAAgDA,GAAGrB,EAAEqV,aAAa9N,cAAcvH,GAAG,MAAM,eAAeA,EAAE,cAAcyN,KAAK,IAAIpM,GAAGrB,EAAEuU,KAAK9G,KAAK,MAAMpM,GAAG,KAAKA,GAAG,6BAA6BA,GAAG,kBAAkBA,GAAG,0BAA0BA,GAAG,OAAOA,GAAG,KAAKA,GAAG,6BAA6BA,GAAG,iDAAiDA,GAAG,4CAA4CA,GAAG,uBAAuBA,GAAG,6CAA6CA,GAAG,2CAA2CA,GAAG,OAAOA,GAAG,KAAKA,GAAG,4BAA4BA,GAAG,oBAAoBA,GAAG,gCAAgCA,GAAG,kEAAkEA,GAAG,OAAOA,GAAG,KAAKA,GAAG,wFAAwFA,GAAG,KAAKA,GAAG,wBAAwBA,GAAG,uCAAuCA,GAAG,kCAAkCA,GAAG,2BAA2BA,GAAG,OAAOA,GAAG,KAAKA,GAAG,+BAA+BA,GAAG,YAAYrB,EAAEwU,OAAO9H,MAAM,MAAMrL,GAAG,kBAAkBpB,EAAED,EAAEkM,MAAMvK,EAAEsV,WAAWX,sBAAsB,MAAM,MAAMjV,GAAG,kBAAkB4L,KAAKC,UAAUlN,EAAEmM,OAAO,MAAM9K,GAAG,QAAOA,GAAG,MAAQ,6BAA6BM,EAAEsV,WAAWX,sBAAsB,CAACC,OAAO,oBAAoBC,UAAU,6BAA6BC,QAAQ,6BAA6BC,OAAO,aAAalP,GAAG,MAAM7F,GAAG3B,EAAEkL,QAAQlL,EAAEkL,QAAQ/K,IAAIF,EAAE+V,SAAS7V,EAAEF,EAAEkL,YAAY+L,KAAK,SAASlX,EAAEC,GAAGD,EAAEmX,IAAIC,MAAM,SAASnX,EAAE,OAAO,SAASoX,UAAUrX,EAAEC,GAAG,IAAIE,EAAE,GAAGH,EAAEkM,MAAMpH,kBAAkB9E,GAAGG,EAAEyE,KAAK5E,EAAEiB,SAASjB,EAAEkM,MAAMpH,kBAAkB9E,GAAGA,EAAEqL,QAAQvG,kBAAkB9E,GAAGA,EAAEgN,SAAShN,EAAEiP,OAAOjP,EAAEmP,cAAchC,SAAS,IAAIhN,EAAE6B,QAAQhC,IAAIkX,KAAKjX,EAAE,qBAAqBD,EAAE,iBAAiB,SAASsX,KAAKtX,EAAEC,GAAGA,EAAEkX,MAAMlX,EAAEkX,IAAIrK,QAAQyK,QAAQF,UAAUrX,EAAEC,GAAG,IAAIuX,OAAOF,KAAKG,SAAS,EAAEC,KAAK,GAAGC,UAAU,CAACC,IAAI,CAAClP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,SAASC,EAAE,GAAG0I,SAASkP,IAAI,CAACnP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,SAASmP,IAAI,CAACpP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,SAASoP,IAAI,CAACrP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,SAASqP,IAAI,CAACtP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,mBAAmBC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASsP,IAAI,CAACvP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,SAASuP,IAAI,CAACxP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,WAAWC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASwP,IAAI,CAACzP,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,aAAaC,EAAE,GAAG0I,SAASyP,KAAK,CAAC1P,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,gBAAgBC,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAMA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAAS0P,KAAK,CAAC3P,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,+BAA+B2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,aAAaC,EAAE,GAAG0I,QAAQ2P,GAAG,CAAC5P,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,KAAKA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,kBAAkB4P,GAAG,CAAC7P,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,KAAKA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,kBAAkB6P,IAAI,CAAC9P,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,IAAIA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,SAAS8P,IAAI,CAAC/P,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,IAAIA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,SAAS+P,IAAI,CAAChQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,IAAIA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,SAASgQ,IAAI,CAACjQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,IAAIA,EAAE,GAAG0I,UAAU1I,EAAE,GAAG0I,SAASiQ,IAAI,CAAClQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,IAAIA,EAAE,GAAG0I,eAAe1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,aAAakQ,IAAI,CAACnQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,YAAYA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASmQ,IAAI,CAACpQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,YAAYA,EAAE,GAAG0I,SAASoQ,IAAI,CAACrQ,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,eAAeC,EAAE,GAAG0I,iCAAiC3I,cAAcC,EAAE,GAAG0I,iCAAiC3I,gBAAgBC,EAAE,GAAG0I,iCAAiC3I,gBAAgBC,EAAE,GAAG0I,QAAQA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,SAASqQ,IAAI,CAACtQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,KAAK,IAAIE,EAAE,IAAIF,EAAE,GAAG0I,OAAO,IAAI,IAAI3I,EAAE,EAAEA,EAAEC,EAAEwB,OAAOzB,IAAIG,GAAG,IAAIF,EAAED,GAAG2I,OAAO,OAAOxI,EAAE,MAAM8Y,IAAI,CAACvQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,KAAK,IAAIE,EAAE,KAAKF,EAAE,GAAG0I,OAAO,IAAI,IAAI3I,EAAE,EAAEA,EAAEC,EAAEwB,OAAOzB,IAAIG,GAAG,IAAIF,EAAED,GAAG2I,OAAO,OAAOxI,EAAE,KAAKF,EAAEwB,YAAYyX,KAAK,CAACxQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,KAAK,IAAIE,EAAE,IAAIF,EAAE,GAAG0I,OAAO,IAAI,IAAI3I,EAAE,EAAEA,EAAEC,EAAEwB,OAAOzB,IAAIG,GAAG,IAAIF,EAAED,GAAG2I,OAAO,OAAOxI,EAAE,MAAMgZ,KAAK,CAACzQ,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,gBAAgB1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAASyQ,KAAK,CAAC1Q,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,eAAe1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS0Q,KAAK,CAAC3Q,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,gBAAgB1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS2Q,KAAK,CAAC5Q,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,uBAAuB1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS4Q,OAAO,CAAC7Q,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS6Q,OAAO,CAAC9Q,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,6BAA6BA,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS8Q,KAAK,CAAC/Q,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wCAAwC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS+Q,SAAS,CAAChR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wCAAwC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,SAASgR,SAAS,CAACjR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wCAAwC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,SAASiR,SAAS,CAAClR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wCAAwC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,cAAcC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASkR,OAAO,CAACnR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,mCAAmC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASmR,KAAK,CAACpR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASoR,GAAG,CAACrR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,qCAAqC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,QAAQC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASqR,IAAI,CAACtR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASsR,IAAI,CAACvR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,YAAYC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASuR,IAAI,CAACxR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,WAAWC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASwR,IAAI,CAACzR,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,WAAWC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASyR,KAAK,CAAC1R,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,iLAAiLC,EAAE,GAAG0I,2GAA2G,GAAG1I,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,QAAQA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS0R,OAAO,CAAC3R,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,8BAA8BC,EAAE,GAAG0I,SAAS,GAAG1I,EAAEwB,OAAO,EAAE,KAAKkH,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,4BAA4B,GAAGC,EAAEwB,OAAOxB,EAAE,GAAG0I,KAAK,MAAM2R,OAAO,CAAC5R,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,8BAA8Bsa,OAAO,CAAC7R,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,8BAA8Bua,GAAG,CAAC9R,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,GAAGA,EAAE,GAAG0I,iBAAiB1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,mBAAmB8R,IAAI,CAAC/R,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,0CAA0C2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,SAASC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS+R,QAAQ,CAAChS,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,2DAA2DA,oCAAoCC,EAAE,GAAG0I,kCAAkC3I,mEAAmEA,sBAAsBA,MAAM2I,KAAK,CAAC3I,EAAEC,IAAI,IAAID,iBAAiBA,iBAAiBC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,oBAAoBgS,IAAI,CAACjS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,aAAaA,EAAE,GAAG0I,SAASiS,QAAQ,CAAClS,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,2DAA2DA,oCAAoCC,EAAEA,EAAEwB,OAAO,GAAGkH,UAAUA,KAAK,CAAC3I,EAAEC,KAAK,IAAIE,EAAE,GAAGF,EAAE,GAAG0I,OAAO,OAAO,GAAG1I,EAAEwB,OAAOtB,GAAG,IAAIF,EAAE,GAAG0I,OAAO,GAAG1I,EAAEwB,SAAStB,GAAG,IAAIF,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ,IAAI3I,iBAAiBA,cAAcG,cAAcwI,KAAK,CAACD,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,2DAA2DA,oCAAoCC,EAAE,GAAG0I,UAAUA,KAAK,CAAC3I,EAAEC,IAAI,IAAID,iBAAiBA,UAAUC,EAAE,GAAG0I,gBAAgB1G,MAAM,CAACyG,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,2DAA2DA,oCAAoCC,EAAE,GAAG0I,UAAUA,KAAK,CAAC3I,EAAEC,IAAI,IAAID,iBAAiBA,oBAAoBC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,gBAAgBkS,MAAM,CAACnS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,sBAAsBA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASmS,OAAO,CAACpS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,sBAAsBA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS8R,IAAI,CAAC/R,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,0CAA0C2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,SAASC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS+R,QAAQ,CAAChS,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,2DAA2DA,oCAAoCC,EAAE,GAAG0I,kCAAkC3I,mEAAmEA,sBAAsBA,MAAM2I,KAAK,CAAC3I,EAAEC,IAAI,IAAID,iBAAiBA,iBAAiBC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,oBAAoBoS,SAAS,CAACrS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,gCAAgCA,EAAE,GAAG0I,SAASqS,aAAa,CAACtS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,oCAAoCA,EAAE,GAAG0I,SAASsS,OAAO,CAACvS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,SAASuS,OAAO,CAACxS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,SAASwS,OAAO,CAACzS,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,SAASyS,OAAO,CAAC1S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,4BAA4BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS0S,MAAM,CAAC3S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS2S,OAAO,CAAC5S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,4BAA4BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS4S,OAAO,CAAC7S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS6S,OAAO,CAAC9S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS8S,MAAM,CAAC/S,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,0BAA0BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS+S,OAAO,CAAChT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASgT,OAAO,CAACjT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASiT,OAAO,CAAClT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASkT,MAAM,CAACnT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,0BAA0BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASmT,MAAM,CAACpT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,0BAA0BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASoT,OAAO,CAACrT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASqT,OAAO,CAACtT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASsT,MAAM,CAACvT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,0BAA0BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASD,MAAM,CAAC1I,EAAEC,IAAI,GAAGic,OAAO,CAACvT,KAAK,CAAC3I,EAAEC,IAAI,2BAA2BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASwT,KAAK,CAACzT,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,0BAA0BA,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASyT,SAAS,CAAC1T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,+BAA+Boc,MAAM,CAAC3T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,gBAAgBqc,WAAW,CAAC5T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,kCAAkCA,EAAE,GAAG0I,SAAS4T,IAAI,CAAC7T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,mBAAmBA,EAAE,GAAG0I,QAAQ1I,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAM6T,IAAI,CAAC9T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,kBAAkBA,EAAE,GAAG0I,QAAQ1I,EAAEwB,OAAO,EAAExB,EAAE,GAAG0I,KAAK,MAAM8T,IAAI,CAAC/T,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,qBAAqBA,EAAE,GAAG0I,8BAA8B1I,EAAE,GAAG0I,cAAc+T,KAAK,CAAChU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,oCAAoC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAASgU,SAAS,CAACjU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,oCAAoC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,eAAeC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASiU,MAAM,CAAClU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,oCAAoC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,WAAWC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASkU,IAAI,CAACnU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASmU,IAAI,CAACpU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,wDAAwDA,+DAA+DA,uCAAuC2I,KAAK,CAAC3I,EAAEC,IAAI,aAAaD,cAAcC,EAAE,GAAG0I,8CAA8C3I,kBAAkBA,qBAAqBA,eAAeA,gDAAgDA,WAAWC,EAAE,GAAG0I,8CAA8C3I,kBAAkBA,kBAAkBA,kBAAkBA,oDAAoDA,UAAUC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,aAAaoU,SAAS,CAACrU,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,iBAAiB+c,QAAQ,CAACtU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,qBAAqB2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASsU,IAAI,CAACvU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,qCAAqC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGA,EAAEwB,OAAO,GAAGzB,cAAcC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ,GAAG3I,gBAAgBC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAASuU,KAAK,CAACxU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,qDAAqDA,uDAAuDA,kEAAkEA,gEAAgEA,iEAAiEA,iEAAiEA,kEAAkEA,iEAAiEA,qEAAqEA,yCAAyC2I,KAAK,CAAC3I,EAAEC,IAAI,+BAA+BD,gBAAgBC,EAAE,GAAG0I,8BAA8B1I,EAAE,GAAG0I,4CAA4C1I,EAAE,GAAG0I,wBAAwB3I,iBAAiBC,EAAE,GAAG0I,4CAA4C3I,iBAAiBC,EAAE,GAAG0I,mDAAmD3I,wBAAwBC,EAAE,GAAG0I,iBAAiB3I,gCAAgCA,mBAAmBC,EAAE,GAAG0I,iBAAiB3I,iBAAiBC,EAAE,GAAG0I,sBAAsB3I,oBAAoBC,EAAE,GAAG0I,iBAAiB3I,eAAeC,EAAE,GAAG0I,sBAAsB3I,oBAAoBC,EAAE,GAAG0I,iBAAiB3I,kBAAkBC,EAAE,GAAG0I,sBAAsB3I,qBAAqBC,EAAE,GAAG0I,iBAAiB3I,eAAeC,EAAE,GAAG0I,sBAAsB3I,oBAAoBC,EAAE,GAAG0I,iBAAiB3I,qBAAqBC,EAAE,GAAG0I,sBAAsB3I,oBAAoBC,EAAE,IAAI0I,iBAAiB3I,cAAcC,EAAE,IAAI0I,kBAAkB3I,eAAeC,EAAE,IAAI0I,wBAAwB3I,iBAAiBmd,SAAS,CAACzU,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,qCAAqC2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS0F,KAAK,CAAC3F,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,kCAAkCA,iBAAiBC,EAAE,GAAG0I,iBAAiB3I,sBAAsB2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAASyU,MAAM,CAAC1U,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,GAAGA,EAAE,GAAG0I,QAAQ0U,KAAK,CAAC3U,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,iBAAiB2I,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAAS2U,IAAI,CAAC5U,MAAM,CAAC1I,EAAEC,IAAI,GAAG0I,KAAK,CAAC3I,EAAEC,IAAI,GAAGA,EAAEwB,OAAO,kBAAkBxB,EAAE,GAAG0I,QAAQ,eAAe1I,EAAE,GAAG0I,QAAQ1I,EAAE,GAAG0I,SAAS4U,IAAI,CAAC7U,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,eAAeC,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,QAAQA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAAS6U,KAAK,CAAC9U,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,gBAAgBC,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,QAAQA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS8U,KAAK,CAAC/U,MAAM,CAAC1I,EAAEC,IAAI,GAAGD,gBAAgBC,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,SAAS1I,EAAE,GAAG0I,QAAQA,KAAK,CAAC3I,EAAEC,IAAI,GAAGD,UAAUC,EAAE,GAAG0I,UAAU,MAAM+U,mBAAmB3d,mBAAmB,OAAO0X,SAASA,SAAS,KAAK,IAAIA,SAAS1X,mBAAmB,MAAM,CAAC2I,MAAM,GAAGC,KAAK,GAAGgV,aAAa,IAAI5d,oBAAoBC,EAAEC,EAAEE,EAAEkB,EAAEK,GAAG,IAAIC,EAAE,CAACic,QAAQ,CAAC5d,EAAEC,KAAKA,EAAEsH,KAAKtH,IAAI,IAAI0B,EAAE+b,mBAAmBG,aAAa5d,EAAEyd,mBAAmBI,YAAY3d,EAAEkB,EAAEK,GAAG1B,EAAE0I,OAAO/G,EAAE+G,MAAM1I,EAAE2I,MAAMhH,EAAEgH,QAAQ3I,GAAG+d,SAAS,CAAC/d,EAAEC,MAAMD,EAAE0d,mBAAmBG,aAAa5d,EAAED,EAAEG,EAAEkB,EAAEK,IAAIiH,MAAM,IAAI3I,GAAGge,QAAQ,CAAChe,EAAEC,KAAK,IAAI0B,EAAE,CAAC,CAACe,EAAEzC,EAAEge,WAAWje,EAAEC,EAAEie,SAAStb,EAAEzC,IAAIH,EAAE2d,aAAa3d,EAAE2d,aAAa/N,OAAOjO,GAAG,IAAIe,EAAEzC,EAAE,SAAS8F,MAAMpD,EAAEgV,UAAUjV,GAAGE,EAAE,MAAMlB,EAAE,IAAIgc,mBAAmBS,YAAYtb,EAAE,GAAG,IAAI,IAAI7C,EAAE,EAAEA,EAAEC,EAAE,WAAWwB,OAAOzB,IAAI,CAAC,IAAI2B,EAAE+b,mBAAmBI,YAAYnc,EAAE+b,mBAAmBG,aAAa5d,EAAE,WAAWD,GAAG2B,EAAExB,EAAE,EAAEkB,EAAEK,GAAGmB,EAAE7C,GAAG2B,EAAE,IAAImB,EAAE,GAAG,IAAI,IAAI7C,KAAK4C,EAAEC,GAAGD,EAAE5C,GAAGyI,MAAM1I,EAAE2d,aAAa3d,EAAE2d,aAAa/N,OAAO/M,EAAE5C,GAAG0d,cAAc,OAAO3d,EAAE0I,OAAO,GAAG5F,KAAKH,EAAE+F,MAAM9F,EAAEC,MAAM7C,EAAE2I,MAAM,GAAGhG,EAAEgG,KAAK/F,EAAEC,KAAK7C,GAAGoe,UAAU,CAACpe,EAAEC,KAAK,IAAI0B,EAAE1B,EAAE,YAAYyC,EAAErB,EAAEM,GAAG,MAAMe,IAAIA,EAAE2E,OAAOC,KAAKjG,GAAGI,OAAOJ,EAAEM,GAAGe,GAAG,IAAIC,EAAE+a,mBAAmBG,aAAa5d,EAAE,aAAayd,mBAAmBI,YAAY3d,EAAE,EAAEkB,EAAEK,GAAG,OAAO1B,EAAE0I,OAAO/F,EAAE+F,MAAM1I,EAAE2I,KAAK,QAAQjG,QAAQC,EAAEgG,QAAQ3I,GAAGqe,UAAU,CAACre,EAAEC,KAAK,IAAIE,EAAEkB,EAAEpB,GAAG,OAAO,MAAME,IAAIA,EAAEkH,OAAOC,KAAKjG,GAAGI,OAAOJ,EAAEpB,GAAGE,GAAGH,EAAE2I,MAAM,QAAQxI,yBAAyBA,UAAUH,GAAGse,UAAU,CAACte,EAAEC,MAAM,iBAAiBA,GAAGA,aAAasN,UAAUvN,EAAE2I,MAAM,IAAI1I,MAAMD,GAAGue,OAAO,CAACve,EAAEC,KAAK,MAAMA,EAAE8F,QAAQ/F,EAAE2I,MAAM,GAAG1I,EAAE8F,SAAS/F,GAAGwe,QAAQ,CAACxe,EAAEC,KAAK,IAAI0B,EAAE,MAAMD,EAAE,IAAIgc,mBAAmBS,YAAYne,EAAE0I,OAAO,GAAG/G,wBAAwB1B,EAAEwB,WAAWzB,EAAE2I,MAAM,SAAS,IAAIjG,EAAE,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAE1C,EAAEwB,OAAOkB,IAAI,CAAC,IAAIC,EAAE8a,mBAAmBG,aAAa5d,EAAE0C,GAAG+a,mBAAmBI,YAAY3d,EAAEkB,EAAEK,GAAG,QAAQ2F,OAAOC,KAAKrH,EAAE0C,IAAI,GAAG3C,EAAE0I,OAAO,GAAG/G,KAAKgB,QAAQC,EAAE+F,SAASjG,GAAGE,EAAE8F,MAAM1I,EAAE2I,MAAM,GAAGhH,KAAKgB,QAAQC,EAAE+F,SAAS,OAAO3I,EAAE2I,MAAM,UAAUhH,QAAQ3B,EAAE0I,OAAOhG,EAAE1C,IAAI,OAAO6O,MAAMwB,QAAQrQ,GAAGA,EAAEuH,KAAKvH,IAAIqH,OAAOC,KAAKtH,GAAGuH,KAAKpH,IAAIF,EAAE0B,EAAExB,GAAGF,EAAED,EAAEG,UAAUkH,OAAOC,KAAKtH,GAAGuH,KAAKpH,IAAIF,EAAE0B,EAAExB,GAAGF,EAAED,EAAEG,OAAOF,EAAEF,kBAAkBC,EAAEC,EAAE,GAAGyX,KAAK,GAAG,IAAIvX,EAAEud,mBAAmBG,aAAa7d,EAAE0d,mBAAmBI,YAAY,EAAEpG,KAAKzX,GAAG,OAAOE,EAAEuI,MAAM,6BAA6BvI,EAAEuI,oBAAoBvI,EAAEwI,KAAK,wBAAwBxI,EAAEwI,QAAQxI,GAAUkH,OAAO8L,OAAO,CAAC7S,UAAU,KAAKme,QAAQf,yBAAqBgB,KAAKzT,+BAA+BjL,GAAG,IAAIC,EAAEA,EAAE4K,eAAe7K,EAAEkL,QAAQlL,EAAEkL,QAAQ,CAACyT,IAAI,SAAS3e,GAAG,MAAM,CAACue,OAAO,CAACxY,MAAM/F,KAAK4e,IAAI,SAAS5e,GAAG,MAAM,CAACse,UAAUte,IAAI6e,MAAM,SAAS7e,EAAEC,GAAG,MAAM,CAAC+d,QAAQ,CAACc,UAAU7e,EAAE8e,QAAQ,CAAChZ,MAAM/F,MAAMgf,OAAO,SAAShf,EAAEC,GAAG,MAAM,CAACme,UAAU,CAACa,WAAWjf,EAAEkf,YAAYjf,KAAKkf,OAAO,SAASnf,GAAG,MAAM,CAACqe,UAAUre,KAAKC,EAAEye,KAAK,CAACC,IAAI,SAAS3e,GAAG,MAAM,CAACue,OAAO,CAACxY,MAAM/F,KAAK4e,IAAI,SAAS5e,GAAG,MAAM,CAACse,UAAUte,IAAI6e,MAAM,SAAS7e,EAAEC,GAAG,MAAM,CAAC+d,QAAQ,CAACc,UAAU7e,EAAE8e,QAAQ,CAAChZ,MAAM/F,MAAMgf,OAAO,SAAShf,EAAEC,GAAG,MAAM,CAACme,UAAU,CAACa,WAAWjf,EAAEkf,YAAYjf,KAAKkf,OAAO,SAASnf,GAAG,MAAM,CAACqe,UAAUre,QAAQ,SAASof,uBAAuB5O,QAAQ,IAAI6O,OAAOX,KAAKW,OAAOV,IAAI,KAAK,IAAIhI,OAAO,CAACzL,QAAQ,IAAI,OAAOzC,KAAK+H,QAAQmG,OAAOzL,QAAQ,SAAS8H,QAAQhT,EAAEC,GAAG,IAAIE,EAAE,MAAMmf,OAAOje,EAAEke,OAAO7d,GAAG8d,eAAexf,GAAG2B,EAAEyd,uBAAuB1d,GAAGgB,EAAE,IAAIyI,QAAQ4E,OAAOpO,GAAG,IAAIN,GAAGqB,EAAE,CAAC,MAAM1C,EAAE0C,EAAEoM,KAAK7O,GAAGD,IAAIG,EAAEud,mBAAmB+B,WAAWzf,EAAEsP,QAAQ,IAAI,MAAM,CAACgQ,OAAOje,EAAEqe,QAAQvf,GAAG,SAASwf,SAAS,IAAI3f,EAAE,GAAG,MAAM,CAACD,MAAME,GAAGD,GAAGC,GAAG2f,KAAK,IAAI5f,GAAG,SAAS6f,kBAAkB7f,GAAG,OAAOA,EAAEuH,KAAKvH,GAAG,IAAImL,QAAQ8E,KAAKjQ,EAAEiB,KAAKjB,EAAEqL,QAAQrL,EAAEsL,eAAerL,EAAEE,EAAEkB,KAAK,IAAIK,EAAE1B,EAAEsL,YAAYrL,EAAEE,EAAEkB,GAAG,OAAO,OAAOK,EAAE,MAAM,iBAAiBA,GAAGA,EAAEO,QAAQP,EAAE6T,IAAIpV,GAAGuB,QAAQ,SAAS8d,eAAexf,GAAG,IAAIC,EAAE,IAAIkL,QAAQ4E,OAAO8P,kBAAkBvM,4BAA4BlF,aAAakF,4BAA4BnF,YAAY,CAACzB,MAAM4G,4BAA4BpF,QAAQ/N,EAAEwf,SAASte,EAAE,GAAGK,EAAE,GAAG,IAAI,GAAGzB,EAAE6O,KAAK9O,GAAGC,EAAEqP,QAAQ,GAAG,CAAC,IAAI3N,EAAEuT,gBAAgBjV,EAAEqP,QAAQ,GAAG,CAACyG,cAAc,SAAS/V,EAAEC,EAAEE,GAAGuB,EAAE1B,GAAG,CAACC,EAAEE,MAAMqX,OAAO7V,EAAE,CAACwV,IAAIhX,IAAIkB,EAAE2U,SAASrU,EAAE,YAAY,MAAM3B,GAAGG,EAAEiX,MAAMpX,GAAG,MAAM,CAACsf,OAAOnf,EAAEyf,OAAOE,UAAUpe,EAAE6d,OAAOle,GAAG,IAAI0e,YAAY,KAAK,IAAI,IAAIC,cAAc,oBAAoBrJ,QAAQ,mBAAmBA,OAAOlB,SAASkB,OAAOlB,QAAQ,mBAAmB,mBAAmBwK,yBAAyBA,wBAAwB,mBAAmB,mBAAmBxK,SAASA,QAAQ,kBAAkBsK,YAAYC,cAAcE,OAAO,MAAMlgB,IAAI,SAASmgB,aAAangB,EAAEC,GAAG,OAAOmgB,OAAOC,KAAKrgB,EAAE,UAAUoN,SAASnN,EAAE,QAAQ,QAAQ,SAASqgB,0BAA0BtgB,EAAEC,EAAEE,GAAG,IAAIkB,OAAE,IAASpB,EAAE,KAAKA,EAAEyB,EAAEye,aAAangB,OAAE,IAASG,GAAGA,GAAGwB,EAAED,EAAEM,QAAQ,KAAK,IAAI,EAAEU,EAAEhB,EAAEc,UAAUb,IAAIN,EAAE,wBAAwBA,EAAE,IAAI,OAAO,SAASrB,GAAG,OAAO,IAAI+f,YAAYrd,EAAE2E,OAAOkM,OAAO,GAAGvT,EAAE,CAACyI,MAAK,MAAO,SAAS8X,eAAevgB,EAAEC,GAAG,IAAIE,EAAEqgB,KAAKxgB,GAAG,GAAGC,EAAE,CAAC,IAAI,IAAIoB,EAAE,IAAIkC,WAAWpD,EAAEsB,QAAQC,EAAE,EAAEC,EAAExB,EAAEsB,OAAOC,EAAEC,IAAID,EAAEL,EAAEK,GAAGvB,EAAEgR,WAAWzP,GAAG,OAAO6L,OAAOkT,aAAavN,MAAM,KAAK,IAAIwN,YAAYrf,EAAEyC,SAAS,OAAO3D,EAAE,SAASwgB,UAAU3gB,EAAEC,EAAEE,GAAG,IAAIkB,OAAE,IAASpB,EAAE,KAAKA,EAAEyB,EAAE6e,eAAevgB,OAAE,IAASG,GAAGA,GAAGwB,EAAED,EAAEM,QAAQ,KAAK,IAAI,EAAEU,EAAEhB,EAAEc,UAAUb,IAAIN,EAAE,wBAAwBA,EAAE,IAAIsB,EAAE,IAAIie,KAAK,CAACle,GAAG,CAAC2K,KAAK,2BAA2B,OAAO3F,IAAImZ,gBAAgBle,GAAG,SAASme,4BAA4B9gB,EAAEC,EAAEE,GAAG,IAAIkB,EAAE,OAAO,SAASK,GAAG,OAAOL,EAAEA,GAAGsf,UAAU3gB,EAAEC,EAAEE,GAAG,IAAI+f,OAAO7e,EAAEK,IAAI,IAAIqf,UAAU,qBAAqB1Z,OAAOmG,UAAUJ,SAASgD,KAAK,oBAAoBtD,QAAQA,QAAQ,GAAG,SAASkU,WAAW,OAAOD,UAAU,SAASE,4BAA4BjhB,EAAEC,EAAEE,GAAG,OAAO6gB,WAAWV,0BAA0BtgB,EAAEC,EAAEE,GAAG2gB,4BAA4B9gB,EAAEC,EAAEE,GAAG,IAAI+gB,cAAcD,4BAA4B,unNAAunN,muXAAkuX,GAAI,MAAME,QAAQphB,cAAcS,KAAKgF,WAAW,IAAIT,WAAWhF,iBAAiBC,EAAEC,GAAG,KAAKO,KAAKgF,YAAYxF,GAAGC,GAAG,MAAM,IAAIyF,MAAM,0CAA0ClF,KAAKgF,WAAWrB,iBAAiBnE,EAAEC,GAAGF,mBAAmBC,EAAEC,GAAG,KAAKO,KAAKgF,YAAYxF,GAAGC,GAAG,MAAM,IAAIyF,MAAM,4CAA4ClF,KAAKgF,WAAW4b,oBAAoBphB,EAAEC,GAAGF,WAAWC,GAAG,OAAOQ,KAAK6gB,OAAO,IAAIH,cAAc,IAAII,UAAUrhB,EAAEE,KAAK,IAAIkB,EAAE,GAAGb,KAAK6gB,QAAQ,IAAI3Z,IAAI1H,KAAKQ,KAAK6gB,OAAOzd,YAAY,CAAC2d,IAAIvhB,IAAIQ,KAAK6gB,OAAOG,QAAQhhB,KAAKihB,eAAejhB,KAAK6gB,OAAO9W,UAAUvK,IAAIqB,EAAErB,EAAEsK,KAAKoX,KAAK3d,QAAQ4d,KAAK,mBAAmB1hB,EAAEoB,GAAGb,KAAK6gB,OAAO9W,UAAU/J,KAAKohB,sBAAsB7hB,iBAAiBC,IAAIQ,KAAKgF,WAAWoF,SAAS,iBAAiB5K,EAAEsK,MAAMvG,QAAQC,IAAI,kBAAkBD,QAAQC,IAAIhE,IAAID,eAAeC,IAAI+D,QAAQC,IAAI,WAAWD,QAAQC,IAAIhE,IAAID,KAAKC,GAAGQ,KAAK6gB,QAAQrhB,GAAGQ,KAAK6gB,OAAOzd,YAAY,CAAC6E,KAAKzI,IAAID,mBAAmBC,GAAG,IAAIQ,KAAK6gB,SAASrhB,EAAEmG,IAAI,MAAM,IAAIT,MAAM,2CAA2ClF,KAAK6gB,OAAOzd,YAAY,CAACuC,IAAInG,EAAEmG,IAAID,UAAUlG,EAAEkG,UAAUD,UAAUjG,EAAEiG,YAAYlG,UAAUC,GAAG,IAAIC,EAAED,EAAEgC,QAAQ,MAAM,WAAWhC,EAAE6hB,OAAO,EAAE5hB,IAAID,EAAEA,EAAE6hB,OAAO5hB,GAAG6hB,YAAY9hB,GAAG+hB,aAAa,eAAe/hB,KAAKQ,KAAK6gB,OAAOzd,YAAY,CAAC6E,KAAKzI,IAAIgJ,OAAOgZ,aAAaC,QAAQ,mBAAmBC,WAAWC,YAAYJ,aAAa,iBAAiB/hB,IAAID,YAAYS,KAAK6gB,OAAOe,YAAY5hB,KAAK6gB,OAAO,MAAM,SAASgB,SAASriB,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAED,EAAEsiB,YAAYniB,EAAEF,EAAEoO,KAAKhN,EAAErB,EAAEuiB,WAAW,KAAKpiB,EAAEkB,GAAG,CAAC,GAAG,OAAOiM,KAAKtN,EAAEwiB,QAAQriB,IAAI,CAACkB,EAAElB,EAAE,EAAE,MAAMA,IAAIA,EAAEF,EAAEoO,KAAK,IAAI3M,GAAG,EAAE,KAAKvB,GAAG,GAAG,CAAC,GAAG,OAAOmN,KAAKtN,EAAEwiB,QAAQriB,IAAI,CAACuB,EAAEvB,EAAE,MAAMA,IAAI,OAAOuB,GAAG,GAAGA,IAAI1B,EAAEyiB,SAAS,CAACpU,KAAK3M,EAAEiJ,GAAG,GAAG,CAAC0D,KAAKhN,EAAE,EAAEsJ,GAAG,KCe578E,IAAC+X,OAOAC,QDtBy88EzS,IAAI0S,KAAezX,QAAQA,QAAcuT,KAAKmE,MCyB3/8E,MAAMC,EAAI,CAACC,EAAQC,EAAO9b,IACxB+b,SAASC,eAAeH,GAAQ5e,iBAAiB6e,EAAO9b,GAG1D,IAAIic,UAAYF,SAASG,SAASC,OAElCP,EAAE,aAAc,SAAS,KACvB,MAAMQ,EAAkBH,UAAY,qBACpCT,OAAS,IAAItd,OACbsd,OAAOhB,KAAK,iBAAkB4B,GAC9BZ,OAAOa,UAGTT,EAAE,aAAc,SAAS,IAAMJ,OAAOxa,SAEtC4a,EAAE,oBAAqB,SAAS,KAC9BJ,OAAOc,WAAW,UAAiBL,UAAY,kBAC/CT,OAAOc,WAAW,WAAiBL,UAAY,mBAC/CT,OAAOc,WAAW,gBAAiBL,UAAY,wBAC/CT,OAAOc,WAAW,cAAiBL,UAAY,wBAC/CT,OAAOc,WAAW,cAAiBL,UAAY,sBAC/CT,OAAOc,WAAW,YAAiBL,UAAY,oBAC/CT,OAAOc,WAAW,aAAiBL,UAAY,wBAGjDL,EAAE,gBAAiB,SAASW,UAC1Bd,QAAU,IAAIxB,QACXuB,SACDA,OAAOve,iBAAiB,kBAAkBnE,GAAK2iB,QAAQe,mBAAmB1jB,KAC1E2iB,QAAQxe,iBAAiB,kBAAkBnE,GAAK0iB,OAAOiB,iBAAiB3jB,YAEpE2iB,QAAQjB,KAAKyB,cAGrB,MAAMS,aAAe,KACnB,IAAGlB,OAWE,MAAM,IAAIhd,MAAM,mEAVnB,IACE,MAAM4Z,OAAEA,EAAMI,QAAEA,GAAY1M,QAAS6Q,cAAc1B,WAAY2B,eAAe3B,YAC3EzC,IACD3b,QAAQ4d,KAAKmC,eAAe3B,YAC5BO,OAAOja,KAAKiX,IAEd,MAAOqE,GACPhgB,QAAQ+E,MAAM,sCAAuCib,KAMrDC,OAASP,UACb,IAAGd,UAAWsB,SAKT,MAAM,IAAIve,MAAM,sEALE,CACrB,MAAMwe,EAAO7B,SAAS4B,UACtBlgB,QAAQ4d,KAAKuC,GACbvB,QAAQla,KAAKyb,KAKjBpB,EAAE,aAAc,SAAS,IAAMc,iBAC/Bd,EAAE,eAAgB,SAASW,SAAYO,WAIvClB,EAAE,cAAe,SAAS,KACxB,IAAGJ,OA6BE,MAAM,IAAIhd,MAAM,mEA5BnB,IACE,MAAM8B,EAAK,MACLxB,EAAQ,UACRme,EAAY,EACRzB,OAAOgB,mBAAmBlc,EAAIxB,EAAOme,GAC/C,MAAMC,EAAcpkB,IAClB,MAAMsR,EAAItR,EAAEqkB,QAAQrb,OAAOsb,WACrB9S,EAAIxR,EAAEukB,QAAQvb,OAAOwb,YAC3BvB,SAASC,eAAe,cAAcuB,UAAY,GAAGC,WAAWpT,GAAGqT,QAAQ,MAAMD,WAAWlT,GAAGmT,QAAQ,KACvGjC,OAAOkC,uBAAuBpd,EAAI,CAAE8J,EAAGE,KAGzCyR,SAAS9e,iBAAiB,WAAWnE,IAClB,KAAdA,EAAE6kB,SACH5B,SAAS9e,iBAAkB,YAAaigB,GAAa,MAIzDnB,SAAS9e,iBAAiB,SAASnE,IAClB,KAAZA,EAAE8kB,QACH7B,SAASC,eAAe,cAAcuB,UAAY,GAClDxB,SAAS7B,oBAAqB,YAAagD,GAAa,OAG5D,MAAOL,GACPhgB,QAAQ+E,MAAM,uDAAwDib,OAQ1Ed,SAAS9e,iBAAiB,WAAWnE,IACjB,IAAbA,EAAE6kB,UAAmB7kB,EAAE+kB,SAAW/kB,EAAEglB,SACvCpB,eAEqB,IAAb5jB,EAAE6kB,SAAiB7kB,EAAEilB,QAC7BjB"}